=======================================
Enigmatica5 0.3.8 --> Enigmatica5 0.4.0
=======================================

Added:
- AutoRegLib
- Better Bedrock Generator
- Camera Mod
- Cloth Config API (Forge)
- Clumps
- Cooking for Blockheads
- DefaultSettings
- Dude! Where's my Horse?
- Extra Disks
- Extra Tags
- Extreme sound muffler
- Give Mod
- Item Filters
- Light Overlay (Rift/Forge/Fabric)
- Lithium
- Ma Enchants
- Modular Routers
- More Dragon Eggs
- MysticalLib
- NetherPortalFix
- Passthrough Signs
- Phosphor
- Portality
- Quark
- Quark Oddities
- Quickstack
- Scaffolding behavior
- Softer Hay Bales
- Wither Skeleton Tweaks

Updated:
	Apotheosis (Apotheosis-1.15.2-3.0.6.jar --> Apotheosis-1.15.2-3.0.7.jar):
		Apotheosis-1.15.2-3.0.7.jar:
			Actually register the Deadly Module's world gen feature.

	Aquaculture 2 (Aquaculture-1.15.2-2.0.9.jar --> Aquaculture-1.15.2-2.0.13.jar):
		Aquaculture-1.15.2-2.0.13.jar:
			* Re-implemented & fixed Tackle Box shift-clicking

		Aquaculture-1.15.2-2.0.12.jar:
			* Temporarily disabled shift-clicking in the Tackle Box, due to item vanishing bug
			* Doubled Neptune's Bounty's rarity
			* Updated Korean localization (Thanks to @[mindy15963](https://github.com/TeamMetallurgy/Aquaculture/commits?author=mindy15963))

		Aquaculture-1.15.2-2.0.11.jar:
			* Prevent crash when more than 256 compostables have been registered to the Composter

		Aquaculture-1.15.2-2.0.10.jar:
			* Added Neptunium Block tag
			* Add fish as compostables in Composter/Worm Farm, depending on weight (Can be turned off in the config)
			* Fixed Fillet Knives showing up as an empty tag in the Fish Fillet recipes on servers

	Biomes O' Plenty (Biomes O' Plenty 1.15.2-10.0.0.349 --> Biomes O' Plenty 1.15.2-10.0.0.353):
		Biomes O' Plenty 1.15.2-10.0.0.353:
			github:
			* Update zh_cn.json (#1570)
			* * Update zh_cn.json
			* Hey, I fixed the error and completed some translations,
			* Can you merge it? Thank you in advance!
			* * Update zh_cn.json

		Biomes O' Plenty 1.15.2-10.0.0.352:
			github:
			* Correct inconsistent tabs/spaces

		Biomes O' Plenty 1.15.2-10.0.0.351:
			Adubbz:
			* Fix ModFeatures indentation

		Biomes O' Plenty 1.15.2-10.0.0.350:
			alexthepokemon:
			* Register all BoP features now into Forge's feature Registry

	Bookshelf (Bookshelf-1.15.2-5.1.4.jar --> Bookshelf-1.15.2-5.3.9.jar):
		Bookshelf-1.15.2-5.3.9.jar:
			* Fixed curse enchantment modifier name. - Tyler Hancock
			Huge thanks to my supporters on [Patreon](https://www.patreon.com/Darkhax?MCChangelog?Bookshelf)
			* Pongo Sapiens
			* Darkosto

		Bookshelf-1.15.2-5.3.8.jar:
			* Added modifier enchantment base. - Tyler Hancock
			Huge thanks to my supporters on [Patreon](https://www.patreon.com/Darkhax?MCChangelog?Bookshelf)
			* Pongo Sapiens
			* Darkosto

		Bookshelf-1.15.2-5.3.7.jar:
			* Added support for enchantment entries. - Tyler Hancock
			Huge thanks to my supporters on [Patreon](https://www.patreon.com/Darkhax?MCChangelog?Bookshelf)
			* Pongo Sapiens
			* Darkosto

		Bookshelf-1.15.2-5.3.6.jar:
			* Ticked version as new features were added. - Tyler Hancock
			* getCurrentServer now makes use of Forge's internal state. - Tyler Hancock
			* Added helper methods for getting mods from registry items and getting a mod name as a text component. - Tyler Hancock
			Huge thanks to my supporters on [Patreon](https://www.patreon.com/Darkhax?MCChangelog?Bookshelf)
			* Pongo Sapiens
			* Darkosto

		Bookshelf-1.15.2-5.2.5.jar:
			* Removed BiomeUtils as this is now covered by Forge.
			* Added utility method to check if a BlockPos is within a slime chunk.
			* Added support for ILootCondition and IGlobalLootModifier in RegistryHelper.
			* Added support for injecting/merging loot table files.
			* Added helper to get the current server instance.
			* Added loot conditions for biome tag, dimension type, redstone power, village, raid, slime chunk, and structure bounds.
			* Added global loot modifiers for silk touch, conversions, the vanilla recipe types, and clearing the results.
			Huge thanks to my supporters on [Patreon](https://www.patreon.com/Darkhax?MCChangelog?Bookshelf)
			* Pongo Sapiens
			* Darkosto

	Botany Pots (BotanyPots-1.15.2-2.0.1.jar --> BotanyPots-1.15.2-2.0.5.jar):
		BotanyPots-1.15.2-2.0.5.jar:
			* Fix Simple Farming turnip crop growing insanely fast. - Tyler Hancock
			Like the mod? Consider following me on [Twitter](https://twitter.com/darkhaxdev) and joining the [Discord]()
			Huge thanks to my supporters on [Patreon](https://www.patreon.com/Darkhax?MCChangelog?BotanyPots)
			* Pongo Sapiens
			* Darkosto

		BotanyPots-1.15.2-2.0.4.jar:
			* Buffed grass, mycelium, and podzol. - Tyler Hancock
			* Added support for the metal bushes mod. - Tyler Hancock
			Like the mod? Consider following me on [Twitter](https://twitter.com/darkhaxdev) and joining the [Discord]()
			Huge thanks to my supporters on [Patreon](https://www.patreon.com/Darkhax?MCChangelog?BotanyPots)
			* Pongo Sapiens
			* Darkosto

		BotanyPots-1.15.2-2.0.3.jar:
			* Added Biomes O' Plenty support.
			* Added Botania support
			* Added Mystical Agriculture support
			* Added Snad support
			* Added Wither Rose vanilla crop.
			* Buffed Bone Meal's effect on pots.
			* Re-Added XL Food Mod support
			* Re-Added Simple Farming support
			* Re-Added Peanut Mod support
			Like the mod? Consider following me on [Twitter](https://twitter.com/darkhaxdev) and joining the [Discord]()
			Huge thanks to my supporters on [Patreon](https://www.patreon.com/Darkhax?MCChangelog?BotanyPots)
			* Pongo Sapiens
			* Darkosto

		BotanyPots-1.15.2-2.0.2.jar:
			* Updated min bookshelf version to fix crops resetting. - Tyler Hancock
			* Vanilla crop blocks now use oredict. - Tyler Hancock
			Like the mod? Consider following me on [Twitter](https://twitter.com/darkhaxdev) and joining the [Discord]()
			Huge thanks to my supporters on [Patreon](https://www.patreon.com/Darkhax?MCChangelog?BotanyPots)
			* Pongo Sapiens
			* Darkosto

	Bountiful (Bountiful-1.15.2-3.0.0.jar --> Bountiful-1.15.2-3.1.0.jar):
		Bountiful-1.15.2-3.1.0.jar:
			Bountiful v3.1.0 update
			Requires [Kottle](https://www.curseforge.com/minecraft/mc-mods/kottle) to work.
			Changelog can be [viewed here!](https://github.com/ejektaflex/Bountiful/blob/develop/CHANGELOG.md)

	Carpet Stairs Mod (Carpet Stairs Mod mc1.15 v1.3 --> Carpet Stairs Mod mc1.15 v1.3.1):
		Carpet Stairs Mod mc1.15 v1.3.1:
			Updated mod to run on the latest version of Forge.
			Fixed a bug that would cause crash
			Fixed some z-fighting issue with the double stairs/carpet block models
			Removed unused json model

	Click Machine (ClickMachine-1.15.2-3.0.1.jar --> ClickMachine-1.15.2-3.0.2.jar):
		ClickMachine-1.15.2-3.0.2.jar:
			Added an event handler to prevent someone adding my fake players to the world.

	Corpse ([1.15.2] Corpse 1.15.2-1.0.2 --> [1.15.2] Corpse 1.15.2-1.0.3):
		[1.15.2] Corpse 1.15.2-1.0.3:
			* Added chinese translation

	CraftTweaker (CraftTweaker-1.15.2-6.0.0.9.jar --> CraftTweaker-1.15.2-6.0.0.10.jar):
		CraftTweaker-1.15.2-6.0.0.10.jar:
			Current version: 6.0.0.10
			* [Fixed Shapeless recipes not displaying tags correctly](https://github.com/CraftTweaker/CraftTweaker/commit/6e82504eda010a4bbcdae083829eec2bf1ab91c2) - Jared - Thu Mar 26 16:09:10 2020
			* [update forge and mappings](https://github.com/CraftTweaker/CraftTweaker/commit/25f90e830ba4811abd30e1a86873aee4c2515525) - Jared - Fri Feb 28 00:20:53 2020
			* [Get the recipetype safer, hopefully. Close #927](https://github.com/CraftTweaker/CraftTweaker/commit/ea4a96caf94cbf43103ea16a4f47a5d2ea8a2577) - Jared - Wed Feb 26 23:09:51 2020
			* [Fixed scripts bigger than 32k not working on servers](https://github.com/CraftTweaker/CraftTweaker/commit/250194edf597fc06b93c5017ad4d61e6398091d7) - Jared - Wed Feb 26 20:40:48 2020
			* [made it possible to cast a string to an int and double](https://github.com/CraftTweaker/CraftTweaker/commit/634576292be37aba8cc5b6aef5a33e4ff900937e) - Jared - Tue Feb 18 23:13:45 2020
			* [update jar file name and mods.toml](https://github.com/CraftTweaker/CraftTweaker/commit/41da80a7a30c6ff96286ccdc6039f4a0359e45e3) - Jared - Fri Feb 7 21:14:27 2020
			* [port to 1.15.2](https://github.com/CraftTweaker/CraftTweaker/commit/a8be724fd6eb4a8e5c49af0bdaa4ec3e96af2fff) - Jared - Fri Feb 7 11:55:03 2020
			* [add a way to check if a MCTag is a certain type of tag](https://github.com/CraftTweaker/CraftTweaker/commit/10a2b04483ce4032c6ffb8803b567e2dcbedce5a) - Jared - Fri Feb 7 11:39:02 2020
			* [update MC and forge versions in toml and gradle](https://github.com/CraftTweaker/CraftTweaker/commit/457020bbf055aea2e4e6aad015309e6e9ccfacdf) - Jared - Wed Jan 22 21:36:34 2020
			* [update changelog commit](https://github.com/CraftTweaker/CraftTweaker/commit/c9ef77624a3c438180d561f3ea05916e4738c83d) - Jared - Wed Jan 22 21:36:34 2020
			* [port to 1.15.1](https://github.com/CraftTweaker/CraftTweaker/commit/b21c1f5da8ec69929d34647873c9729be2458e4e) - Jared - Wed Jan 22 21:36:34 2020
			* [update JEI](https://github.com/CraftTweaker/CraftTweaker/commit/c1c4434a134398e429ba4ba62f7affe05e57f367) - Jared - Wed Jan 22 21:35:54 2020
			* [update forge to 1.15.1](https://github.com/CraftTweaker/CraftTweaker/commit/39f45343748414de06395a6e2a23b185f317452c) - Jared - Wed Jan 22 21:35:54 2020
			* [wrapper classes docs are now /vanilla/api/](https://github.com/CraftTweaker/CraftTweaker/commit/e524914f5b057a9c007dca1310638c2bcac53d31) - Jared - Sun Jan 19 22:18:46 2020
			* [move all generated docs to /vanilla/api](https://github.com/CraftTweaker/CraftTweaker/commit/6a1d9f4f69025c20e450feef2ca561c7ab54ad03) - Jared - Sun Jan 19 22:15:13 2020
			* [no more value = for docs annotation](https://github.com/CraftTweaker/CraftTweaker/commit/ba576f0a25678a6451080d23403ae3954d41d914) - Jared - Sun Jan 19 22:03:38 2020
			* [Updated ZC](https://github.com/CraftTweaker/CraftTweaker/commit/f3b595aa161e93f6ff90788b53fbea04ee9b265d) - kindlich - Sat Jan 11 13:58:34 2020
			* [make YAML output be in folders](https://github.com/CraftTweaker/CraftTweaker/commit/0de76eb4e3008edf0963c65d83ee971b4963c20c) - Jared - Fri Jan 10 22:55:02 2020
			* [ignore docsOut and src/generated](https://github.com/CraftTweaker/CraftTweaker/commit/c7f9f97ed3398bc61b0bf81f1050284fb0c6ca79) - Jared - Fri Jan 10 22:54:34 2020
			* [update ZC to fix server crashes](https://github.com/CraftTweaker/CraftTweaker/commit/7c703a57a06fc9bb2ea7d2ecde673e7ff18f89ef) - Jared - Fri Jan 10 22:23:43 2020
			* [update ZC](https://github.com/CraftTweaker/CraftTweaker/commit/224ad15e53c38b430dbd4230922d82f7f5b59977) - Jared - Fri Jan 10 19:21:41 2020
			* [Updated ZC](https://github.com/CraftTweaker/CraftTweaker/commit/5d9f252e406156b81bcadd720b95e8a9ddca43f4) - kindlich - Fri Jan 10 19:06:10 2020
			* [Added IIngredient#asIData](https://github.com/CraftTweaker/CraftTweaker/commit/1f4761cdf63d7b8b9bd878ac2a34940a36a4eb17) - kindlich - Fri Jan 10 19:00:45 2020
			* [Updated Doc location for Biome and BiomeSpawnEntry](https://github.com/CraftTweaker/CraftTweaker/commit/02cf6a708b3d163174ddfd31276807d941b78cdc) - kindlich - Fri Jan 10 18:58:57 2020
			* [update ZS](https://github.com/CraftTweaker/CraftTweaker/commit/2839aed162ff778c0acd40472474a3fde50e83bc) - Jared - Wed Jan 8 17:53:38 2020
			* [Removed test code for no wrapper file](https://github.com/CraftTweaker/CraftTweaker/commit/69fa5381ed1f6457342fd34fde78155ecbb4143b) - kindlich - Sun Jan 5 20:23:39 2020
			* [DocumentProcessor: Clear the output directory first](https://github.com/CraftTweaker/CraftTweaker/commit/d64087adf887972238ba1ec7482ce8e83676f395) - kindlich - Sun Jan 5 20:20:35 2020
			* [Updated ZC](https://github.com/CraftTweaker/CraftTweaker/commit/9f960d9c5a301a942c48512e4ab2085a08d83ea9) - kindlich - Sun Jan 5 19:51:50 2020
			* [Added some advancements as being wrapped](https://github.com/CraftTweaker/CraftTweaker/commit/57cc981aee01abaa689b872ab851d63a7db4b366) - kindlich - Wed Jan 1 23:45:25 2020
			* [Fixed some issues with the wrapper Processor](https://github.com/CraftTweaker/CraftTweaker/commit/e22c6972784858c8118eb1485496f1ea1eb655c8) - kindlich - Wed Jan 1 23:44:59 2020
			* [Forgot Some these](https://github.com/CraftTweaker/CraftTweaker/commit/54a5854f42414293ff8c6ea897f9c86a45956665) - kindlich - Wed Jan 1 22:56:12 2020
			* [Event Wrapper and Comment cleanup](https://github.com/CraftTweaker/CraftTweaker/commit/13501a232699331ea342199b86ec938692e621ee) - kindlich - Wed Jan 1 21:35:22 2020
			* [Updated ZC](https://github.com/CraftTweaker/CraftTweaker/commit/100bfb38141ec271a31e04e342f82cad6dc0a4a4) - kindlich - Wed Jan 1 16:43:17 2020
			* [Removed 2nd MCWorld](https://github.com/CraftTweaker/CraftTweaker/commit/d82e4ef51904c0378c4025973a14dfdbb5b0da7c) - kindlich - Wed Jan 1 16:30:19 2020
			* [Removed unused buildSrc](https://github.com/CraftTweaker/CraftTweaker/commit/0b782c48bb8d36950a00546258d0d63d9f98154c) - kindlich - Wed Jan 1 16:27:20 2020
			* [Made Event listeners unregister themselves on a reload](https://github.com/CraftTweaker/CraftTweaker/commit/592e7d9862449a6f7285a65250be98296e3820d3) - kindlich - Wed Jan 1 16:25:55 2020
			* [Only remove sidedActions when on the same side](https://github.com/CraftTweaker/CraftTweaker/commit/7d15faf7ae87abbc96d060cdc832b6cc957a7002) - kindlich - Wed Jan 1 16:24:36 2020
			* [Added missing Document and ZenWrapper annotations](https://github.com/CraftTweaker/CraftTweaker/commit/42cd76858c4bb9901ac234f2bd2cc9bc342738d5) - kindlich - Wed Jan 1 16:23:38 2020
			* [More work on wrappers](https://github.com/CraftTweaker/CraftTweaker/commit/a5f6a37ecd56898eefd2408b9e4177cba5927aba) - kindlich - Wed Jan 1 16:22:16 2020
			* [Committing stuff before I do something stupid](https://github.com/CraftTweaker/CraftTweaker/commit/a93ea989e169113d715fa84e4144b8ca23491b06) - kindlich - Tue Dec 31 23:03:43 2019
			* [Committing stuff before I do something stupid](https://github.com/CraftTweaker/CraftTweaker/commit/2c785dbd40fa4e6ad62d6574347041f85fa7984f) - kindlich - Tue Dec 31 21:46:11 2019
			* [CTTooltipEvent handler working now.](https://github.com/CraftTweaker/CraftTweaker/commit/b43eefc90d69e5111b7a17fdac383bbf0487fc78) - kindlich - Fri Dec 27 16:52:33 2019
			* [Some minor cleanup for Annotation Processors](https://github.com/CraftTweaker/CraftTweaker/commit/2e0897e84a4fbd7733d63d1fb054f80411fe929b) - kindlich - Thu Dec 26 23:07:54 2019
			* [Simple yaml generation and fixed multiple classes being generated](https://github.com/CraftTweaker/CraftTweaker/commit/2912e29a540d1241f7616e3641a9a95f276019a1) - kindlich - Mon Dec 23 13:31:29 2019
			* [Some cleanup](https://github.com/CraftTweaker/CraftTweaker/commit/18591fa7ac102e2cf11c172d9bc5e76b92b10624) - kindlich - Mon Dec 23 13:06:59 2019
			* [Some more work on Expansions and declaredModid](https://github.com/CraftTweaker/CraftTweaker/commit/91eb925ba4ecdf5a03498677a572383547fd04cc) - kindlich - Mon Dec 23 12:53:29 2019
			* [Started working on expansion classes](https://github.com/CraftTweaker/CraftTweaker/commit/4b68e0e43bd13b86d94b227b97a67094ae0981ea) - kindlich - Sun Dec 22 23:23:31 2019
			* [Normal classes should be running now](https://github.com/CraftTweaker/CraftTweaker/commit/6b06dd25f2b4adb58c72eec818d5f87cafdc98f7) - kindlich - Sun Dec 22 21:15:31 2019
			* [Base classes for Document Processor rewrite](https://github.com/CraftTweaker/CraftTweaker/commit/34fd8a748133dbc8a0c609ae9e21ef41336252d4) - kindlich - Sat Dec 21 22:42:42 2019
			* [Start working on annotation processor rewrite](https://github.com/CraftTweaker/CraftTweaker/commit/bd6cf0c2cf376516896fa603fa3a9bc41911760f) - kindlich - Fri Dec 20 14:04:26 2019
			* [Replaced IEventHandler with Consumer](https://github.com/CraftTweaker/CraftTweaker/commit/e0fcd372ad7143fa3a69f42d0c4fd59cf00e2986) - kindlich - Sat Dec 14 21:25:17 2019
			* [event test](https://github.com/CraftTweaker/CraftTweaker/commit/98d834eed872ba45bb9ecd24b4bbab249b9f031a) - Jared - Thu Dec 12 18:43:10 2019

	Crafting Station (craftingstation-3.0.5.jar --> craftingstation-3.1.0.jar):
		craftingstation-3.1.0.jar:
			Switched from server config to using block_entity_types tag, now depends on [Extra Tags](https://www.curseforge.com/minecraft/mc-mods/extra-tags)

	Cucumber Library (Cucumber-1.15.2-3.0.1.jar --> Cucumber-1.15.2-3.0.3.jar):
		Cucumber-1.15.2-3.0.3.jar:
			Release 3.0.3 for MC 1.15.2
			Changes:
			* Add cucumber-tags.json file for use by my other mods

		Cucumber-1.15.2-3.0.2.jar:
			No changelog available.

	Curios API (curios-FORGE-1.15.2-2.0.1.jar --> curios-FORGE-1.15.2-2.0.2.1.jar):
		curios-FORGE-1.15.2-2.0.2.1.jar:
			Changelog
			All notable changes to this project will be documented in this file.
			The format is based on [Keep a Changelog]() and this project does not adhere to [Semantic Versioning](). This project uses MCVERSION-MAJORMOD.MAJORAPI.MINOR.PATCH.
			[2.0.2.1] - 2020.03.26
			Added
			* Added Chinese localization (thank you EnterFor!)
			[2.0.2] - 2020.03.21
			Added
			* Added support for curio attribute modifiers using NBT tags, simply replace "AttributeModifiers" with "CurioAttributeModifiers"
			[2.0.1] - 2020.03.08
			Added
			* [API] ICurio#onCurioAnimate - Called every tick client-side only while curio is equipped
			[2.0] - 2020.02.24
			Fixed
			* Fixed compatibility issue with Ensorcellation's Soulbound enchantment [#41](https://github.com/TheIllusiveC4/Curios/issues/41)
			[2.0-beta2] - 2020.01.26
			Changed
			* Updated to 1.15.2
			Added
			* Re-added JEI integration
			* Added Japanese localization (thanks MORIMORI0317!)
			Fixed
			* Fixed generic curio slot icon showing missing texture
			[2.0-beta] - 2019.12.30
			Changed
			* Ported to 1.15.1
			* [API] ICurio#doRender -> ICurio#render
			* Curio rendering no longer automatically applies sneaking translations
			* Curio slot icons need to be manually stitched into the block texture atlas

		curios-FORGE-1.15.2-2.0.2.jar:
			Changelog
			All notable changes to this project will be documented in this file.
			The format is based on [Keep a Changelog]() and this project does not adhere to [Semantic Versioning](). This project uses MCVERSION-MAJORMOD.MAJORAPI.MINOR.PATCH.
			[2.0.2] - 2020.03.21
			Added
			* Added support for curio attribute modifiers using NBT tags, simply replace "AttributeModifiers" with "CurioAttributeModifiers"
			[2.0.1] - 2020.03.08
			Added
			* [API] ICurio#onCurioAnimate - Called every tick client-side only while curio is equipped
			[2.0] - 2020.02.24
			Fixed
			* Fixed compatibility issue with Ensorcellation's Soulbound enchantment [#41](https://github.com/TheIllusiveC4/Curios/issues/41)
			[2.0-beta2] - 2020.01.26
			Changed
			* Updated to 1.15.2
			Added
			* Re-added JEI integration
			* Added Japanese localization (thanks MORIMORI0317!)
			Fixed
			* Fixed generic curio slot icon showing missing texture
			[2.0-beta] - 2019.12.30
			Changed
			* Ported to 1.15.1
			* [API] ICurio#doRender -> ICurio#render
			* Curio rendering no longer automatically applies sneaking translations
			* Curio slot icons need to be manually stitched into the block texture atlas

	Cyclic (Cyclic-1.15.2-0.1.11.jar --> Cyclic-1.15.2-0.2.0.jar):
		Cyclic-1.15.2-0.2.0.jar:
			Step Height enchantment added only for leggings.
			Block Reach enchant ported.
			Minimum forge_version 31.1.25.
			Fluid tank rendering rebuilt, fixed blockstates and autodrain. zh_cn.lang updated by sandtechnology.
			Fixed game crash with Emerald Carrot, item now works as expected.
			Fixed some language file issues.
			Fixed Torch Launcher velocity and distance back up to 1.12 speeds.
			Fixed Auto Torch going into negative durability.
			Fixed boomerange dupe.

	Dark Utilities (DarkUtilities-1.15.2-3.0.1.jar --> DarkUtilities-1.15.2-3.0.2.jar):
		DarkUtilities-1.15.2-3.0.2.jar:
			* Import plate recipe now uses chest item tag. - Tyler Hancock
			Huge thanks to my supporters on [Patreon](https://www.patreon.com/Darkhax?MCChangelog?DarkUtilities)
			* Pongo Sapiens
			* Darkosto

	Decorative Blocks (decorative_blocks_6c.jar --> decorative_blocks-6d.jar):
		decorative_blocks-6d.jar:
			more bugfixes

	Dimensional Dungeons (dimdungeons-1.04-forge-1.15.2.jar --> dimdungeons-1.051-forge-1.15.2.jar):
		dimdungeons-1.051-forge-1.15.2.jar:
			* Fixed a bug in my support for GraveStone Mod by henkelmax.
			* This update is only needed if you are running a dedicated server or a single player game and also have this mod installed.

		dimdungeons-1.05-forge-1.15.2.jar:
			* Loot is improved 400% 800%! No more potatoes!
			* Bugfix for the guidebook disappearing and not being replaced if your inventory is full. (The guidebook item is still temporary.)

	Ding (Ding-1.15.1-1.1.0.jar --> Ding-1.15.2-1.1.0.jar):
		Ding-1.15.2-1.1.0.jar:
			1.15.2-1.1.0:
			* Built against MC 1.15.2.

	Double Slabs (DoubleSlabs-1.15-2.0.1 --> DoubleSlabs-1.15-2.0.3):
		DoubleSlabs-1.15-2.0.3:
			=Fixed the update URL
			=Fixed an issue with placement of double slabs within the player

		DoubleSlabs-1.15-2.0.2:
			=Fixed rendering of transparent slabs (partially)
			=Fixed slab placement bugs
			=Fixed crashes

	Enchantment Descriptions (EnchantmentDescriptions-1.15.2-2.0.4.jar --> EnchantmentDescriptions-1.15.2-2.0.6.jar):
		EnchantmentDescriptions-1.15.2-2.0.6.jar:
			* Fixed tooltip showing on non-enchanted items. Fixes #26 - Tyler Hancock
			Like the mod? Consider following me on [Twitter](https://twitter.com/darkhaxdev) and joining the [Discord]()
			Huge thanks to my supporters on [Patreon](https://www.patreon.com/Darkhax?MCChangelog?EnchantmentDescriptions)
			* Pongo Sapiens
			* Darkosto

		EnchantmentDescriptions-1.15.2-2.0.5.jar:
			* Added config options for showing owner name, the keybind activation requirement, and whether or not all items should have the tooltips.
			* Refactored the code to have streamlined logic and error handling.
			* Improved how descriptions are placed in the tooltip to make them easier to read.
			* Updated MCP and Forge, added Bookshelf dep.
			Like the mod? Consider following me on [Twitter](https://twitter.com/darkhaxdev) and joining the [Discord]()
			Huge thanks to my supporters on [Patreon](https://www.patreon.com/Darkhax?MCChangelog?EnchantmentDescriptions)
			* Pongo Sapiens
			* Darkosto

	Engineer's Decor (engineersdecor-1.15.2-1.0.19-b5.jar --> engineersdecor-1.15.2-1.0.20-b2.jar):
		engineersdecor-1.15.2-1.0.20-b2.jar:
			* v1.0.20-b2  [A] Added Labeled Crate (storage crate with built-in item frame).
			* v1.0.20-b1  [A] Electrical Furnace: Added four-position speed switch (off, 100%, 150%, 200%), power consumption
			increases at higher rate (off, 100%, 200%, 400%).
			[A] Added Steel Mesh Fence Gate (single or double height gate fitting to the Steel Mesh Fence).
			[M] Waste Incinerator processing speed tweaked.
			[F] Fixed steel table visual glitch (thx Urbanxx001).
			[M] MCP/Forge mappings updated.
			* v1.0.19-b5  [A] Added right-click display of power and progress information for Block Breaker, Solar Panel, and Tree Cutter.
			[A] Solar Panel power curve tuned.
			[A] Mod manual 1st edition release recipe added.
			[A] Factory Hopper: Resetting NBT when breaking with empty inventory (for stacking), enabled item cap for all sides.
			[M] Electrical Furnace model polished.
			* v1.0.19-b4  [A] Ported primary Immersive Engineering dependent recipes (alternative recipes
			will still work if IE is not installed).
			[F] Blacklisted Treated Wood Crafting Table in inventorysorter mod (issue #88, thx Nachtflame).
			[M] Furni comparator output overrides reflect input slots and empty fuel state/power-cutoff.
			[M] Solar Panel config: Default value for internal battery capacity increased.
			[F] Block Placer: Shifted GUI player slots 1px to the right.
			[A] Added mod block tags for slabs, stairs, and walls (PR#89, thanks CrudeAustin for the data).
			[A] Added experimental Patchouli manual (creative only).
			* v1.0.19-b3  [M] Config tweaks: Value limit ranges increased to facilitate modpacking.
			[A] Factory Hopper: Added bottom item handler (CR#227).
			[M] Block shapes refined.
			[F] Fixed duping bug (issue #87, thx Nachtflame)
			* v1.0.19-b2  [F] Fixed Floor Grating item pass-through jitters (thx Cid).
			[M] Removed obsolete recipe collision testing recipes.
			[F] Fixed missing Block Breaker dynamic block drops.
			[F] Block Placer planting race condition issue fixed (issue #83, thx jcardii).
			[F] Factory Hopper: Added second standard insertion run after smart-insert to circumcent compat issues (issue #84, thx NillerMedDild).
			[A] Enabled JEI plugin (issue #85, thx ProsperCraft/Goshen).
			* v1.0.19-b1  [U] Update to 1.15.2.
			[F] Fixed Tree Cutter / Block Breaker not accepting small energy transfers (thx WindFox, issue #82).
			* v1.0.18-b4  [A] Ported Treated Wood Crafting Table item rendering.
			[F] Fixed Milking machine cow path issue, added milking delay cow tracking.
			[F] Slab / Slab Slice placement adapted to vanilla standard.
			[M] Lang update ru_ru (PR#77, thanks Smollet777).
			* v1.0.18-b3  [A] Added Treated Wood Crafting Table tweaks (ctrl-shift moves all same stacks from the
			inventory, mouse wheel over crafting slot increases/decreases crafting grid stacks).
			[F] EN Lang file fixed (issue #76, thx Riverstar907).
			[F] Fixed Tree Cutter not respecting power-required config (thx federsavo, issue #77).
			[F] Fixed Small Solar Panel not exposing energy capability (thx MatthiasMann, issue #78).
			* v1.0.18-b2  [M] Lang ru_ru updated (Smollet777).
			* v1.0.18-b1  [U] Updated to Forge 1.15.1-30.0.16/20190719-1.14.3.
			[F] Client setup Dist annotation fixed (issue #73, thx hitsu420).
			[F] Double newline escapes in lang files fixed ("\n" in a tooltip).
			[M] Updated zh_cn lang file (scikirbypoke).
			[A] Added opt-out config for the Small Tree Cutter
			* v1.0.17-b2  [A] Initial port.

		engineersdecor-1.15.2-1.0.20-b1.jar:
			* v1.0.20-b1  [A] Electrical Furnace: Added four-position speed switch (off, 100%, 150%, 200%), power consumption
			increases at higher rate (off, 100%, 200%, 400%).
			[A] Added Steel Mesh Fence Gate (single or double height gate fitting to the Steel Mesh Fence).
			[M] Waste Incinerator processing speed tweaked.
			[F] Fixed steel table visual glitch (thx Urbanxx001).
			[M] MCP/Forge mappings updated.
			* v1.0.19-b5  [A] Added right-click display of power and progress information for Block Breaker, Solar Panel, and Tree Cutter.
			[A] Solar Panel power curve tuned.
			[A] Mod manual 1st edition release recipe added.
			[A] Factory Hopper: Resetting NBT when breaking with empty inventory (for stacking), enabled item cap for all sides.
			[M] Electrical Furnace model polished.
			* v1.0.19-b4  [A] Ported primary Immersive Engineering dependent recipes (alternative recipes
			will still work if IE is not installed).
			[F] Blacklisted Treated Wood Crafting Table in inventorysorter mod (issue #88, thx Nachtflame).
			[M] Furni comparator output overrides reflect input slots and empty fuel state/power-cutoff.
			[M] Solar Panel config: Default value for internal battery capacity increased.
			[F] Block Placer: Shifted GUI player slots 1px to the right.
			[A] Added mod block tags for slabs, stairs, and walls (PR#89, thanks CrudeAustin for the data).
			[A] Added experimental Patchouli manual (creative only).
			* v1.0.19-b3  [M] Config tweaks: Value limit ranges increased to facilitate modpacking.
			[A] Factory Hopper: Added bottom item handler (CR#227).
			[M] Block shapes refined.
			[F] Fixed duping bug (issue #87, thx Nachtflame)
			* v1.0.19-b2  [F] Fixed Floor Grating item pass-through jitters (thx Cid).
			[M] Removed obsolete recipe collision testing recipes.
			[F] Fixed missing Block Breaker dynamic block drops.
			[F] Block Placer planting race condition issue fixed (issue #83, thx jcardii).
			[F] Factory Hopper: Added second standard insertion run after smart-insert to circumcent compat issues (issue #84, thx NillerMedDild).
			[A] Enabled JEI plugin (issue #85, thx ProsperCraft/Goshen).
			* v1.0.19-b1  [U] Update to 1.15.2.
			[F] Fixed Tree Cutter / Block Breaker not accepting small energy transfers (thx WindFox, issue #82).
			* v1.0.18-b4  [A] Ported Treated Wood Crafting Table item rendering.
			[F] Fixed Milking machine cow path issue, added milking delay cow tracking.
			[F] Slab / Slab Slice placement adapted to vanilla standard.
			[M] Lang update ru_ru (PR#77, thanks Smollet777).
			* v1.0.18-b3  [A] Added Treated Wood Crafting Table tweaks (ctrl-shift moves all same stacks from the
			inventory, mouse wheel over crafting slot increases/decreases crafting grid stacks).
			[F] EN Lang file fixed (issue #76, thx Riverstar907).
			[F] Fixed Tree Cutter not respecting power-required config (thx federsavo, issue #77).
			[F] Fixed Small Solar Panel not exposing energy capability (thx MatthiasMann, issue #78).
			* v1.0.18-b2  [M] Lang ru_ru updated (Smollet777).
			* v1.0.18-b1  [U] Updated to Forge 1.15.1-30.0.16/20190719-1.14.3.
			[F] Client setup Dist annotation fixed (issue #73, thx hitsu420).
			[F] Double newline escapes in lang files fixed ("\n" in a tooltip).
			[M] Updated zh_cn lang file (scikirbypoke).
			[A] Added opt-out config for the Small Tree Cutter
			* v1.0.17-b2  [A] Initial port.

	Gauges and Switches (rsgauges-1.15.2-1.2.2-b1.jar --> rsgauges-1.15.2-1.2.2-b2.jar):
		rsgauges-1.15.2-1.2.2-b2.jar:
			* v1.2.2-b2   [A] Added Elevator Button.
			[M] Minor tweaks based on ForgeCraft streams.
			* v1.2.2-b1   [A] Added Valve Switch (idea and model by Jack M).
			-------------------------------------------------------------------
			* v1.2.1      [R] Release build v1.2.1. Release-to-release changes:
			* Industrial Comparator Switch added.
			-------------------------------------------------------------------
			* v1.2.1-b1   [A] Added Industrial Comparator Switch.
			* v1.2.0-b2   [A] Added GIT version logging.
			[M] Lang en_us: Sensitive Glass block names adapted (issue #15, thx Dimentive).
			* v1.2.0-b1   [A] Added JEI integration.
			[M] Model "vanillafication" rework, part 2.
			[D] Removed obsolete switches (registry not affected).
			[M] Recipes simplified, recipe conditions unified.
			[M] Code updates for version compatibility.
			[A] All block are waterloggable (including Sensitive glass).
			* v1.1.10-b4  [F] Removed tag reference to minecraft:dirts, which prevented any
			recipes from being craftable.
			* v1.1.10-b3  [A] Initial port.

	In Control! (incontrol-1.15-4.0.1.jar --> incontrol-1.15-4.0.2.jar):
		incontrol-1.15-4.0.2.jar:
			* Darkere improved performance when removing large amounts of mobs in potential spawn

	Industrial Foregoing (industrial-foregoing-1.15.2-2.2.1-f27c515.jar --> industrial-foregoing-1.15.2-2.2.2-28d4a81.jar):
		industrial-foregoing-1.15.2-2.2.2-28d4a81.jar:
			Added recipe for Simple Machine Frame
			Added Stasis Chamber
			Better Wood checking (moardm)
			Updated zh_cn (EnterFor)
			Fixed Water Condensator

	Interactio - In-World Crafting with Datapacks! (Interactio-1.15.2-1.3.2.jar --> Interactio-1.15.2-2.0.1.jar):
		Interactio-1.15.2-2.0.1.jar:
			Another reminder that this mod now requires a mod that can load Mixins in Forge, like [MixinBootstrap](https://www.curseforge.com/minecraft/mc-mods/mixinbootstrap) for instance!
			[- Fix RecipeIngredient consuming too much, make recipe caching faster](https://github.com/MaxNeedsSnacks/Interactio/commit/2dacc996748a5821936bd8689d2b0fa85c7bbdf4)
			[- Add recipe ID tooltip to JEI categories](https://github.com/MaxNeedsSnacks/Interactio/commit/ca74d52dd1e0c6482493e49ee60c12016938b039)
			This is the first "full" release post-overhaul, so for anyone who hasn't noticed yet, the recipe syntax has changed! For the updated syntax, please check out the (updated) Wiki!

		Interactio-1.15.2-2.0.0.jar:
			NOTE: Your recipes in their current form will break after updating. Check out the new syntax on GitHub (or take a look at the TL;DR down below) to keep them running!
			ALSO, this mod now requires a mod that can load Mixins in Forge, like [MixinBootstrap](https://www.curseforge.com/minecraft/mc-mods/mixinbootstrap) for instance!
			Hey, what's that? It's the first major update to the mod!
			Recipe ingredients with return chances and weighted (chance) outputs are here, as well as a couple of nice changes under the hood! This mod also now uses Mixins to do certain things, which, if you haven't read the giant text above, means you now need [MixinBootstrap](https://www.curseforge.com/minecraft/mc-mods/mixinbootstrap) (or a comparable mod that can load Mixins in a Forge environment) to run it. Don't worry though, I won't bloat your mods folder with any other dependencies in the near future... maybe :p
			For a full list of changes, feel free check out [the pull request on GitHub](https://github.com/MaxNeedsSnacks/Interactio/pull/7) or the Wiki to see what's changed (in short, replace "result" with "output" where you can and try to follow the examples on the Wiki and you should be (almost) fine with your current recipes)

	Inventory Tweaks Reborn (invtweaks-1.15.2-1.0.1.jar --> invtweaks-1.15.2-1.0.3.jar):
		invtweaks-1.15.2-1.0.3.jar:
			Fix support w/ certain inventories

		invtweaks-1.15.2-1.0.2.jar:
			Fixes crash when certain sorting specs are omitted

	Iron Jetpacks (IronJetpacks-1.15.2-3.0.0.jar --> IronJetpacks-1.15.2-3.0.1.jar):
		IronJetpacks-1.15.2-3.0.1.jar:
			Release 3.0.1 for MC 1.15.2
			Changes:
			* Fixed the hud breaking transparency of the nether portal overlay

	KubeJS (kubejs-2.4.0.13.jar --> kubejs-2.5.2.27.jar):
		kubejs-2.5.2.27.jar:
			* Added sound.registry event - LatvianModder

		kubejs-2.5.2.26.jar:
			* Converted all ATs to Mixins - LatvianModder
			* Added client.isKeyDown(GLFWKEYID) - LatvianModder
			* Updated Forge version - LatvianModder

		kubejs-2.5.2.25.jar:
			* Maybe fixed {type:'mod:id'} recipe filter again? - LatvianModder

		kubejs-2.5.2.24.jar:
			* Maybe fixed {type:'mod:id'} recipe filter? - LatvianModder

		kubejs-2.5.2.23.jar:
			* Added client.exportAtlases = true config option - LatvianModder

		kubejs-2.5.2.22.jar:
			* Added {exact: true} in recipe filters, to ignore tagged items for some specific cases when only item recipe needs to be removed and not recipes containing that item but in a tag - LatvianModder
			* Added item.destroyed, item.food_eaten events, helper method in created foods to handle this event without listen with foodBuilder.eaten(function(e){}) - LatvianModder

		kubejs-2.5.1.21.jar:
			* Added .food(function(f) {}) for created items - LatvianModder

		kubejs-2.5.1.20.jar:
			* Fixed some Silents Mechanisms alloy recipes being broken - LatvianModder

		kubejs-2.5.1.19.jar:
			* Added partial Silents Mechanisms integration, fixed script name and line not printing for adding/removing recipe output - LatvianModder

		kubejs-2.5.1.18.jar:
			* Fixed CME - LatvianModder

		kubejs-2.5.1.17.jar:
			* Replaced minecraft recipe manager with KubeJS one, double the speed, half the trouble. Added partial mekanism support - LatvianModder
			* Removed doc event from KubeJSEvents - LatvianModder

		kubejs-2.5.0.16.jar:
			* Added better ingredient parsing for machines that also have count, fixed input/output count being different when replacing it, fixed shaped recipes not saving after being modified - LatvianModder
			* Renamed events (old names will still work) now tag events are 'item.tags', 'block.tags', 'fluid.tags' and 'entity_type.tags' and recipe event is simply 'recipes' - LatvianModder

		kubejs-2.5.0.15.jar:
			* Rewrote recipe modifying, may break things - LatvianModder
			* Added client.disableRecipeBook boolean - LatvianModder

		kubejs-2.4.0.14.jar:
			* Added better recipe error logging (with server.betterRecipeErrorLogging setting in case it causes issues) - LatvianModder
			* Added block.missingmappings and item.missingmappings events, removed world one - LatvianModder
			* Removed events.listenAll([]) instead, added that array parsing for events.listen() - LatvianModder
			* Added console.log() to make it easier for JS people - LatvianModder
			* Moved tag generation to builder, fixed logging, cleaned up access transformers - LatvianModder
			* Tags now work in dev but not outside dev. Hmmmmm - LatvianModder

	Lollipop (Lollipop-1.15.2-1.0.9.jar --> Lollipop-1.15.2-1.0.13.jar):
		Lollipop-1.15.2-1.0.13.jar:
			No changelog available.

		Lollipop-1.15.2-1.0.12.jar:
			Added Chinese localization zh_cn.json, Thanks to EnterFor.

		Lollipop-1.15.2-1.0.11.jar:
			No changelog available.

		Lollipop-1.15.2-1.0.10.jar:
			No changelog available.

	McJtyLib (mcjtylib-1.15-4.0.2-alpha.jar --> mcjtylib-1.15-4.0.3-alpha.jar):
		mcjtylib-1.15-4.0.3-alpha.jar:
			* Helpers for blockstate generation
			* Fixes for the logic blocks

	Mekanism (Mekanism-1.15.2-9.9.15.407.jar --> Mekanism-1.15.2-9.9.17.409.jar):
		Mekanism-1.15.2-9.9.17.409.jar:
			Warning: Mekanism is currently in alpha, and is not recommended for widespread use in modpacks. There are likely to be game breaking bugs, and updating from one alpha to the next may cause various mekanism blocks to disappear/void their contents. While we will try to not have this happen/keep it to a minimum make sure to make backups. You can read more about the alpha state of this project [here](https://github.com/mekanism/Mekanism#alpha-status).
			[06bd72f](https://github.com/mekanism/Mekanism/commit/06bd72f6d2d12398768052d125f7d1e9ab8022a9) - Continued work on rewriting various parts of render resizable cuboid - Properly pass the light value we want to use to the cuboid we are rendering [#5800](https://github.com/mekanism/Mekanism/issues/5800) - Massively improve how things like water visually render in mechanical pipes (there is still more I plan on doing to further improve this) - Batch a bunch of the draws that we make via our render resizable cuboid
			[549dfac](https://github.com/mekanism/Mekanism/commit/549dfacdaf03d82c09113d8b633f88943107f0ff) - Work on consolidating factory implementation
			[adbb826](https://github.com/mekanism/Mekanism/commit/adbb826ad3daeefb83d6d40a4e33a710a94105b2) - Use suppliers to avoid setting references to other registries before they're initialized
			[7317370](https://github.com/mekanism/Mekanism/commit/7317370d30cf4c044ca5ead44b2b52d92a5a1040) - Further improve rendering of things like water in mechanical pipes, and batch rendering of turbine rotors that are inside of an industrial turbine
			[eb6b759](https://github.com/mekanism/Mekanism/commit/eb6b759f7b59250847d0e2f62793fe5e55f0f9d4) - Fix some broken casts, fix factory usage & storage
			[d8f5f49](https://github.com/mekanism/Mekanism/commit/d8f5f49042914caf5ca614463bd7c313563572e8) - Begin work on attribute system for blocks
			[beabfd4](https://github.com/mekanism/Mekanism/commit/beabfd4cf3a03555cea3445060aa9f5e5a206503) - Continue work on the new block framework
			[7683ab6](https://github.com/mekanism/Mekanism/commit/7683ab68a995061c95cd929b04a32a0e61412bad) - Continue working on attribute system
			[db6ce75](https://github.com/mekanism/Mekanism/commit/db6ce750387a920306baf56b2f0d27595529ed42) - Continued work on block consolidation
			[eb17c4d](https://github.com/mekanism/Mekanism/commit/eb17c4d9209aa5e82d983ee0fc741cc48cb5b9dd) - Restructure block types to avoid forcing TileEntities
			[e391302](https://github.com/mekanism/Mekanism/commit/e39130233ab1e7e18d3696ec994416d21fb7389f) - Remove some irrelevant tier-related code
			[a817632](https://github.com/mekanism/Mekanism/commit/a817632511b016aa0471538f6e6cea16e4d9336b) - Convert bins and induction cells/providers
			[449fc77](https://github.com/mekanism/Mekanism/commit/449fc778924420769786870a4834211efdd7113a) - Migrate energy cube, fluid tank, gas tank
			[b997ed9](https://github.com/mekanism/Mekanism/commit/b997ed9f94c786765920e91441c3ec23e9275097) - Continue consolidation, fix some issues
			[2ca177f](https://github.com/mekanism/Mekanism/commit/2ca177fe45452f62113cde23527b5fa977d4c106) - Fix accidental file removal
			[7ef0640](https://github.com/mekanism/Mekanism/commit/7ef064047db29c9d2000e61d0f0746596206d515) - Fixes and cleanup
			[76da82b](https://github.com/mekanism/Mekanism/commit/76da82b3c58fab29a83070c722fd6280e9f3af86) - Additional fixes
			[4d7e3a7](https://github.com/mekanism/Mekanism/commit/4d7e3a7e2f2a40f8e94af3751b0b3402dc87959a) - Add some helper methods to clean up attribute references
			[13fa2db](https://github.com/mekanism/Mekanism/commit/13fa2dbfd8dda2ca3455f7031b5716d5fdc35314) - Fix Induction Cells/Providers not exposing TileEntities
			[4a3b978](https://github.com/mekanism/Mekanism/commit/4a3b97889c438d67506f930774a99bb37a2efdd8) - Fix Logistical Sorter voxel model
			[3fd69fc](https://github.com/mekanism/Mekanism/commit/3fd69fc4a1d5b3531f53694449606191935a861a) - Initial draft of the Energy API rework, also fixed various typos/copy paste errors in the other handler's java docs that I came across while writing the spec
			[3e48bdf](https://github.com/mekanism/Mekanism/commit/3e48bdf4658273490b5e0b8db36116b8c18e79c1) - Write most of the base backend of the new Energy API. (Note does not currently compile) and fix various minor bugs in various handlers: - Fixed edge case in growStack that could theoretically allow for integer overflow - Fix misc comments/variable names being incorrect for that handler type (for example naming variables slots rather than tanks) - Added some validity checking to capacities of things
			[90ee1d7](https://github.com/mekanism/Mekanism/commit/90ee1d726b7adcd05924cf7431532192e5b496bf) - More work on converting to new energy API implementation, still does not compile
			[62d8c69](https://github.com/mekanism/Mekanism/commit/62d8c69554c594825a0e36c3300f44d2fe8e5b59) - Continued work on converting to the new energy API implementation, still does not compile
			[60cd291](https://github.com/mekanism/Mekanism/commit/60cd2912a3c20c620bfc9247026eea714416c836) - Continued work on converting to the new energy API implementation, still does not compile - Made Metallurgic infuser side config support configuring energy - Increased default energy buffer for quantum entangloporter from 16 million to 128 million (to match the default of the ultimate energy cube) - Start rewriting our handling of integrating with other energy systems. Rather than having specific handling for interacting with various handlers, we are moving towards having classes that wrap the other handlers into being able to be handled by our generic IStrictEnergyHandler
			[9512cd0](https://github.com/mekanism/Mekanism/commit/9512cd05346dd456a8d515bd2796c041c704d097) - Continued work on converting to the new energy API implementation, still does not compile - Moved redstone to energy from config to recipe system, and add a recipe for redstone block to energy - Modernized chargepad code, and made it able to charge items in the offhand
			[c991416](https://github.com/mekanism/Mekanism/commit/c99141669c5a18dbd10ae013c4c9f2bb2046d278) - Continued work on converting to the new energy API implementation, still does not compile - Unified more ejection code for energy, fluids, and gases
			[740a52d](https://github.com/mekanism/Mekanism/commit/740a52dd622927f0b05d7a48fac135cfb1783e76) - Mostly finished first pass at converting the induction matrix to the new energy system, still does not compile
			[a8bf276](https://github.com/mekanism/Mekanism/commit/a8bf2760cd036a04378e5bcb26e5f17a781bd992) - Continue work on converting to the new energy api, still does not compile
			[d7fe6dd](https://github.com/mekanism/Mekanism/commit/d7fe6ddb79bbfdfa80ca00b109ae0339a0e72c1f) - Still lots of bugs and things that have to be cleaned up/fixed, but it compiles again
			[1b7e8ac](https://github.com/mekanism/Mekanism/commit/1b7e8acbfa907b804220d90ea1cef459d9cb46f7) - Fix rebase errors, and make it compile again
			[0699994](https://github.com/mekanism/Mekanism/commit/0699994e3d207ebd76a3ce63ae5b9cf1614fa6cb) - Optimize imports and reformat code
			[71db700](https://github.com/mekanism/Mekanism/commit/71db700f0bb173641f4e4c54a2ef9a818e12481c) - Move energized items over to the new energy API with easier extensibility support for implementing other mods' energy handlers - Minor cleanup of some attribute stuff - More consistently not require energy in items when in creative
			[cdca82c](https://github.com/mekanism/Mekanism/commit/cdca82c9404b9fcad0821af3407655e5968d25d9) - Modernize electric bow implementation to extend vanilla's bow and more closely mirror some of the logic from it - Fixes some enchantments not working properly on the electric bow - Fixes custom arrows not always working as intended - Also made the hoes in Mekanism Tools implement a hoe tool type in case any mods look for one
			[01b414a](https://github.com/mekanism/Mekanism/commit/01b414a2cb9c60058c4378362d9347f0c09d6e00) - Use some util methods to cleanup rendering checks that got messier
			[e8fb5df](https://github.com/mekanism/Mekanism/commit/e8fb5df3c902e3304015bbb3e848c8dea4d7f963) - Cleanup code pertaining to conversion checks
			[2af649a](https://github.com/mekanism/Mekanism/commit/2af649a9fa15bcdf93837aa5cc6fb340b90caf3f) - Cleanup code pertaining to setting energy requirements for recipes
			[26d2831](https://github.com/mekanism/Mekanism/commit/26d2831564ab3dd87dfa106c4e1028b59901b599) - Fix mekanism tiles being incorrect in their check of if they are activatable, and cleanup a bit of code having to do with targets
			[66e59a7](https://github.com/mekanism/Mekanism/commit/66e59a7d0306c26b9bcae5b8187af2dcae0fe686) - First pass at experimenting with converting energy from a double to a FloatingLong, it compiles, but FloatingLong is not properly implemented yet
			[f3943ef](https://github.com/mekanism/Mekanism/commit/f3943efd87d0dc148eb5ab021464f00a64afb3ba) - Update dependencies, and setup JUnit
			[aa33eac](https://github.com/mekanism/Mekanism/commit/aa33eaca8051e30f16a322c2a379ac479d6e8735) - Fix a few bugs with FloatingLong and mostly implement the class, for now various parts of it are using temporary methods of calculating things. Also improve our TOP integration, making it so that our gas and infusion bar renderers look better, and replacing TOPs default energy display for our own blocks. Additionally made it so looking at our multiblocks show all the proper stats rather than having to look at the valve specifically
			[2f36a52](https://github.com/mekanism/Mekanism/commit/2f36a522b0cec3aed6448d58bd717be0a2a697fe) - Fix client side only method being used for resource location config, and fix modulo
			[a971911](https://github.com/mekanism/Mekanism/commit/a971911c98298ccb6c1d8714bd479a2a01eb80f7) - Fix accidental inversion of BasicEnergyContainer#insert return value, and fix typo in path for test classes
			[5cebdad](https://github.com/mekanism/Mekanism/commit/5cebdadfba593c083fde2ece8ae80bd790f69ec3) - Update docs to properly specify how to handle FloatingLongs for the energy api and when they can be modified and when they shouldn't be modified. Also remove some java docs that are incorrect due to us overwriting for more reasons than just to avoid a cached value such to check our validity predicates
			[222f601](https://github.com/mekanism/Mekanism/commit/222f601d2b2b05326c645285d029f68e11302918) - Reduce number of sync packets sent for mechanical pipes, pressurized tubes, and universal cables, and calculate the content scale on the server instead of the client. Also added some TODOs for some odd bugs unrelated to rendering that I ran into while testing
			[494ec79](https://github.com/mekanism/Mekanism/commit/494ec792645eab0db47b4c3e4dd94116852b53bb) - Fix the save share for networks not being calculated properly, and also fix the networks not updating their capacity before attempting to absorb a transmitter's buffer causing for a good number of contents to be voided when a single pipe was broken. Also fix not updating the capacity before accepting contents, causing for weird things to occur/break
			[e7e21e7](https://github.com/mekanism/Mekanism/commit/e7e21e7c46578dafddd5ad018e4a9c25714418b9) - Fix being to strict on caching various handler's read write settings when based on a side config
			[c955a73](https://github.com/mekanism/Mekanism/commit/c955a7363d9edbcf1313832ecc798ec5db44e6bd) - Fix laser particle not displaying properly, due to BasicEnergyContainer#extract not obeying the API spec of mutability
			[74938d0](https://github.com/mekanism/Mekanism/commit/74938d07e78cf292bc0ed31cfef4693edcff96ad) - Allow conversion to bypass rate limit of energy cube and gas tank, and fix improper deserialization of the decimal for floating longs for recipes, also fix filling items with energy in the EnergyInventorySlot, apparently two onContentsChanged calls were missing
			[05313f4](https://github.com/mekanism/Mekanism/commit/05313f4610aa500c6d4401141327bd511b88dc82) - Move energy multiplier for electrolysis recipe to a FloatingLong
			[4135faf](https://github.com/mekanism/Mekanism/commit/4135fafae0433cf8187406672592ca2e6feadd4e) - Improve FEIntegration implementation to better handle if we have multiple energy containers in the handler we are wrapping
			[0f78345](https://github.com/mekanism/Mekanism/commit/0f7834528bc05af68a88f2779b4b9d768d77e04e) - Use util method to make the energy cube scale increase look better and be a smoother transition, and also cleanup some multitank support/tooltip code
			[8727ac5](https://github.com/mekanism/Mekanism/commit/8727ac564c2b99e779e18aba44155287a4ee0ca5) - Cache capacities of a few different multiblocks
			[9e836a5](https://github.com/mekanism/Mekanism/commit/9e836a59ce6bf127cff007ba71d21faef48eb0e1) - Fix network scale calculations on reforming (a pipe being broken), and on merging of networks.
			[b56f8b9](https://github.com/mekanism/Mekanism/commit/b56f8b9ccf39eafecf2a5627e11030a4e9e43142) - Improve some of the checks for seeing if a container has "infinite" of a material
			[6880316](https://github.com/mekanism/Mekanism/commit/68803166ba949f0f9476c691f4a436ff8205bdda) - Minor cleanup to TransporterManager, removing the need for stack size trickery
			[3a9a9bd](https://github.com/mekanism/Mekanism/commit/3a9a9bd2670dfadf4fa38d5bc12a47b79b6b5e15) - Go through and cleanup a few TODOs from the Energy rewrite, and fix a few other issues with values being incorrect, as well as energy not syncing to the robit's gui
			[97bb8d4](https://github.com/mekanism/Mekanism/commit/97bb8d4bf64c69db18b9ea07dcd4ac6cce5461fa) - Cleanup some comments
			[c3f90c7](https://github.com/mekanism/Mekanism/commit/c3f90c7cbe3139a8d540adf5cb6e2fb61ae9155b) - Fix lastEnergyReceived
			[6331aa8](https://github.com/mekanism/Mekanism/commit/6331aa8074340c2e24c99eeba461f5b4d84eabc3) - Fix the energy matrix adding energy to the cached total rather than removing it when energy is removed
			[adfcd34](https://github.com/mekanism/Mekanism/commit/adfcd34950cabd62ab61bfd48c329954417f2b9f) - Implement proper range checks to CachedFloatingLongValue and switch it to strings representing it to properly support unsigned longs if we eventually switch to them. Also switch the SerializerHelper and Json serialization to doing it by number so that if/when we switch to unsigned long it works properly
			[c679c31](https://github.com/mekanism/Mekanism/commit/c679c317d77205455b2eedd3834d1ea006b40793) - Simulate insertion for inserting items into slots that has a slot limit larger than the item's max stack size, as the slot may allow for stacks up to a certain size but also be respecting the max stack size of the item. [#5988](https://github.com/mekanism/Mekanism/issues/5988)
			[94308f5](https://github.com/mekanism/Mekanism/commit/94308f54030f44ea15b4805614f6f15bb34d8f3c) - Implement multiplication for FloatingLongs without having to convert to string and use BigDecimal ([#5987](https://github.com/mekanism/Mekanism/issues/5987))
			[a8ccd36](https://github.com/mekanism/Mekanism/commit/a8ccd36379b26b95056066da1f95a91ecc8beebe) - Set steam to actually have the correct temperature ([#5972](https://github.com/mekanism/Mekanism/issues/5972))
			[0c62ea8](https://github.com/mekanism/Mekanism/commit/0c62ea89817951dc2121d03c5a7fc2e079649651) - Add test lib QuickTheories for property based testing of FloatingLong, and partially reorganize ordering of the FloatingLong class
			[c5a752f](https://github.com/mekanism/Mekanism/commit/c5a752ff7d122799459ef53a8b6a6a263e212ec5) - Spec change to FloatingLong so that the modifyEqual methods return the actual object, so that if it is called on a constant it instead returns a new clean value. Also add javadocs to methods in FloatingLong
			[8e97204](https://github.com/mekanism/Mekanism/commit/8e97204f4e49fdf1c8005391be19b3a9d0adfa6f) - Rewrite handling of upgrade recipes. For the most part properly handles transferring data now. It only does basic testing for finding a matching valid configuration, but if it cannot find one it just doesn't match as a valid input to the recipe [#5743](https://github.com/mekanism/Mekanism/issues/5743), and fix handling of initial container syncing on servers where there may be multiple players.
			[2711127](https://github.com/mekanism/Mekanism/commit/2711127eac3379a471c2019aa9b7cf484333d4e0) - Re-implement instantly turning blocks to active, and having a longer delay threshold before they are considered deactivated. Also fix client energy used calculations being incorrect due to the mutability of objects
			[a2bc3a0](https://github.com/mekanism/Mekanism/commit/a2bc3a0773539f45c3a7da4e850ecd05c6c9aad5) - Store FloatingLongs as a string in NBT to be able to easily switch to unsigned longs if we decide to without voiding saved energy again
			[5450d2d](https://github.com/mekanism/Mekanism/commit/5450d2df813e375f3a106a69f5609ca3737ecc21) - Fix handling of parsing doubles and make it so it parses them consistently
			[31dc0c8](https://github.com/mekanism/Mekanism/commit/31dc0c86014a539a245646a06dfa774c91fee31c) - Fix miner not properly refreshing chunks on changing radius, and don't attempt to check the tile at a position during world loading to hopefully remove the race condition/halting that can occur [#5897](https://github.com/mekanism/Mekanism/issues/5897) [#5978](https://github.com/mekanism/Mekanism/issues/5978)
			[05766a7](https://github.com/mekanism/Mekanism/commit/05766a7a29ba180575b7bfa991af330fca988cc9) - Display energy network capacity as FloatingLong
			[9132e4d](https://github.com/mekanism/Mekanism/commit/9132e4d922333f0c79ea268cc09f12a4b9619d57) - Convert FloatingLong to using an unsigned long ([#5991](https://github.com/mekanism/Mekanism/issues/5991))
			[b509204](https://github.com/mekanism/Mekanism/commit/b509204f3f6d88da6ac7b69516a66b0e960e8ce3) - Bump version to 9.9.17

		Mekanism-1.15.2-9.9.16.408.jar:
			Warning: Mekanism is currently in alpha, and is not recommended for widespread use in modpacks. There are likely to be game breaking bugs, and updating from one alpha to the next may cause various mekanism blocks to disappear/void their contents. While we will try to not have this happen/keep it to a minimum make sure to make backups. You can read more about the alpha state of this project [here](https://github.com/mekanism/Mekanism#alpha-status).
			[8cfe2a4](https://github.com/mekanism/Mekanism/commit/8cfe2a45b9d1abb719ff85b2b78fb055c4c82f8f) - Fix ore/resource harvest levels ([#5942](https://github.com/mekanism/Mekanism/issues/5942)), fix Paxel harvest levels
			[7923962](https://github.com/mekanism/Mekanism/commit/79239628b9c6f2fc5d7f6a4aadca443678c35dd9) - Hopefully fix transmitter model issues ([#5922](https://github.com/mekanism/Mekanism/issues/5922)), remove client-side markDirty() call We used to call markDirty() on the client as it would trigger an all-sides neighbor update which was necessary for some kind of multi-mod interaction. It's not relevant anymore though as far as I can tell, especially since we have an internal markDirty() impl which prevents such updates.
			[c8476c1](https://github.com/mekanism/Mekanism/commit/c8476c1cb98c2822ad4118db3039d7ea8e1981db) - Fix harvest level changes
			[7e9ff56](https://github.com/mekanism/Mekanism/commit/7e9ff5615b782c192f1caad4ae4d635cc1f6ac75) - Initial experimenting with using vanilla's sync/update packet system rather than our own
			[8ff4379](https://github.com/mekanism/Mekanism/commit/8ff4379299ee41208fb549ac3664bd2f8946d159) - Move all NBT keys to strings. Some things got renamed so various misc things may be voided from Mekanism machines/blocks so I would recommend emptying things just to be on the safe side. In some cases it will just be machine configurations that get reset. Also changed how the chunk loader component saves chunk positions, so you may have to go and reload the chunks to get them to stay loaded again. Things with bounding blocks like digital miners, advanced solar generators, security desks may unbind the bounding block from the actual main block, so should probably be broken/picked up before updating
			[b387c94](https://github.com/mekanism/Mekanism/commit/b387c94c1c2ee214d62feaad17e2bfb7ae71bbdb) - Move JSON string key constants to constants to make it easier to prevent typos and if there are typos at least have them be consistent throughout serialization and deserialization. No current recipes should break as nothing has been renamed.
			[006dbe6](https://github.com/mekanism/Mekanism/commit/006dbe6ce19672947b8f0b7a974cf9801989b923) - Only sync the energy scale to clients for energy cubes unless the gui is open
			[03738bd](https://github.com/mekanism/Mekanism/commit/03738bd2d0c29ebd4deebed92928a125f424c197) - Fix Gas Generator sound, fix Gas Generator 'burn rate' readout ([#5047](https://github.com/mekanism/Mekanism/issues/5047))
			[ce6aec5](https://github.com/mekanism/Mekanism/commit/ce6aec58ac0435b616a6229a9cdd2aafbf463e1c) - Start converting more tiles to syncing stuff via vanilla's packet system. Also fix the Bio generator processing stuff on both the client and the server instead of just the server
			[1e3592b](https://github.com/mekanism/Mekanism/commit/1e3592b2418821a765817746e330d18ed4bb3e66) - Finish converting ITileComponents over to properly syncing their data
			[7c0f0cd](https://github.com/mekanism/Mekanism/commit/7c0f0cd7b706321fc576e169805d69bef5b58e07) - Fix transmitters not checking bounds prior to placement, fix PRC GUI title
			[17019a8](https://github.com/mekanism/Mekanism/commit/17019a84fdc7580acdd4d649b898f7bd72a77fce) - Cleanup some code pertaining to inventory ejecting, ensuring we grab items based on what can be extracted rather than what is directly in the slot. [#5938](https://github.com/mekanism/Mekanism/issues/5938)
			[fc5e007](https://github.com/mekanism/Mekanism/commit/fc5e007cf70dd5998dd7c1fd8c790ccb6353900f) - Fix improper internal insertion restrictions for rotary condensentrator tanks [#5940](https://github.com/mekanism/Mekanism/issues/5940)
			[3ffb6c8](https://github.com/mekanism/Mekanism/commit/3ffb6c8dd142bf330ea5cbabbad5ba92f2a243c3) - Fixes pressurized tubes and mechanical pipes not being able to connect to quantum entangloporters [#5950](https://github.com/mekanism/Mekanism/issues/5950)
			[381eadd](https://github.com/mekanism/Mekanism/commit/381eadd5b5724285e9929ededfe604b492cd1e47) - Fix Fluidic Plenisher GUI, and fix tank insert/extract checks for the electric pump [#5951](https://github.com/mekanism/Mekanism/issues/5951)
			[8b990a4](https://github.com/mekanism/Mekanism/commit/8b990a4d856efbcff0a625f1154725b76715b2d9) - Fix pump & plenisher GUI scaling
			[7d41e3f](https://github.com/mekanism/Mekanism/commit/7d41e3f07cf4a70b6ee556928882a49b1c17711b) - Reinstate active state update delay ([#5848](https://github.com/mekanism/Mekanism/issues/5848)), clean up active state mess A bunch of machines were making particle effects when they shouldn't have been, QE should not have an active state to begin with
			[fb878c0](https://github.com/mekanism/Mekanism/commit/fb878c0bef3078fef0aa2ebfd7bcd1266c41457f) - Split onUpdate into two methods, onUpdateClient and onUpdateServer, to make the code more readable about what is happening on what side, and to note require as much indentation due to isRemote checks
			[e6ac88d](https://github.com/mekanism/Mekanism/commit/e6ac88d5aa68c5cb9b009f3193a7ca881dd66f04) - Cleanup implementation/handling around isCapabilityDisabled, to only have to check it once rather than at each level of super, and to make it so manually calling it can be forgotten about.
			[6371faa](https://github.com/mekanism/Mekanism/commit/6371faa6f4553b0cfee8031941f48eb19ea3190b) - Fix a potential issue with active state changes
			[1951d1a](https://github.com/mekanism/Mekanism/commit/1951d1a6706f5731c57162cdffe37d3f5c9cebe0) - Update machine lighting on world load
			[4c88139](https://github.com/mekanism/Mekanism/commit/4c88139a7bdf20fb1d2bd9db7db7258564be1348) - Work on moving transmitters to syncing their initial data via vanilla's update packet
			[4f5822e](https://github.com/mekanism/Mekanism/commit/4f5822e019f8c77d97fa3130a315907068900dd9) - Work on moving the security desk to using vanilla's update packet and our container sync system. We still need to properly move over syncing the trusted players list
			[e25085c](https://github.com/mekanism/Mekanism/commit/e25085c71651702863446a3e12b661af51660b36) - Create system for syncing lists as elements in containers
			[1fc912d](https://github.com/mekanism/Mekanism/commit/1fc912d362a38a651af7dd9e6131cd0c304feaac) - Move evap controller and resistive heater over to vanilla update packets
			[9527146](https://github.com/mekanism/Mekanism/commit/952714684f1ea5c04c38d8b5aee9c8ad729fb63d) - Create a way to sync filter lists for containers - Cleanup some code pertaining to filters - Compare hashcode of list to check if it is dirty rather than comparing all the elements - Make HashList implement the List spec - Fixed error in loading frequencies
			[0294ecf](https://github.com/mekanism/Mekanism/commit/0294ecf009209a61d2986f7d841e206f5fe6fd65) - Move fluid tank syncing to vanilla packet system, and cleanup implementation of lasers and move that stuff over to the new method of handling sync data
			[757ed70](https://github.com/mekanism/Mekanism/commit/757ed709cca79913d78a99e31bb26f081b850264) - Switch induction matrix over to using vanilla sync packets and the container sync system
			[723c950](https://github.com/mekanism/Mekanism/commit/723c95054df89fa3bde59c83fe6772cfcf52dba9) - Convert dynamic tank, and internal multiblocks to using vanilla update packets, and our container sync system. Also fix an NBT clash that accidentally introduced
			[f0dea9f](https://github.com/mekanism/Mekanism/commit/f0dea9f3e6ff1480b964f9db173e6a4ed7511137) - Fix sparkling effect playing continuously
			[c342a13](https://github.com/mekanism/Mekanism/commit/c342a13347a4e264981aaaea9217700e9e652a1f) - Continue work on converting multiblock packet handling. Also start working on attempting to fix some of the packet spam that multiblocks have
			[437f2fa](https://github.com/mekanism/Mekanism/commit/437f2fa8034f76e090cb3634212ad642a08c9d8e) - Only sync fluid changes for rendering for the fluid tank, boiler water tank, and dynamic tank when the scale changes, rather than on every mb of difference. Also move the scale calculation to a util method to ensure that we render at least something if there is any contents
			[7ebe623](https://github.com/mekanism/Mekanism/commit/7ebe623a8200dd93a0dfceb7113cbd9cb0b41cba) - Use our own sync packet to avoid chunk rendering thrashing
			[9bedc8b](https://github.com/mekanism/Mekanism/commit/9bedc8b6c7a7592ade21b5de7641909ce61d7a57) - Add support for showing how much time our TERs are taking in the debug pie chart for block entities
			[324382d](https://github.com/mekanism/Mekanism/commit/324382d148f884ad8314c5eb3b767d021ce3105c) - Convert reactor over to using the new sync system, and fix the normal laser always firing the max amount of power even when it didn't have that much power stored
			[c27ebf3](https://github.com/mekanism/Mekanism/commit/c27ebf301e11adff738d2920bc828d5cb7801fd8) - Move syncing of formula to our container sync system, and fix a few different issues with rendering of specific gui pieces
			[4c490e2](https://github.com/mekanism/Mekanism/commit/4c490e27155dbf3bdd2bc8e692168b4832432927) - Switch steam tanks for the turbine, reactor, and boiler to be gas tanks and use the gas variant of steam, rather than fluid tanks using "liquid steam" - Add in scale target for the steam rendering of the turbine and boiler so that we don't have to send an update packet every time the stored amount changes by a single mb - Fixed reactor active state - Fix reactor not actually using any inputs
			[eb2d176](https://github.com/mekanism/Mekanism/commit/eb2d176996b33cb91f80e75998ec99d99dbaa000) - Remove specific implementation of a few interfaces when the super class already implements them
			[7facb95](https://github.com/mekanism/Mekanism/commit/7facb956203e6f15b0227c40c4b306f81797c3bd) - Only sync different gui information for multiblocks when the correct tab is being displayed
			[361fbf9](https://github.com/mekanism/Mekanism/commit/361fbf93da4774bbebef6dbb5e52d04977c41e73) - Always send the structure if the multiblock tile is rendering. It is a relatively small amount of extra data, removes the need for the client to send a data request, and we have also reduced a lot of multiblock packet spam already
			[f79b42c](https://github.com/mekanism/Mekanism/commit/f79b42cd00dcc801eb3382c48e1968022b28eb00) - Remove no longer used baseBlock from Model3D, and improve the logic used for picking the direction to render the teleporter's portal in. No longer should have an edge case that causes it to sometimes render in the wrong direction
			[382dc22](https://github.com/mekanism/Mekanism/commit/382dc2233e712e3aac71a4a8140f230c11e640bc) - Fix attempting to send packet initially on every block placement, and fix a few packets being sent before the data to send is set
			[1736513](https://github.com/mekanism/Mekanism/commit/1736513bd7ab6a3b04c40e343766f195cfada9c9) - Update dev version of forge + mappings, and switch back to the latest FG3, now that the fixes needed have been merged
			[7e21519](https://github.com/mekanism/Mekanism/commit/7e2151973aaad868963953a7f976b674cd256bb7) - Fix a few bugs with the robit's repair screen [#5964](https://github.com/mekanism/Mekanism/issues/5964)
			[4799260](https://github.com/mekanism/Mekanism/commit/4799260e7229c43be5a163b06ed31fc69e750191) - Various improvements to text boxes in GUIs, and makes sure the text persists even if minecraft's window is resized
			[4666b85](https://github.com/mekanism/Mekanism/commit/4666b85cc1b0c777d96dec9cd6592953550efb59) - Make less classes implement ITileNetwork, and fix sound for stepping on and off of chargepads
			[efa7f88](https://github.com/mekanism/Mekanism/commit/efa7f8860f4132ec0d458800eaa57a34a2f79e91) - Move teleporter and quantum entangloporter syncing over to using the container sync system
			[0e70296](https://github.com/mekanism/Mekanism/commit/0e70296e877fae87f3b32adee0017af7b1ae90e4) - Fix a few minor issues with the reactor and its formed state
			[83b4fff](https://github.com/mekanism/Mekanism/commit/83b4fff99e226a85c62794e1e68bcdc093fb5557) - Move registering our transmitter model loader even earlier. Should hopefully prevent [#5881](https://github.com/mekanism/Mekanism/issues/5881) and [#5963](https://github.com/mekanism/Mekanism/issues/5963)
			[349ff4c](https://github.com/mekanism/Mekanism/commit/349ff4cacce75d9fe2aa79da4d9657bfb36e4487) - Remove a couple cases we set the glow, as it did not seem to change anything, and move the configurable machine overlay to using the block highlight event to reduce the amount of calculations that have to happen if you have a lot of machines and are holding a configurator to ray trace and see if you are hovering that machine
			[1c13d44](https://github.com/mekanism/Mekanism/commit/1c13d440875eac8fd773e4c5f53902b580ff3146) - Improve performance of rendering various TERs by batching calls made to the same render type at least within an individual TERs
			[a66793a](https://github.com/mekanism/Mekanism/commit/a66793a20c4b70b594773b68d727bb22a85b3a99) - Improve and fix a few bugs in the flame renderer
			[6dcef43](https://github.com/mekanism/Mekanism/commit/6dcef43b9c930f0186d54d10fd25a8bda02b9282) - Improve accuracy of getRenderBoundingBox so that tiles can be properly culled when they are not in view, and add a full block render bounding box to transmitters so that they can render their contents even when they are barely on screen - Improve rendering logic of turbine rotors when not inside a formed turbine - Fixed turbine rotors sending update packets before the client has a tile for that position
			[e940835](https://github.com/mekanism/Mekanism/commit/e940835e926a8e91f61aa11cde77f7f883fee6d1) - Improve the render bounding boxes for multiblocks and the digital miner
			[0b36c7a](https://github.com/mekanism/Mekanism/commit/0b36c7acc5ceb5017ee82b6188e898369c458af8) - Further cleanup of NBTConstants, and fix model loader causing issues in runData
			[79b67de](https://github.com/mekanism/Mekanism/commit/79b67dedad3d89592b3d621d36880d409bf497be) - Fix actually moving remaining items instead of just simulating the move, and thus duping the remaining items [#5966](https://github.com/mekanism/Mekanism/issues/5966)
			[aea149f](https://github.com/mekanism/Mekanism/commit/aea149f63c1f87eead952a1b93dcae36bffb7bc4) - Do some basic cleanup to RenderResizableCuboid and remove a bunch of unused code
			[bf6119d](https://github.com/mekanism/Mekanism/commit/bf6119db3360ce3a3a06f493b964523b95ee3736) - Bump version to 9.9.16

	Mekanism Generators (MekanismGenerators-1.15.2-9.9.15.407.jar --> MekanismGenerators-1.15.2-9.9.17.409.jar):
		MekanismGenerators-1.15.2-9.9.17.409.jar:
			Warning: Mekanism is currently in alpha, and is not recommended for widespread use in modpacks. There are likely to be game breaking bugs, and updating from one alpha to the next may cause various mekanism blocks to disappear/void their contents. While we will try to not have this happen/keep it to a minimum make sure to make backups. You can read more about the alpha state of this project [here](https://github.com/mekanism/Mekanism#alpha-status).
			[06bd72f](https://github.com/mekanism/Mekanism/commit/06bd72f6d2d12398768052d125f7d1e9ab8022a9) - Continued work on rewriting various parts of render resizable cuboid - Properly pass the light value we want to use to the cuboid we are rendering [#5800](https://github.com/mekanism/Mekanism/issues/5800) - Massively improve how things like water visually render in mechanical pipes (there is still more I plan on doing to further improve this) - Batch a bunch of the draws that we make via our render resizable cuboid
			[549dfac](https://github.com/mekanism/Mekanism/commit/549dfacdaf03d82c09113d8b633f88943107f0ff) - Work on consolidating factory implementation
			[adbb826](https://github.com/mekanism/Mekanism/commit/adbb826ad3daeefb83d6d40a4e33a710a94105b2) - Use suppliers to avoid setting references to other registries before they're initialized
			[7317370](https://github.com/mekanism/Mekanism/commit/7317370d30cf4c044ca5ead44b2b52d92a5a1040) - Further improve rendering of things like water in mechanical pipes, and batch rendering of turbine rotors that are inside of an industrial turbine
			[eb6b759](https://github.com/mekanism/Mekanism/commit/eb6b759f7b59250847d0e2f62793fe5e55f0f9d4) - Fix some broken casts, fix factory usage & storage
			[d8f5f49](https://github.com/mekanism/Mekanism/commit/d8f5f49042914caf5ca614463bd7c313563572e8) - Begin work on attribute system for blocks
			[beabfd4](https://github.com/mekanism/Mekanism/commit/beabfd4cf3a03555cea3445060aa9f5e5a206503) - Continue work on the new block framework
			[7683ab6](https://github.com/mekanism/Mekanism/commit/7683ab68a995061c95cd929b04a32a0e61412bad) - Continue working on attribute system
			[db6ce75](https://github.com/mekanism/Mekanism/commit/db6ce750387a920306baf56b2f0d27595529ed42) - Continued work on block consolidation
			[eb17c4d](https://github.com/mekanism/Mekanism/commit/eb17c4d9209aa5e82d983ee0fc741cc48cb5b9dd) - Restructure block types to avoid forcing TileEntities
			[e391302](https://github.com/mekanism/Mekanism/commit/e39130233ab1e7e18d3696ec994416d21fb7389f) - Remove some irrelevant tier-related code
			[a817632](https://github.com/mekanism/Mekanism/commit/a817632511b016aa0471538f6e6cea16e4d9336b) - Convert bins and induction cells/providers
			[449fc77](https://github.com/mekanism/Mekanism/commit/449fc778924420769786870a4834211efdd7113a) - Migrate energy cube, fluid tank, gas tank
			[b997ed9](https://github.com/mekanism/Mekanism/commit/b997ed9f94c786765920e91441c3ec23e9275097) - Continue consolidation, fix some issues
			[2ca177f](https://github.com/mekanism/Mekanism/commit/2ca177fe45452f62113cde23527b5fa977d4c106) - Fix accidental file removal
			[7ef0640](https://github.com/mekanism/Mekanism/commit/7ef064047db29c9d2000e61d0f0746596206d515) - Fixes and cleanup
			[76da82b](https://github.com/mekanism/Mekanism/commit/76da82b3c58fab29a83070c722fd6280e9f3af86) - Additional fixes
			[4d7e3a7](https://github.com/mekanism/Mekanism/commit/4d7e3a7e2f2a40f8e94af3751b0b3402dc87959a) - Add some helper methods to clean up attribute references
			[13fa2db](https://github.com/mekanism/Mekanism/commit/13fa2dbfd8dda2ca3455f7031b5716d5fdc35314) - Fix Induction Cells/Providers not exposing TileEntities
			[4a3b978](https://github.com/mekanism/Mekanism/commit/4a3b97889c438d67506f930774a99bb37a2efdd8) - Fix Logistical Sorter voxel model
			[3fd69fc](https://github.com/mekanism/Mekanism/commit/3fd69fc4a1d5b3531f53694449606191935a861a) - Initial draft of the Energy API rework, also fixed various typos/copy paste errors in the other handler's java docs that I came across while writing the spec
			[3e48bdf](https://github.com/mekanism/Mekanism/commit/3e48bdf4658273490b5e0b8db36116b8c18e79c1) - Write most of the base backend of the new Energy API. (Note does not currently compile) and fix various minor bugs in various handlers: - Fixed edge case in growStack that could theoretically allow for integer overflow - Fix misc comments/variable names being incorrect for that handler type (for example naming variables slots rather than tanks) - Added some validity checking to capacities of things
			[90ee1d7](https://github.com/mekanism/Mekanism/commit/90ee1d726b7adcd05924cf7431532192e5b496bf) - More work on converting to new energy API implementation, still does not compile
			[62d8c69](https://github.com/mekanism/Mekanism/commit/62d8c69554c594825a0e36c3300f44d2fe8e5b59) - Continued work on converting to the new energy API implementation, still does not compile
			[60cd291](https://github.com/mekanism/Mekanism/commit/60cd2912a3c20c620bfc9247026eea714416c836) - Continued work on converting to the new energy API implementation, still does not compile - Made Metallurgic infuser side config support configuring energy - Increased default energy buffer for quantum entangloporter from 16 million to 128 million (to match the default of the ultimate energy cube) - Start rewriting our handling of integrating with other energy systems. Rather than having specific handling for interacting with various handlers, we are moving towards having classes that wrap the other handlers into being able to be handled by our generic IStrictEnergyHandler
			[9512cd0](https://github.com/mekanism/Mekanism/commit/9512cd05346dd456a8d515bd2796c041c704d097) - Continued work on converting to the new energy API implementation, still does not compile - Moved redstone to energy from config to recipe system, and add a recipe for redstone block to energy - Modernized chargepad code, and made it able to charge items in the offhand
			[c991416](https://github.com/mekanism/Mekanism/commit/c99141669c5a18dbd10ae013c4c9f2bb2046d278) - Continued work on converting to the new energy API implementation, still does not compile - Unified more ejection code for energy, fluids, and gases
			[740a52d](https://github.com/mekanism/Mekanism/commit/740a52dd622927f0b05d7a48fac135cfb1783e76) - Mostly finished first pass at converting the induction matrix to the new energy system, still does not compile
			[a8bf276](https://github.com/mekanism/Mekanism/commit/a8bf2760cd036a04378e5bcb26e5f17a781bd992) - Continue work on converting to the new energy api, still does not compile
			[d7fe6dd](https://github.com/mekanism/Mekanism/commit/d7fe6ddb79bbfdfa80ca00b109ae0339a0e72c1f) - Still lots of bugs and things that have to be cleaned up/fixed, but it compiles again
			[1b7e8ac](https://github.com/mekanism/Mekanism/commit/1b7e8acbfa907b804220d90ea1cef459d9cb46f7) - Fix rebase errors, and make it compile again
			[0699994](https://github.com/mekanism/Mekanism/commit/0699994e3d207ebd76a3ce63ae5b9cf1614fa6cb) - Optimize imports and reformat code
			[71db700](https://github.com/mekanism/Mekanism/commit/71db700f0bb173641f4e4c54a2ef9a818e12481c) - Move energized items over to the new energy API with easier extensibility support for implementing other mods' energy handlers - Minor cleanup of some attribute stuff - More consistently not require energy in items when in creative
			[cdca82c](https://github.com/mekanism/Mekanism/commit/cdca82c9404b9fcad0821af3407655e5968d25d9) - Modernize electric bow implementation to extend vanilla's bow and more closely mirror some of the logic from it - Fixes some enchantments not working properly on the electric bow - Fixes custom arrows not always working as intended - Also made the hoes in Mekanism Tools implement a hoe tool type in case any mods look for one
			[01b414a](https://github.com/mekanism/Mekanism/commit/01b414a2cb9c60058c4378362d9347f0c09d6e00) - Use some util methods to cleanup rendering checks that got messier
			[e8fb5df](https://github.com/mekanism/Mekanism/commit/e8fb5df3c902e3304015bbb3e848c8dea4d7f963) - Cleanup code pertaining to conversion checks
			[2af649a](https://github.com/mekanism/Mekanism/commit/2af649a9fa15bcdf93837aa5cc6fb340b90caf3f) - Cleanup code pertaining to setting energy requirements for recipes
			[26d2831](https://github.com/mekanism/Mekanism/commit/26d2831564ab3dd87dfa106c4e1028b59901b599) - Fix mekanism tiles being incorrect in their check of if they are activatable, and cleanup a bit of code having to do with targets
			[66e59a7](https://github.com/mekanism/Mekanism/commit/66e59a7d0306c26b9bcae5b8187af2dcae0fe686) - First pass at experimenting with converting energy from a double to a FloatingLong, it compiles, but FloatingLong is not properly implemented yet
			[f3943ef](https://github.com/mekanism/Mekanism/commit/f3943efd87d0dc148eb5ab021464f00a64afb3ba) - Update dependencies, and setup JUnit
			[aa33eac](https://github.com/mekanism/Mekanism/commit/aa33eaca8051e30f16a322c2a379ac479d6e8735) - Fix a few bugs with FloatingLong and mostly implement the class, for now various parts of it are using temporary methods of calculating things. Also improve our TOP integration, making it so that our gas and infusion bar renderers look better, and replacing TOPs default energy display for our own blocks. Additionally made it so looking at our multiblocks show all the proper stats rather than having to look at the valve specifically
			[2f36a52](https://github.com/mekanism/Mekanism/commit/2f36a522b0cec3aed6448d58bd717be0a2a697fe) - Fix client side only method being used for resource location config, and fix modulo
			[a971911](https://github.com/mekanism/Mekanism/commit/a971911c98298ccb6c1d8714bd479a2a01eb80f7) - Fix accidental inversion of BasicEnergyContainer#insert return value, and fix typo in path for test classes
			[5cebdad](https://github.com/mekanism/Mekanism/commit/5cebdadfba593c083fde2ece8ae80bd790f69ec3) - Update docs to properly specify how to handle FloatingLongs for the energy api and when they can be modified and when they shouldn't be modified. Also remove some java docs that are incorrect due to us overwriting for more reasons than just to avoid a cached value such to check our validity predicates
			[222f601](https://github.com/mekanism/Mekanism/commit/222f601d2b2b05326c645285d029f68e11302918) - Reduce number of sync packets sent for mechanical pipes, pressurized tubes, and universal cables, and calculate the content scale on the server instead of the client. Also added some TODOs for some odd bugs unrelated to rendering that I ran into while testing
			[494ec79](https://github.com/mekanism/Mekanism/commit/494ec792645eab0db47b4c3e4dd94116852b53bb) - Fix the save share for networks not being calculated properly, and also fix the networks not updating their capacity before attempting to absorb a transmitter's buffer causing for a good number of contents to be voided when a single pipe was broken. Also fix not updating the capacity before accepting contents, causing for weird things to occur/break
			[e7e21e7](https://github.com/mekanism/Mekanism/commit/e7e21e7c46578dafddd5ad018e4a9c25714418b9) - Fix being to strict on caching various handler's read write settings when based on a side config
			[c955a73](https://github.com/mekanism/Mekanism/commit/c955a7363d9edbcf1313832ecc798ec5db44e6bd) - Fix laser particle not displaying properly, due to BasicEnergyContainer#extract not obeying the API spec of mutability
			[74938d0](https://github.com/mekanism/Mekanism/commit/74938d07e78cf292bc0ed31cfef4693edcff96ad) - Allow conversion to bypass rate limit of energy cube and gas tank, and fix improper deserialization of the decimal for floating longs for recipes, also fix filling items with energy in the EnergyInventorySlot, apparently two onContentsChanged calls were missing
			[05313f4](https://github.com/mekanism/Mekanism/commit/05313f4610aa500c6d4401141327bd511b88dc82) - Move energy multiplier for electrolysis recipe to a FloatingLong
			[4135faf](https://github.com/mekanism/Mekanism/commit/4135fafae0433cf8187406672592ca2e6feadd4e) - Improve FEIntegration implementation to better handle if we have multiple energy containers in the handler we are wrapping
			[0f78345](https://github.com/mekanism/Mekanism/commit/0f7834528bc05af68a88f2779b4b9d768d77e04e) - Use util method to make the energy cube scale increase look better and be a smoother transition, and also cleanup some multitank support/tooltip code
			[8727ac5](https://github.com/mekanism/Mekanism/commit/8727ac564c2b99e779e18aba44155287a4ee0ca5) - Cache capacities of a few different multiblocks
			[9e836a5](https://github.com/mekanism/Mekanism/commit/9e836a59ce6bf127cff007ba71d21faef48eb0e1) - Fix network scale calculations on reforming (a pipe being broken), and on merging of networks.
			[b56f8b9](https://github.com/mekanism/Mekanism/commit/b56f8b9ccf39eafecf2a5627e11030a4e9e43142) - Improve some of the checks for seeing if a container has "infinite" of a material
			[6880316](https://github.com/mekanism/Mekanism/commit/68803166ba949f0f9476c691f4a436ff8205bdda) - Minor cleanup to TransporterManager, removing the need for stack size trickery
			[3a9a9bd](https://github.com/mekanism/Mekanism/commit/3a9a9bd2670dfadf4fa38d5bc12a47b79b6b5e15) - Go through and cleanup a few TODOs from the Energy rewrite, and fix a few other issues with values being incorrect, as well as energy not syncing to the robit's gui
			[97bb8d4](https://github.com/mekanism/Mekanism/commit/97bb8d4bf64c69db18b9ea07dcd4ac6cce5461fa) - Cleanup some comments
			[c3f90c7](https://github.com/mekanism/Mekanism/commit/c3f90c7cbe3139a8d540adf5cb6e2fb61ae9155b) - Fix lastEnergyReceived
			[6331aa8](https://github.com/mekanism/Mekanism/commit/6331aa8074340c2e24c99eeba461f5b4d84eabc3) - Fix the energy matrix adding energy to the cached total rather than removing it when energy is removed
			[adfcd34](https://github.com/mekanism/Mekanism/commit/adfcd34950cabd62ab61bfd48c329954417f2b9f) - Implement proper range checks to CachedFloatingLongValue and switch it to strings representing it to properly support unsigned longs if we eventually switch to them. Also switch the SerializerHelper and Json serialization to doing it by number so that if/when we switch to unsigned long it works properly
			[c679c31](https://github.com/mekanism/Mekanism/commit/c679c317d77205455b2eedd3834d1ea006b40793) - Simulate insertion for inserting items into slots that has a slot limit larger than the item's max stack size, as the slot may allow for stacks up to a certain size but also be respecting the max stack size of the item. [#5988](https://github.com/mekanism/Mekanism/issues/5988)
			[94308f5](https://github.com/mekanism/Mekanism/commit/94308f54030f44ea15b4805614f6f15bb34d8f3c) - Implement multiplication for FloatingLongs without having to convert to string and use BigDecimal ([#5987](https://github.com/mekanism/Mekanism/issues/5987))
			[a8ccd36](https://github.com/mekanism/Mekanism/commit/a8ccd36379b26b95056066da1f95a91ecc8beebe) - Set steam to actually have the correct temperature ([#5972](https://github.com/mekanism/Mekanism/issues/5972))
			[0c62ea8](https://github.com/mekanism/Mekanism/commit/0c62ea89817951dc2121d03c5a7fc2e079649651) - Add test lib QuickTheories for property based testing of FloatingLong, and partially reorganize ordering of the FloatingLong class
			[c5a752f](https://github.com/mekanism/Mekanism/commit/c5a752ff7d122799459ef53a8b6a6a263e212ec5) - Spec change to FloatingLong so that the modifyEqual methods return the actual object, so that if it is called on a constant it instead returns a new clean value. Also add javadocs to methods in FloatingLong
			[8e97204](https://github.com/mekanism/Mekanism/commit/8e97204f4e49fdf1c8005391be19b3a9d0adfa6f) - Rewrite handling of upgrade recipes. For the most part properly handles transferring data now. It only does basic testing for finding a matching valid configuration, but if it cannot find one it just doesn't match as a valid input to the recipe [#5743](https://github.com/mekanism/Mekanism/issues/5743), and fix handling of initial container syncing on servers where there may be multiple players.
			[2711127](https://github.com/mekanism/Mekanism/commit/2711127eac3379a471c2019aa9b7cf484333d4e0) - Re-implement instantly turning blocks to active, and having a longer delay threshold before they are considered deactivated. Also fix client energy used calculations being incorrect due to the mutability of objects
			[a2bc3a0](https://github.com/mekanism/Mekanism/commit/a2bc3a0773539f45c3a7da4e850ecd05c6c9aad5) - Store FloatingLongs as a string in NBT to be able to easily switch to unsigned longs if we decide to without voiding saved energy again
			[5450d2d](https://github.com/mekanism/Mekanism/commit/5450d2df813e375f3a106a69f5609ca3737ecc21) - Fix handling of parsing doubles and make it so it parses them consistently
			[31dc0c8](https://github.com/mekanism/Mekanism/commit/31dc0c86014a539a245646a06dfa774c91fee31c) - Fix miner not properly refreshing chunks on changing radius, and don't attempt to check the tile at a position during world loading to hopefully remove the race condition/halting that can occur [#5897](https://github.com/mekanism/Mekanism/issues/5897) [#5978](https://github.com/mekanism/Mekanism/issues/5978)
			[05766a7](https://github.com/mekanism/Mekanism/commit/05766a7a29ba180575b7bfa991af330fca988cc9) - Display energy network capacity as FloatingLong
			[9132e4d](https://github.com/mekanism/Mekanism/commit/9132e4d922333f0c79ea268cc09f12a4b9619d57) - Convert FloatingLong to using an unsigned long ([#5991](https://github.com/mekanism/Mekanism/issues/5991))
			[b509204](https://github.com/mekanism/Mekanism/commit/b509204f3f6d88da6ac7b69516a66b0e960e8ce3) - Bump version to 9.9.17

		MekanismGenerators-1.15.2-9.9.16.408.jar:
			Warning: Mekanism is currently in alpha, and is not recommended for widespread use in modpacks. There are likely to be game breaking bugs, and updating from one alpha to the next may cause various mekanism blocks to disappear/void their contents. While we will try to not have this happen/keep it to a minimum make sure to make backups. You can read more about the alpha state of this project [here](https://github.com/mekanism/Mekanism#alpha-status).
			[8cfe2a4](https://github.com/mekanism/Mekanism/commit/8cfe2a45b9d1abb719ff85b2b78fb055c4c82f8f) - Fix ore/resource harvest levels ([#5942](https://github.com/mekanism/Mekanism/issues/5942)), fix Paxel harvest levels
			[7923962](https://github.com/mekanism/Mekanism/commit/79239628b9c6f2fc5d7f6a4aadca443678c35dd9) - Hopefully fix transmitter model issues ([#5922](https://github.com/mekanism/Mekanism/issues/5922)), remove client-side markDirty() call We used to call markDirty() on the client as it would trigger an all-sides neighbor update which was necessary for some kind of multi-mod interaction. It's not relevant anymore though as far as I can tell, especially since we have an internal markDirty() impl which prevents such updates.
			[c8476c1](https://github.com/mekanism/Mekanism/commit/c8476c1cb98c2822ad4118db3039d7ea8e1981db) - Fix harvest level changes
			[7e9ff56](https://github.com/mekanism/Mekanism/commit/7e9ff5615b782c192f1caad4ae4d635cc1f6ac75) - Initial experimenting with using vanilla's sync/update packet system rather than our own
			[8ff4379](https://github.com/mekanism/Mekanism/commit/8ff4379299ee41208fb549ac3664bd2f8946d159) - Move all NBT keys to strings. Some things got renamed so various misc things may be voided from Mekanism machines/blocks so I would recommend emptying things just to be on the safe side. In some cases it will just be machine configurations that get reset. Also changed how the chunk loader component saves chunk positions, so you may have to go and reload the chunks to get them to stay loaded again. Things with bounding blocks like digital miners, advanced solar generators, security desks may unbind the bounding block from the actual main block, so should probably be broken/picked up before updating
			[b387c94](https://github.com/mekanism/Mekanism/commit/b387c94c1c2ee214d62feaad17e2bfb7ae71bbdb) - Move JSON string key constants to constants to make it easier to prevent typos and if there are typos at least have them be consistent throughout serialization and deserialization. No current recipes should break as nothing has been renamed.
			[006dbe6](https://github.com/mekanism/Mekanism/commit/006dbe6ce19672947b8f0b7a974cf9801989b923) - Only sync the energy scale to clients for energy cubes unless the gui is open
			[03738bd](https://github.com/mekanism/Mekanism/commit/03738bd2d0c29ebd4deebed92928a125f424c197) - Fix Gas Generator sound, fix Gas Generator 'burn rate' readout ([#5047](https://github.com/mekanism/Mekanism/issues/5047))
			[ce6aec5](https://github.com/mekanism/Mekanism/commit/ce6aec58ac0435b616a6229a9cdd2aafbf463e1c) - Start converting more tiles to syncing stuff via vanilla's packet system. Also fix the Bio generator processing stuff on both the client and the server instead of just the server
			[1e3592b](https://github.com/mekanism/Mekanism/commit/1e3592b2418821a765817746e330d18ed4bb3e66) - Finish converting ITileComponents over to properly syncing their data
			[7c0f0cd](https://github.com/mekanism/Mekanism/commit/7c0f0cd7b706321fc576e169805d69bef5b58e07) - Fix transmitters not checking bounds prior to placement, fix PRC GUI title
			[17019a8](https://github.com/mekanism/Mekanism/commit/17019a84fdc7580acdd4d649b898f7bd72a77fce) - Cleanup some code pertaining to inventory ejecting, ensuring we grab items based on what can be extracted rather than what is directly in the slot. [#5938](https://github.com/mekanism/Mekanism/issues/5938)
			[fc5e007](https://github.com/mekanism/Mekanism/commit/fc5e007cf70dd5998dd7c1fd8c790ccb6353900f) - Fix improper internal insertion restrictions for rotary condensentrator tanks [#5940](https://github.com/mekanism/Mekanism/issues/5940)
			[3ffb6c8](https://github.com/mekanism/Mekanism/commit/3ffb6c8dd142bf330ea5cbabbad5ba92f2a243c3) - Fixes pressurized tubes and mechanical pipes not being able to connect to quantum entangloporters [#5950](https://github.com/mekanism/Mekanism/issues/5950)
			[381eadd](https://github.com/mekanism/Mekanism/commit/381eadd5b5724285e9929ededfe604b492cd1e47) - Fix Fluidic Plenisher GUI, and fix tank insert/extract checks for the electric pump [#5951](https://github.com/mekanism/Mekanism/issues/5951)
			[8b990a4](https://github.com/mekanism/Mekanism/commit/8b990a4d856efbcff0a625f1154725b76715b2d9) - Fix pump & plenisher GUI scaling
			[7d41e3f](https://github.com/mekanism/Mekanism/commit/7d41e3f07cf4a70b6ee556928882a49b1c17711b) - Reinstate active state update delay ([#5848](https://github.com/mekanism/Mekanism/issues/5848)), clean up active state mess A bunch of machines were making particle effects when they shouldn't have been, QE should not have an active state to begin with
			[fb878c0](https://github.com/mekanism/Mekanism/commit/fb878c0bef3078fef0aa2ebfd7bcd1266c41457f) - Split onUpdate into two methods, onUpdateClient and onUpdateServer, to make the code more readable about what is happening on what side, and to note require as much indentation due to isRemote checks
			[e6ac88d](https://github.com/mekanism/Mekanism/commit/e6ac88d5aa68c5cb9b009f3193a7ca881dd66f04) - Cleanup implementation/handling around isCapabilityDisabled, to only have to check it once rather than at each level of super, and to make it so manually calling it can be forgotten about.
			[6371faa](https://github.com/mekanism/Mekanism/commit/6371faa6f4553b0cfee8031941f48eb19ea3190b) - Fix a potential issue with active state changes
			[1951d1a](https://github.com/mekanism/Mekanism/commit/1951d1a6706f5731c57162cdffe37d3f5c9cebe0) - Update machine lighting on world load
			[4c88139](https://github.com/mekanism/Mekanism/commit/4c88139a7bdf20fb1d2bd9db7db7258564be1348) - Work on moving transmitters to syncing their initial data via vanilla's update packet
			[4f5822e](https://github.com/mekanism/Mekanism/commit/4f5822e019f8c77d97fa3130a315907068900dd9) - Work on moving the security desk to using vanilla's update packet and our container sync system. We still need to properly move over syncing the trusted players list
			[e25085c](https://github.com/mekanism/Mekanism/commit/e25085c71651702863446a3e12b661af51660b36) - Create system for syncing lists as elements in containers
			[1fc912d](https://github.com/mekanism/Mekanism/commit/1fc912d362a38a651af7dd9e6131cd0c304feaac) - Move evap controller and resistive heater over to vanilla update packets
			[9527146](https://github.com/mekanism/Mekanism/commit/952714684f1ea5c04c38d8b5aee9c8ad729fb63d) - Create a way to sync filter lists for containers - Cleanup some code pertaining to filters - Compare hashcode of list to check if it is dirty rather than comparing all the elements - Make HashList implement the List spec - Fixed error in loading frequencies
			[0294ecf](https://github.com/mekanism/Mekanism/commit/0294ecf009209a61d2986f7d841e206f5fe6fd65) - Move fluid tank syncing to vanilla packet system, and cleanup implementation of lasers and move that stuff over to the new method of handling sync data
			[757ed70](https://github.com/mekanism/Mekanism/commit/757ed709cca79913d78a99e31bb26f081b850264) - Switch induction matrix over to using vanilla sync packets and the container sync system
			[723c950](https://github.com/mekanism/Mekanism/commit/723c95054df89fa3bde59c83fe6772cfcf52dba9) - Convert dynamic tank, and internal multiblocks to using vanilla update packets, and our container sync system. Also fix an NBT clash that accidentally introduced
			[f0dea9f](https://github.com/mekanism/Mekanism/commit/f0dea9f3e6ff1480b964f9db173e6a4ed7511137) - Fix sparkling effect playing continuously
			[c342a13](https://github.com/mekanism/Mekanism/commit/c342a13347a4e264981aaaea9217700e9e652a1f) - Continue work on converting multiblock packet handling. Also start working on attempting to fix some of the packet spam that multiblocks have
			[437f2fa](https://github.com/mekanism/Mekanism/commit/437f2fa8034f76e090cb3634212ad642a08c9d8e) - Only sync fluid changes for rendering for the fluid tank, boiler water tank, and dynamic tank when the scale changes, rather than on every mb of difference. Also move the scale calculation to a util method to ensure that we render at least something if there is any contents
			[7ebe623](https://github.com/mekanism/Mekanism/commit/7ebe623a8200dd93a0dfceb7113cbd9cb0b41cba) - Use our own sync packet to avoid chunk rendering thrashing
			[9bedc8b](https://github.com/mekanism/Mekanism/commit/9bedc8b6c7a7592ade21b5de7641909ce61d7a57) - Add support for showing how much time our TERs are taking in the debug pie chart for block entities
			[324382d](https://github.com/mekanism/Mekanism/commit/324382d148f884ad8314c5eb3b767d021ce3105c) - Convert reactor over to using the new sync system, and fix the normal laser always firing the max amount of power even when it didn't have that much power stored
			[c27ebf3](https://github.com/mekanism/Mekanism/commit/c27ebf301e11adff738d2920bc828d5cb7801fd8) - Move syncing of formula to our container sync system, and fix a few different issues with rendering of specific gui pieces
			[4c490e2](https://github.com/mekanism/Mekanism/commit/4c490e27155dbf3bdd2bc8e692168b4832432927) - Switch steam tanks for the turbine, reactor, and boiler to be gas tanks and use the gas variant of steam, rather than fluid tanks using "liquid steam" - Add in scale target for the steam rendering of the turbine and boiler so that we don't have to send an update packet every time the stored amount changes by a single mb - Fixed reactor active state - Fix reactor not actually using any inputs
			[eb2d176](https://github.com/mekanism/Mekanism/commit/eb2d176996b33cb91f80e75998ec99d99dbaa000) - Remove specific implementation of a few interfaces when the super class already implements them
			[7facb95](https://github.com/mekanism/Mekanism/commit/7facb956203e6f15b0227c40c4b306f81797c3bd) - Only sync different gui information for multiblocks when the correct tab is being displayed
			[361fbf9](https://github.com/mekanism/Mekanism/commit/361fbf93da4774bbebef6dbb5e52d04977c41e73) - Always send the structure if the multiblock tile is rendering. It is a relatively small amount of extra data, removes the need for the client to send a data request, and we have also reduced a lot of multiblock packet spam already
			[f79b42c](https://github.com/mekanism/Mekanism/commit/f79b42cd00dcc801eb3382c48e1968022b28eb00) - Remove no longer used baseBlock from Model3D, and improve the logic used for picking the direction to render the teleporter's portal in. No longer should have an edge case that causes it to sometimes render in the wrong direction
			[382dc22](https://github.com/mekanism/Mekanism/commit/382dc2233e712e3aac71a4a8140f230c11e640bc) - Fix attempting to send packet initially on every block placement, and fix a few packets being sent before the data to send is set
			[1736513](https://github.com/mekanism/Mekanism/commit/1736513bd7ab6a3b04c40e343766f195cfada9c9) - Update dev version of forge + mappings, and switch back to the latest FG3, now that the fixes needed have been merged
			[7e21519](https://github.com/mekanism/Mekanism/commit/7e2151973aaad868963953a7f976b674cd256bb7) - Fix a few bugs with the robit's repair screen [#5964](https://github.com/mekanism/Mekanism/issues/5964)
			[4799260](https://github.com/mekanism/Mekanism/commit/4799260e7229c43be5a163b06ed31fc69e750191) - Various improvements to text boxes in GUIs, and makes sure the text persists even if minecraft's window is resized
			[4666b85](https://github.com/mekanism/Mekanism/commit/4666b85cc1b0c777d96dec9cd6592953550efb59) - Make less classes implement ITileNetwork, and fix sound for stepping on and off of chargepads
			[efa7f88](https://github.com/mekanism/Mekanism/commit/efa7f8860f4132ec0d458800eaa57a34a2f79e91) - Move teleporter and quantum entangloporter syncing over to using the container sync system
			[0e70296](https://github.com/mekanism/Mekanism/commit/0e70296e877fae87f3b32adee0017af7b1ae90e4) - Fix a few minor issues with the reactor and its formed state
			[83b4fff](https://github.com/mekanism/Mekanism/commit/83b4fff99e226a85c62794e1e68bcdc093fb5557) - Move registering our transmitter model loader even earlier. Should hopefully prevent [#5881](https://github.com/mekanism/Mekanism/issues/5881) and [#5963](https://github.com/mekanism/Mekanism/issues/5963)
			[349ff4c](https://github.com/mekanism/Mekanism/commit/349ff4cacce75d9fe2aa79da4d9657bfb36e4487) - Remove a couple cases we set the glow, as it did not seem to change anything, and move the configurable machine overlay to using the block highlight event to reduce the amount of calculations that have to happen if you have a lot of machines and are holding a configurator to ray trace and see if you are hovering that machine
			[1c13d44](https://github.com/mekanism/Mekanism/commit/1c13d440875eac8fd773e4c5f53902b580ff3146) - Improve performance of rendering various TERs by batching calls made to the same render type at least within an individual TERs
			[a66793a](https://github.com/mekanism/Mekanism/commit/a66793a20c4b70b594773b68d727bb22a85b3a99) - Improve and fix a few bugs in the flame renderer
			[6dcef43](https://github.com/mekanism/Mekanism/commit/6dcef43b9c930f0186d54d10fd25a8bda02b9282) - Improve accuracy of getRenderBoundingBox so that tiles can be properly culled when they are not in view, and add a full block render bounding box to transmitters so that they can render their contents even when they are barely on screen - Improve rendering logic of turbine rotors when not inside a formed turbine - Fixed turbine rotors sending update packets before the client has a tile for that position
			[e940835](https://github.com/mekanism/Mekanism/commit/e940835e926a8e91f61aa11cde77f7f883fee6d1) - Improve the render bounding boxes for multiblocks and the digital miner
			[0b36c7a](https://github.com/mekanism/Mekanism/commit/0b36c7acc5ceb5017ee82b6188e898369c458af8) - Further cleanup of NBTConstants, and fix model loader causing issues in runData
			[79b67de](https://github.com/mekanism/Mekanism/commit/79b67dedad3d89592b3d621d36880d409bf497be) - Fix actually moving remaining items instead of just simulating the move, and thus duping the remaining items [#5966](https://github.com/mekanism/Mekanism/issues/5966)
			[aea149f](https://github.com/mekanism/Mekanism/commit/aea149f63c1f87eead952a1b93dcae36bffb7bc4) - Do some basic cleanup to RenderResizableCuboid and remove a bunch of unused code
			[bf6119d](https://github.com/mekanism/Mekanism/commit/bf6119db3360ce3a3a06f493b964523b95ee3736) - Bump version to 9.9.16

	Mekanism Tools (MekanismTools-1.15.2-9.9.15.407.jar --> MekanismTools-1.15.2-9.9.17.409.jar):
		MekanismTools-1.15.2-9.9.17.409.jar:
			Warning: Mekanism is currently in alpha, and is not recommended for widespread use in modpacks. There are likely to be game breaking bugs, and updating from one alpha to the next may cause various mekanism blocks to disappear/void their contents. While we will try to not have this happen/keep it to a minimum make sure to make backups. You can read more about the alpha state of this project [here](https://github.com/mekanism/Mekanism#alpha-status).
			[06bd72f](https://github.com/mekanism/Mekanism/commit/06bd72f6d2d12398768052d125f7d1e9ab8022a9) - Continued work on rewriting various parts of render resizable cuboid - Properly pass the light value we want to use to the cuboid we are rendering [#5800](https://github.com/mekanism/Mekanism/issues/5800) - Massively improve how things like water visually render in mechanical pipes (there is still more I plan on doing to further improve this) - Batch a bunch of the draws that we make via our render resizable cuboid
			[549dfac](https://github.com/mekanism/Mekanism/commit/549dfacdaf03d82c09113d8b633f88943107f0ff) - Work on consolidating factory implementation
			[adbb826](https://github.com/mekanism/Mekanism/commit/adbb826ad3daeefb83d6d40a4e33a710a94105b2) - Use suppliers to avoid setting references to other registries before they're initialized
			[7317370](https://github.com/mekanism/Mekanism/commit/7317370d30cf4c044ca5ead44b2b52d92a5a1040) - Further improve rendering of things like water in mechanical pipes, and batch rendering of turbine rotors that are inside of an industrial turbine
			[eb6b759](https://github.com/mekanism/Mekanism/commit/eb6b759f7b59250847d0e2f62793fe5e55f0f9d4) - Fix some broken casts, fix factory usage & storage
			[d8f5f49](https://github.com/mekanism/Mekanism/commit/d8f5f49042914caf5ca614463bd7c313563572e8) - Begin work on attribute system for blocks
			[beabfd4](https://github.com/mekanism/Mekanism/commit/beabfd4cf3a03555cea3445060aa9f5e5a206503) - Continue work on the new block framework
			[7683ab6](https://github.com/mekanism/Mekanism/commit/7683ab68a995061c95cd929b04a32a0e61412bad) - Continue working on attribute system
			[db6ce75](https://github.com/mekanism/Mekanism/commit/db6ce750387a920306baf56b2f0d27595529ed42) - Continued work on block consolidation
			[eb17c4d](https://github.com/mekanism/Mekanism/commit/eb17c4d9209aa5e82d983ee0fc741cc48cb5b9dd) - Restructure block types to avoid forcing TileEntities
			[e391302](https://github.com/mekanism/Mekanism/commit/e39130233ab1e7e18d3696ec994416d21fb7389f) - Remove some irrelevant tier-related code
			[a817632](https://github.com/mekanism/Mekanism/commit/a817632511b016aa0471538f6e6cea16e4d9336b) - Convert bins and induction cells/providers
			[449fc77](https://github.com/mekanism/Mekanism/commit/449fc778924420769786870a4834211efdd7113a) - Migrate energy cube, fluid tank, gas tank
			[b997ed9](https://github.com/mekanism/Mekanism/commit/b997ed9f94c786765920e91441c3ec23e9275097) - Continue consolidation, fix some issues
			[2ca177f](https://github.com/mekanism/Mekanism/commit/2ca177fe45452f62113cde23527b5fa977d4c106) - Fix accidental file removal
			[7ef0640](https://github.com/mekanism/Mekanism/commit/7ef064047db29c9d2000e61d0f0746596206d515) - Fixes and cleanup
			[76da82b](https://github.com/mekanism/Mekanism/commit/76da82b3c58fab29a83070c722fd6280e9f3af86) - Additional fixes
			[4d7e3a7](https://github.com/mekanism/Mekanism/commit/4d7e3a7e2f2a40f8e94af3751b0b3402dc87959a) - Add some helper methods to clean up attribute references
			[13fa2db](https://github.com/mekanism/Mekanism/commit/13fa2dbfd8dda2ca3455f7031b5716d5fdc35314) - Fix Induction Cells/Providers not exposing TileEntities
			[4a3b978](https://github.com/mekanism/Mekanism/commit/4a3b97889c438d67506f930774a99bb37a2efdd8) - Fix Logistical Sorter voxel model
			[3fd69fc](https://github.com/mekanism/Mekanism/commit/3fd69fc4a1d5b3531f53694449606191935a861a) - Initial draft of the Energy API rework, also fixed various typos/copy paste errors in the other handler's java docs that I came across while writing the spec
			[3e48bdf](https://github.com/mekanism/Mekanism/commit/3e48bdf4658273490b5e0b8db36116b8c18e79c1) - Write most of the base backend of the new Energy API. (Note does not currently compile) and fix various minor bugs in various handlers: - Fixed edge case in growStack that could theoretically allow for integer overflow - Fix misc comments/variable names being incorrect for that handler type (for example naming variables slots rather than tanks) - Added some validity checking to capacities of things
			[90ee1d7](https://github.com/mekanism/Mekanism/commit/90ee1d726b7adcd05924cf7431532192e5b496bf) - More work on converting to new energy API implementation, still does not compile
			[62d8c69](https://github.com/mekanism/Mekanism/commit/62d8c69554c594825a0e36c3300f44d2fe8e5b59) - Continued work on converting to the new energy API implementation, still does not compile
			[60cd291](https://github.com/mekanism/Mekanism/commit/60cd2912a3c20c620bfc9247026eea714416c836) - Continued work on converting to the new energy API implementation, still does not compile - Made Metallurgic infuser side config support configuring energy - Increased default energy buffer for quantum entangloporter from 16 million to 128 million (to match the default of the ultimate energy cube) - Start rewriting our handling of integrating with other energy systems. Rather than having specific handling for interacting with various handlers, we are moving towards having classes that wrap the other handlers into being able to be handled by our generic IStrictEnergyHandler
			[9512cd0](https://github.com/mekanism/Mekanism/commit/9512cd05346dd456a8d515bd2796c041c704d097) - Continued work on converting to the new energy API implementation, still does not compile - Moved redstone to energy from config to recipe system, and add a recipe for redstone block to energy - Modernized chargepad code, and made it able to charge items in the offhand
			[c991416](https://github.com/mekanism/Mekanism/commit/c99141669c5a18dbd10ae013c4c9f2bb2046d278) - Continued work on converting to the new energy API implementation, still does not compile - Unified more ejection code for energy, fluids, and gases
			[740a52d](https://github.com/mekanism/Mekanism/commit/740a52dd622927f0b05d7a48fac135cfb1783e76) - Mostly finished first pass at converting the induction matrix to the new energy system, still does not compile
			[a8bf276](https://github.com/mekanism/Mekanism/commit/a8bf2760cd036a04378e5bcb26e5f17a781bd992) - Continue work on converting to the new energy api, still does not compile
			[d7fe6dd](https://github.com/mekanism/Mekanism/commit/d7fe6ddb79bbfdfa80ca00b109ae0339a0e72c1f) - Still lots of bugs and things that have to be cleaned up/fixed, but it compiles again
			[1b7e8ac](https://github.com/mekanism/Mekanism/commit/1b7e8acbfa907b804220d90ea1cef459d9cb46f7) - Fix rebase errors, and make it compile again
			[0699994](https://github.com/mekanism/Mekanism/commit/0699994e3d207ebd76a3ce63ae5b9cf1614fa6cb) - Optimize imports and reformat code
			[71db700](https://github.com/mekanism/Mekanism/commit/71db700f0bb173641f4e4c54a2ef9a818e12481c) - Move energized items over to the new energy API with easier extensibility support for implementing other mods' energy handlers - Minor cleanup of some attribute stuff - More consistently not require energy in items when in creative
			[cdca82c](https://github.com/mekanism/Mekanism/commit/cdca82c9404b9fcad0821af3407655e5968d25d9) - Modernize electric bow implementation to extend vanilla's bow and more closely mirror some of the logic from it - Fixes some enchantments not working properly on the electric bow - Fixes custom arrows not always working as intended - Also made the hoes in Mekanism Tools implement a hoe tool type in case any mods look for one
			[01b414a](https://github.com/mekanism/Mekanism/commit/01b414a2cb9c60058c4378362d9347f0c09d6e00) - Use some util methods to cleanup rendering checks that got messier
			[e8fb5df](https://github.com/mekanism/Mekanism/commit/e8fb5df3c902e3304015bbb3e848c8dea4d7f963) - Cleanup code pertaining to conversion checks
			[2af649a](https://github.com/mekanism/Mekanism/commit/2af649a9fa15bcdf93837aa5cc6fb340b90caf3f) - Cleanup code pertaining to setting energy requirements for recipes
			[26d2831](https://github.com/mekanism/Mekanism/commit/26d2831564ab3dd87dfa106c4e1028b59901b599) - Fix mekanism tiles being incorrect in their check of if they are activatable, and cleanup a bit of code having to do with targets
			[66e59a7](https://github.com/mekanism/Mekanism/commit/66e59a7d0306c26b9bcae5b8187af2dcae0fe686) - First pass at experimenting with converting energy from a double to a FloatingLong, it compiles, but FloatingLong is not properly implemented yet
			[f3943ef](https://github.com/mekanism/Mekanism/commit/f3943efd87d0dc148eb5ab021464f00a64afb3ba) - Update dependencies, and setup JUnit
			[aa33eac](https://github.com/mekanism/Mekanism/commit/aa33eaca8051e30f16a322c2a379ac479d6e8735) - Fix a few bugs with FloatingLong and mostly implement the class, for now various parts of it are using temporary methods of calculating things. Also improve our TOP integration, making it so that our gas and infusion bar renderers look better, and replacing TOPs default energy display for our own blocks. Additionally made it so looking at our multiblocks show all the proper stats rather than having to look at the valve specifically
			[2f36a52](https://github.com/mekanism/Mekanism/commit/2f36a522b0cec3aed6448d58bd717be0a2a697fe) - Fix client side only method being used for resource location config, and fix modulo
			[a971911](https://github.com/mekanism/Mekanism/commit/a971911c98298ccb6c1d8714bd479a2a01eb80f7) - Fix accidental inversion of BasicEnergyContainer#insert return value, and fix typo in path for test classes
			[5cebdad](https://github.com/mekanism/Mekanism/commit/5cebdadfba593c083fde2ece8ae80bd790f69ec3) - Update docs to properly specify how to handle FloatingLongs for the energy api and when they can be modified and when they shouldn't be modified. Also remove some java docs that are incorrect due to us overwriting for more reasons than just to avoid a cached value such to check our validity predicates
			[222f601](https://github.com/mekanism/Mekanism/commit/222f601d2b2b05326c645285d029f68e11302918) - Reduce number of sync packets sent for mechanical pipes, pressurized tubes, and universal cables, and calculate the content scale on the server instead of the client. Also added some TODOs for some odd bugs unrelated to rendering that I ran into while testing
			[494ec79](https://github.com/mekanism/Mekanism/commit/494ec792645eab0db47b4c3e4dd94116852b53bb) - Fix the save share for networks not being calculated properly, and also fix the networks not updating their capacity before attempting to absorb a transmitter's buffer causing for a good number of contents to be voided when a single pipe was broken. Also fix not updating the capacity before accepting contents, causing for weird things to occur/break
			[e7e21e7](https://github.com/mekanism/Mekanism/commit/e7e21e7c46578dafddd5ad018e4a9c25714418b9) - Fix being to strict on caching various handler's read write settings when based on a side config
			[c955a73](https://github.com/mekanism/Mekanism/commit/c955a7363d9edbcf1313832ecc798ec5db44e6bd) - Fix laser particle not displaying properly, due to BasicEnergyContainer#extract not obeying the API spec of mutability
			[74938d0](https://github.com/mekanism/Mekanism/commit/74938d07e78cf292bc0ed31cfef4693edcff96ad) - Allow conversion to bypass rate limit of energy cube and gas tank, and fix improper deserialization of the decimal for floating longs for recipes, also fix filling items with energy in the EnergyInventorySlot, apparently two onContentsChanged calls were missing
			[05313f4](https://github.com/mekanism/Mekanism/commit/05313f4610aa500c6d4401141327bd511b88dc82) - Move energy multiplier for electrolysis recipe to a FloatingLong
			[4135faf](https://github.com/mekanism/Mekanism/commit/4135fafae0433cf8187406672592ca2e6feadd4e) - Improve FEIntegration implementation to better handle if we have multiple energy containers in the handler we are wrapping
			[0f78345](https://github.com/mekanism/Mekanism/commit/0f7834528bc05af68a88f2779b4b9d768d77e04e) - Use util method to make the energy cube scale increase look better and be a smoother transition, and also cleanup some multitank support/tooltip code
			[8727ac5](https://github.com/mekanism/Mekanism/commit/8727ac564c2b99e779e18aba44155287a4ee0ca5) - Cache capacities of a few different multiblocks
			[9e836a5](https://github.com/mekanism/Mekanism/commit/9e836a59ce6bf127cff007ba71d21faef48eb0e1) - Fix network scale calculations on reforming (a pipe being broken), and on merging of networks.
			[b56f8b9](https://github.com/mekanism/Mekanism/commit/b56f8b9ccf39eafecf2a5627e11030a4e9e43142) - Improve some of the checks for seeing if a container has "infinite" of a material
			[6880316](https://github.com/mekanism/Mekanism/commit/68803166ba949f0f9476c691f4a436ff8205bdda) - Minor cleanup to TransporterManager, removing the need for stack size trickery
			[3a9a9bd](https://github.com/mekanism/Mekanism/commit/3a9a9bd2670dfadf4fa38d5bc12a47b79b6b5e15) - Go through and cleanup a few TODOs from the Energy rewrite, and fix a few other issues with values being incorrect, as well as energy not syncing to the robit's gui
			[97bb8d4](https://github.com/mekanism/Mekanism/commit/97bb8d4bf64c69db18b9ea07dcd4ac6cce5461fa) - Cleanup some comments
			[c3f90c7](https://github.com/mekanism/Mekanism/commit/c3f90c7cbe3139a8d540adf5cb6e2fb61ae9155b) - Fix lastEnergyReceived
			[6331aa8](https://github.com/mekanism/Mekanism/commit/6331aa8074340c2e24c99eeba461f5b4d84eabc3) - Fix the energy matrix adding energy to the cached total rather than removing it when energy is removed
			[adfcd34](https://github.com/mekanism/Mekanism/commit/adfcd34950cabd62ab61bfd48c329954417f2b9f) - Implement proper range checks to CachedFloatingLongValue and switch it to strings representing it to properly support unsigned longs if we eventually switch to them. Also switch the SerializerHelper and Json serialization to doing it by number so that if/when we switch to unsigned long it works properly
			[c679c31](https://github.com/mekanism/Mekanism/commit/c679c317d77205455b2eedd3834d1ea006b40793) - Simulate insertion for inserting items into slots that has a slot limit larger than the item's max stack size, as the slot may allow for stacks up to a certain size but also be respecting the max stack size of the item. [#5988](https://github.com/mekanism/Mekanism/issues/5988)
			[94308f5](https://github.com/mekanism/Mekanism/commit/94308f54030f44ea15b4805614f6f15bb34d8f3c) - Implement multiplication for FloatingLongs without having to convert to string and use BigDecimal ([#5987](https://github.com/mekanism/Mekanism/issues/5987))
			[a8ccd36](https://github.com/mekanism/Mekanism/commit/a8ccd36379b26b95056066da1f95a91ecc8beebe) - Set steam to actually have the correct temperature ([#5972](https://github.com/mekanism/Mekanism/issues/5972))
			[0c62ea8](https://github.com/mekanism/Mekanism/commit/0c62ea89817951dc2121d03c5a7fc2e079649651) - Add test lib QuickTheories for property based testing of FloatingLong, and partially reorganize ordering of the FloatingLong class
			[c5a752f](https://github.com/mekanism/Mekanism/commit/c5a752ff7d122799459ef53a8b6a6a263e212ec5) - Spec change to FloatingLong so that the modifyEqual methods return the actual object, so that if it is called on a constant it instead returns a new clean value. Also add javadocs to methods in FloatingLong
			[8e97204](https://github.com/mekanism/Mekanism/commit/8e97204f4e49fdf1c8005391be19b3a9d0adfa6f) - Rewrite handling of upgrade recipes. For the most part properly handles transferring data now. It only does basic testing for finding a matching valid configuration, but if it cannot find one it just doesn't match as a valid input to the recipe [#5743](https://github.com/mekanism/Mekanism/issues/5743), and fix handling of initial container syncing on servers where there may be multiple players.
			[2711127](https://github.com/mekanism/Mekanism/commit/2711127eac3379a471c2019aa9b7cf484333d4e0) - Re-implement instantly turning blocks to active, and having a longer delay threshold before they are considered deactivated. Also fix client energy used calculations being incorrect due to the mutability of objects
			[a2bc3a0](https://github.com/mekanism/Mekanism/commit/a2bc3a0773539f45c3a7da4e850ecd05c6c9aad5) - Store FloatingLongs as a string in NBT to be able to easily switch to unsigned longs if we decide to without voiding saved energy again
			[5450d2d](https://github.com/mekanism/Mekanism/commit/5450d2df813e375f3a106a69f5609ca3737ecc21) - Fix handling of parsing doubles and make it so it parses them consistently
			[31dc0c8](https://github.com/mekanism/Mekanism/commit/31dc0c86014a539a245646a06dfa774c91fee31c) - Fix miner not properly refreshing chunks on changing radius, and don't attempt to check the tile at a position during world loading to hopefully remove the race condition/halting that can occur [#5897](https://github.com/mekanism/Mekanism/issues/5897) [#5978](https://github.com/mekanism/Mekanism/issues/5978)
			[05766a7](https://github.com/mekanism/Mekanism/commit/05766a7a29ba180575b7bfa991af330fca988cc9) - Display energy network capacity as FloatingLong
			[9132e4d](https://github.com/mekanism/Mekanism/commit/9132e4d922333f0c79ea268cc09f12a4b9619d57) - Convert FloatingLong to using an unsigned long ([#5991](https://github.com/mekanism/Mekanism/issues/5991))
			[b509204](https://github.com/mekanism/Mekanism/commit/b509204f3f6d88da6ac7b69516a66b0e960e8ce3) - Bump version to 9.9.17

		MekanismTools-1.15.2-9.9.16.408.jar:
			Warning: Mekanism is currently in alpha, and is not recommended for widespread use in modpacks. There are likely to be game breaking bugs, and updating from one alpha to the next may cause various mekanism blocks to disappear/void their contents. While we will try to not have this happen/keep it to a minimum make sure to make backups. You can read more about the alpha state of this project [here](https://github.com/mekanism/Mekanism#alpha-status).
			[8cfe2a4](https://github.com/mekanism/Mekanism/commit/8cfe2a45b9d1abb719ff85b2b78fb055c4c82f8f) - Fix ore/resource harvest levels ([#5942](https://github.com/mekanism/Mekanism/issues/5942)), fix Paxel harvest levels
			[7923962](https://github.com/mekanism/Mekanism/commit/79239628b9c6f2fc5d7f6a4aadca443678c35dd9) - Hopefully fix transmitter model issues ([#5922](https://github.com/mekanism/Mekanism/issues/5922)), remove client-side markDirty() call We used to call markDirty() on the client as it would trigger an all-sides neighbor update which was necessary for some kind of multi-mod interaction. It's not relevant anymore though as far as I can tell, especially since we have an internal markDirty() impl which prevents such updates.
			[c8476c1](https://github.com/mekanism/Mekanism/commit/c8476c1cb98c2822ad4118db3039d7ea8e1981db) - Fix harvest level changes
			[7e9ff56](https://github.com/mekanism/Mekanism/commit/7e9ff5615b782c192f1caad4ae4d635cc1f6ac75) - Initial experimenting with using vanilla's sync/update packet system rather than our own
			[8ff4379](https://github.com/mekanism/Mekanism/commit/8ff4379299ee41208fb549ac3664bd2f8946d159) - Move all NBT keys to strings. Some things got renamed so various misc things may be voided from Mekanism machines/blocks so I would recommend emptying things just to be on the safe side. In some cases it will just be machine configurations that get reset. Also changed how the chunk loader component saves chunk positions, so you may have to go and reload the chunks to get them to stay loaded again. Things with bounding blocks like digital miners, advanced solar generators, security desks may unbind the bounding block from the actual main block, so should probably be broken/picked up before updating
			[b387c94](https://github.com/mekanism/Mekanism/commit/b387c94c1c2ee214d62feaad17e2bfb7ae71bbdb) - Move JSON string key constants to constants to make it easier to prevent typos and if there are typos at least have them be consistent throughout serialization and deserialization. No current recipes should break as nothing has been renamed.
			[006dbe6](https://github.com/mekanism/Mekanism/commit/006dbe6ce19672947b8f0b7a974cf9801989b923) - Only sync the energy scale to clients for energy cubes unless the gui is open
			[03738bd](https://github.com/mekanism/Mekanism/commit/03738bd2d0c29ebd4deebed92928a125f424c197) - Fix Gas Generator sound, fix Gas Generator 'burn rate' readout ([#5047](https://github.com/mekanism/Mekanism/issues/5047))
			[ce6aec5](https://github.com/mekanism/Mekanism/commit/ce6aec58ac0435b616a6229a9cdd2aafbf463e1c) - Start converting more tiles to syncing stuff via vanilla's packet system. Also fix the Bio generator processing stuff on both the client and the server instead of just the server
			[1e3592b](https://github.com/mekanism/Mekanism/commit/1e3592b2418821a765817746e330d18ed4bb3e66) - Finish converting ITileComponents over to properly syncing their data
			[7c0f0cd](https://github.com/mekanism/Mekanism/commit/7c0f0cd7b706321fc576e169805d69bef5b58e07) - Fix transmitters not checking bounds prior to placement, fix PRC GUI title
			[17019a8](https://github.com/mekanism/Mekanism/commit/17019a84fdc7580acdd4d649b898f7bd72a77fce) - Cleanup some code pertaining to inventory ejecting, ensuring we grab items based on what can be extracted rather than what is directly in the slot. [#5938](https://github.com/mekanism/Mekanism/issues/5938)
			[fc5e007](https://github.com/mekanism/Mekanism/commit/fc5e007cf70dd5998dd7c1fd8c790ccb6353900f) - Fix improper internal insertion restrictions for rotary condensentrator tanks [#5940](https://github.com/mekanism/Mekanism/issues/5940)
			[3ffb6c8](https://github.com/mekanism/Mekanism/commit/3ffb6c8dd142bf330ea5cbabbad5ba92f2a243c3) - Fixes pressurized tubes and mechanical pipes not being able to connect to quantum entangloporters [#5950](https://github.com/mekanism/Mekanism/issues/5950)
			[381eadd](https://github.com/mekanism/Mekanism/commit/381eadd5b5724285e9929ededfe604b492cd1e47) - Fix Fluidic Plenisher GUI, and fix tank insert/extract checks for the electric pump [#5951](https://github.com/mekanism/Mekanism/issues/5951)
			[8b990a4](https://github.com/mekanism/Mekanism/commit/8b990a4d856efbcff0a625f1154725b76715b2d9) - Fix pump & plenisher GUI scaling
			[7d41e3f](https://github.com/mekanism/Mekanism/commit/7d41e3f07cf4a70b6ee556928882a49b1c17711b) - Reinstate active state update delay ([#5848](https://github.com/mekanism/Mekanism/issues/5848)), clean up active state mess A bunch of machines were making particle effects when they shouldn't have been, QE should not have an active state to begin with
			[fb878c0](https://github.com/mekanism/Mekanism/commit/fb878c0bef3078fef0aa2ebfd7bcd1266c41457f) - Split onUpdate into two methods, onUpdateClient and onUpdateServer, to make the code more readable about what is happening on what side, and to note require as much indentation due to isRemote checks
			[e6ac88d](https://github.com/mekanism/Mekanism/commit/e6ac88d5aa68c5cb9b009f3193a7ca881dd66f04) - Cleanup implementation/handling around isCapabilityDisabled, to only have to check it once rather than at each level of super, and to make it so manually calling it can be forgotten about.
			[6371faa](https://github.com/mekanism/Mekanism/commit/6371faa6f4553b0cfee8031941f48eb19ea3190b) - Fix a potential issue with active state changes
			[1951d1a](https://github.com/mekanism/Mekanism/commit/1951d1a6706f5731c57162cdffe37d3f5c9cebe0) - Update machine lighting on world load
			[4c88139](https://github.com/mekanism/Mekanism/commit/4c88139a7bdf20fb1d2bd9db7db7258564be1348) - Work on moving transmitters to syncing their initial data via vanilla's update packet
			[4f5822e](https://github.com/mekanism/Mekanism/commit/4f5822e019f8c77d97fa3130a315907068900dd9) - Work on moving the security desk to using vanilla's update packet and our container sync system. We still need to properly move over syncing the trusted players list
			[e25085c](https://github.com/mekanism/Mekanism/commit/e25085c71651702863446a3e12b661af51660b36) - Create system for syncing lists as elements in containers
			[1fc912d](https://github.com/mekanism/Mekanism/commit/1fc912d362a38a651af7dd9e6131cd0c304feaac) - Move evap controller and resistive heater over to vanilla update packets
			[9527146](https://github.com/mekanism/Mekanism/commit/952714684f1ea5c04c38d8b5aee9c8ad729fb63d) - Create a way to sync filter lists for containers - Cleanup some code pertaining to filters - Compare hashcode of list to check if it is dirty rather than comparing all the elements - Make HashList implement the List spec - Fixed error in loading frequencies
			[0294ecf](https://github.com/mekanism/Mekanism/commit/0294ecf009209a61d2986f7d841e206f5fe6fd65) - Move fluid tank syncing to vanilla packet system, and cleanup implementation of lasers and move that stuff over to the new method of handling sync data
			[757ed70](https://github.com/mekanism/Mekanism/commit/757ed709cca79913d78a99e31bb26f081b850264) - Switch induction matrix over to using vanilla sync packets and the container sync system
			[723c950](https://github.com/mekanism/Mekanism/commit/723c95054df89fa3bde59c83fe6772cfcf52dba9) - Convert dynamic tank, and internal multiblocks to using vanilla update packets, and our container sync system. Also fix an NBT clash that accidentally introduced
			[f0dea9f](https://github.com/mekanism/Mekanism/commit/f0dea9f3e6ff1480b964f9db173e6a4ed7511137) - Fix sparkling effect playing continuously
			[c342a13](https://github.com/mekanism/Mekanism/commit/c342a13347a4e264981aaaea9217700e9e652a1f) - Continue work on converting multiblock packet handling. Also start working on attempting to fix some of the packet spam that multiblocks have
			[437f2fa](https://github.com/mekanism/Mekanism/commit/437f2fa8034f76e090cb3634212ad642a08c9d8e) - Only sync fluid changes for rendering for the fluid tank, boiler water tank, and dynamic tank when the scale changes, rather than on every mb of difference. Also move the scale calculation to a util method to ensure that we render at least something if there is any contents
			[7ebe623](https://github.com/mekanism/Mekanism/commit/7ebe623a8200dd93a0dfceb7113cbd9cb0b41cba) - Use our own sync packet to avoid chunk rendering thrashing
			[9bedc8b](https://github.com/mekanism/Mekanism/commit/9bedc8b6c7a7592ade21b5de7641909ce61d7a57) - Add support for showing how much time our TERs are taking in the debug pie chart for block entities
			[324382d](https://github.com/mekanism/Mekanism/commit/324382d148f884ad8314c5eb3b767d021ce3105c) - Convert reactor over to using the new sync system, and fix the normal laser always firing the max amount of power even when it didn't have that much power stored
			[c27ebf3](https://github.com/mekanism/Mekanism/commit/c27ebf301e11adff738d2920bc828d5cb7801fd8) - Move syncing of formula to our container sync system, and fix a few different issues with rendering of specific gui pieces
			[4c490e2](https://github.com/mekanism/Mekanism/commit/4c490e27155dbf3bdd2bc8e692168b4832432927) - Switch steam tanks for the turbine, reactor, and boiler to be gas tanks and use the gas variant of steam, rather than fluid tanks using "liquid steam" - Add in scale target for the steam rendering of the turbine and boiler so that we don't have to send an update packet every time the stored amount changes by a single mb - Fixed reactor active state - Fix reactor not actually using any inputs
			[eb2d176](https://github.com/mekanism/Mekanism/commit/eb2d176996b33cb91f80e75998ec99d99dbaa000) - Remove specific implementation of a few interfaces when the super class already implements them
			[7facb95](https://github.com/mekanism/Mekanism/commit/7facb956203e6f15b0227c40c4b306f81797c3bd) - Only sync different gui information for multiblocks when the correct tab is being displayed
			[361fbf9](https://github.com/mekanism/Mekanism/commit/361fbf93da4774bbebef6dbb5e52d04977c41e73) - Always send the structure if the multiblock tile is rendering. It is a relatively small amount of extra data, removes the need for the client to send a data request, and we have also reduced a lot of multiblock packet spam already
			[f79b42c](https://github.com/mekanism/Mekanism/commit/f79b42cd00dcc801eb3382c48e1968022b28eb00) - Remove no longer used baseBlock from Model3D, and improve the logic used for picking the direction to render the teleporter's portal in. No longer should have an edge case that causes it to sometimes render in the wrong direction
			[382dc22](https://github.com/mekanism/Mekanism/commit/382dc2233e712e3aac71a4a8140f230c11e640bc) - Fix attempting to send packet initially on every block placement, and fix a few packets being sent before the data to send is set
			[1736513](https://github.com/mekanism/Mekanism/commit/1736513bd7ab6a3b04c40e343766f195cfada9c9) - Update dev version of forge + mappings, and switch back to the latest FG3, now that the fixes needed have been merged
			[7e21519](https://github.com/mekanism/Mekanism/commit/7e2151973aaad868963953a7f976b674cd256bb7) - Fix a few bugs with the robit's repair screen [#5964](https://github.com/mekanism/Mekanism/issues/5964)
			[4799260](https://github.com/mekanism/Mekanism/commit/4799260e7229c43be5a163b06ed31fc69e750191) - Various improvements to text boxes in GUIs, and makes sure the text persists even if minecraft's window is resized
			[4666b85](https://github.com/mekanism/Mekanism/commit/4666b85cc1b0c777d96dec9cd6592953550efb59) - Make less classes implement ITileNetwork, and fix sound for stepping on and off of chargepads
			[efa7f88](https://github.com/mekanism/Mekanism/commit/efa7f8860f4132ec0d458800eaa57a34a2f79e91) - Move teleporter and quantum entangloporter syncing over to using the container sync system
			[0e70296](https://github.com/mekanism/Mekanism/commit/0e70296e877fae87f3b32adee0017af7b1ae90e4) - Fix a few minor issues with the reactor and its formed state
			[83b4fff](https://github.com/mekanism/Mekanism/commit/83b4fff99e226a85c62794e1e68bcdc093fb5557) - Move registering our transmitter model loader even earlier. Should hopefully prevent [#5881](https://github.com/mekanism/Mekanism/issues/5881) and [#5963](https://github.com/mekanism/Mekanism/issues/5963)
			[349ff4c](https://github.com/mekanism/Mekanism/commit/349ff4cacce75d9fe2aa79da4d9657bfb36e4487) - Remove a couple cases we set the glow, as it did not seem to change anything, and move the configurable machine overlay to using the block highlight event to reduce the amount of calculations that have to happen if you have a lot of machines and are holding a configurator to ray trace and see if you are hovering that machine
			[1c13d44](https://github.com/mekanism/Mekanism/commit/1c13d440875eac8fd773e4c5f53902b580ff3146) - Improve performance of rendering various TERs by batching calls made to the same render type at least within an individual TERs
			[a66793a](https://github.com/mekanism/Mekanism/commit/a66793a20c4b70b594773b68d727bb22a85b3a99) - Improve and fix a few bugs in the flame renderer
			[6dcef43](https://github.com/mekanism/Mekanism/commit/6dcef43b9c930f0186d54d10fd25a8bda02b9282) - Improve accuracy of getRenderBoundingBox so that tiles can be properly culled when they are not in view, and add a full block render bounding box to transmitters so that they can render their contents even when they are barely on screen - Improve rendering logic of turbine rotors when not inside a formed turbine - Fixed turbine rotors sending update packets before the client has a tile for that position
			[e940835](https://github.com/mekanism/Mekanism/commit/e940835e926a8e91f61aa11cde77f7f883fee6d1) - Improve the render bounding boxes for multiblocks and the digital miner
			[0b36c7a](https://github.com/mekanism/Mekanism/commit/0b36c7acc5ceb5017ee82b6188e898369c458af8) - Further cleanup of NBTConstants, and fix model loader causing issues in runData
			[79b67de](https://github.com/mekanism/Mekanism/commit/79b67dedad3d89592b3d621d36880d409bf497be) - Fix actually moving remaining items instead of just simulating the move, and thus duping the remaining items [#5966](https://github.com/mekanism/Mekanism/issues/5966)
			[aea149f](https://github.com/mekanism/Mekanism/commit/aea149f63c1f87eead952a1b93dcae36bffb7bc4) - Do some basic cleanup to RenderResizableCuboid and remove a bunch of unused code
			[bf6119d](https://github.com/mekanism/Mekanism/commit/bf6119db3360ce3a3a06f493b964523b95ee3736) - Bump version to 9.9.16

	Minecolonies (minecolonies-0.10.758-BETA-universal.jar --> minecolonies-0.11.790-ALPHA-universal.jar):
		minecolonies-0.11.790-ALPHA-universal.jar:
			Minecolonies Changelog
			Version: 0.11.790-ALPHA
			* Ai exception (#4511)
			Display AI exceptions as interaction Fix efficient tool for farmer

		minecolonies-0.11.788-ALPHA-universal.jar:
			Minecolonies Changelog
			Version: 0.11.788-ALPHA
			* Schematics115 (#4480)
			Medieval Oak Update * Fixed broken barrel texture (#4494)
			Fixes broken texture of the working barrel * GUI Item Tooltips Improvements (#4486)
			Fixes tooltips not rendering in Citizen's GUI Fixes tooltips not rendering in Furnace/Crafting Teach Recipe GUIs Fixes tooltips not rendering in the Field GUI Fixes tooltips rendering below JEI's item list in the Rack

		minecolonies-0.11.787-ALPHA-universal.jar:
			Minecolonies Changelog
			Version: 0.11.787-ALPHA
			* Hotfix citizen save crash

		minecolonies-0.11.785-BETA-universal.jar:
			Minecolonies Changelog
			Version: 0.11.785-BETA
			* Schematics115 (#4468)
			Bunch of schematic fixes * Model Optimizations (#4477)
			Fixes item display properties Optimizes models Barrel/Storage Rack resourcepack compat Cleans up odd texture uv's Updates several textures to the 1.14+ style Removes transparent pixels in the compost texture * Update zh_cn.json (#4471)
			* Update zh_cn.json
			* Merge remote-tracking branch 'origin/version/1.15' into version/1.15
			* Hotfix sided error (#4475)
			Hotfix #778 * Supply loot/ fix furnace users
			Add supply camps as dungeon/village/shipwreck loot,(dungeon-camps, villages-both, shipwreck-ship) which are free to place even if you already built one.
			Improve tool detection, by using testtools and block break speed (saw this beeing done by waila/one probe aswell) Fix ItemStackUtils bug, where NBT matching was ignored if only one of the stacks had a tag. Fix an InventoryUtils bug, causing furnace users to not work * hotfix #4476 * hotfix citizen purchase * Feature/skill rework (#4447)
			New Skill System:
			Instead of the 5 basic skills there are now 11 skills. 10 normal skills that are used for the jobs
			Intelligence which is the main driver of the leveling speed The only way to level intelligence is at the library or when the citizens are still children at a school (next building to be implemented)
			Skills are now leveled and skills themselves influence the efficiency of the workers.
			Every job requires 2 of them. Those two make him work "better" and he levels up those two skills while he goes
			Every skill has a complementary (Gets another 1% of xp) and a contrary skill (loses 1%)
			This PR simplifies the leveling system as well by moving the skills in the building and removing the load from the view and AIs to calculate the modifiers. * Add server command usage (#4452)

		minecolonies-0.11.784-ALPHA-universal.jar:
			Minecolonies Changelog
			Version: 0.11.784-ALPHA
			* Schematics115 (#4468)
			Bunch of schematic fixes

		minecolonies-0.11.783-ALPHA-universal.jar:
			Minecolonies Changelog
			Version: 0.11.783-ALPHA
			* Model Optimizations (#4477)
			Fixes item display properties Optimizes models Barrel/Storage Rack resourcepack compat Cleans up odd texture uv's Updates several textures to the 1.14+ style Removes transparent pixels in the compost texture

		minecolonies-0.11.781-ALPHA-universal.jar:
			Minecolonies Changelog
			Version: 0.11.781-ALPHA
			*
			Update zh_cn.json (#4471)
			*
			Update zh_cn.json

		minecolonies-0.11.780-ALPHA-universal.jar:
			Minecolonies Changelog
			Version: 0.11.780-ALPHA
			* Merge remote-tracking branch 'origin/version/1.15' into version/1.15
			* hotfix #4476

		minecolonies-0.11.779-ALPHA-universal.jar:
			Minecolonies Changelog
			Version: 0.11.779-ALPHA
			* Hotfix sided error (#4475)
			Hotfix #778

		minecolonies-0.11.778-ALPHA-universal.jar:
			Minecolonies Changelog
			Version: 0.11.778-ALPHA
			* Supply loot/ fix furnace users
			Add supply camps as dungeon/village/shipwreck loot,(dungeon-camps, villages-both, shipwreck-ship) which are free to place even if you already built one.
			Improve tool detection, by using testtools and block break speed (saw this beeing done by waila/one probe aswell) Fix ItemStackUtils bug, where NBT matching was ignored if only one of the stacks had a tag. Fix an InventoryUtils bug, causing furnace users to not work

		minecolonies-0.11.777-ALPHA-universal.jar:
			Minecolonies Changelog
			Version: 0.11.777-ALPHA
			* hotfix citizen purchase

		minecolonies-0.11.776-ALPHA-universal.jar:
			Minecolonies Changelog
			Version: 0.11.776-ALPHA
			* Feature/skill rework (#4447)
			New Skill System:
			Instead of the 5 basic skills there are now 11 skills. 10 normal skills that are used for the jobs
			Intelligence which is the main driver of the leveling speed The only way to level intelligence is at the library or when the citizens are still children at a school (next building to be implemented)
			Skills are now leveled and skills themselves influence the efficiency of the workers.
			Every job requires 2 of them. Those two make him work "better" and he levels up those two skills while he goes
			Every skill has a complementary (Gets another 1% of xp) and a contrary skill (loses 1%)
			This PR simplifies the leveling system as well by moving the skills in the building and removing the load from the view and AIs to calculate the modifiers.

		minecolonies-0.11.775-ALPHA-universal.jar:
			Minecolonies Changelog
			Version: 0.11.775-ALPHA
			* Add server command usage (#4452)

		minecolonies-0.10.773-BETA-universal.jar:
			Minecolonies Changelog
			Version: 0.10.773-BETA
			* Schematics115 (#4421)
			Fix hospital symbols * Update zh_cn.json (#4438)
			Chinese translation update * Updating the PathFinding Heuristics. (#4442)
			This PR updates the path finding heuristics to be more concise and much more efficient.
			A* Background In A* (The path finding algorithm used by us) the next evaluated node is determined by its node-value, called the f-value. This f-value is composed out of two factors. The c-value, known as the cost. This is the cost it would take an entity to walk from the starting position of the path (usually the current position of the entity) to the node in question. And the second factor is the h-value, known as the heuristic. This value is an indication for the algorithm, and indicates how much it would cost an entity using the path to walk from the current node to a destination. Now if the h-value is not accurate a lot of nodes will have the same f-value and as such the algorithm has to consider a lot of them, if it wants to make progress. As such the correct heuristic is very important.
			Current situation: To calculate the heuristic we currently use: -(startEndDist - destination.manhattanDistance(pos)) this heuristic is not very usable in a 3D world, since it produces a lot of the same f-values, making the system search more blocks then it needs to. Also using the manhattan distance causes the citizens to walk in L-Shaped routes. Not going actually the shortest route: which would be diagonally.
			New situation: In the new situation we use the squared euclidian distance, which produces a much more accurate heuristic h-value across the board. Additionally this now actually causes the algorithm to produce pathing results which go diagonally.
			Screenshots before: * Rework citizen entity handling, should avoid fake citizens. (#4439)
			Rework citizen entity handling, should avoid fake citizens. * Showing error locations when placing supplyships.
			* fix #4435

		minecolonies-0.10.771-RELEASE-universal.jar:
			Minecolonies Changelog
			Version: 0.10.771-RELEASE
			* Schematics115 (#4421)
			Fix hospital symbols * Update zh_cn.json (#4438)
			Chinese translation update * Updating the PathFinding Heuristics. (#4442)
			This PR updates the path finding heuristics to be more concise and much more efficient.
			A* Background In A* (The path finding algorithm used by us) the next evaluated node is determined by its node-value, called the f-value. This f-value is composed out of two factors. The c-value, known as the cost. This is the cost it would take an entity to walk from the starting position of the path (usually the current position of the entity) to the node in question. And the second factor is the h-value, known as the heuristic. This value is an indication for the algorithm, and indicates how much it would cost an entity using the path to walk from the current node to a destination. Now if the h-value is not accurate a lot of nodes will have the same f-value and as such the algorithm has to consider a lot of them, if it wants to make progress. As such the correct heuristic is very important.
			Current situation: To calculate the heuristic we currently use: -(startEndDist - destination.manhattanDistance(pos)) this heuristic is not very usable in a 3D world, since it produces a lot of the same f-values, making the system search more blocks then it needs to. Also using the manhattan distance causes the citizens to walk in L-Shaped routes. Not going actually the shortest route: which would be diagonally.
			New situation: In the new situation we use the squared euclidian distance, which produces a much more accurate heuristic h-value across the board. Additionally this now actually causes the algorithm to produce pathing results which go diagonally.
			Screenshots before: * Rework citizen entity handling, should avoid fake citizens. (#4439)
			Rework citizen entity handling, should avoid fake citizens. * Showing error locations when placing supplyships.
			* fix #4435
			* Friendly fire (#4432)
			Remove friendly fire Fix NPE Remove not necessary logging Avoid early disease * Moar fixes (#4429)
			Fix stuck fisherman Fix baker losing res Fix pasting doesn't reregister blocks Fix baker not complaining about furnaces Fixes recipe loading (Recipes won't get missing on the server anymore) * Again fixes (#4428)
			* fix rack placement #4423
			* fix inventory handling
			*
			Fix citizen limit calculation (#4228) (#4426)
			*
			Fix citizen limit calculation (#4228)
			* Schematics115 (#4419)
			Fortress schematic fixes * Fix postbox shape, fix crusher crafting (#4409)
			Fix postbox shape Fix crusher crafting on request Allow multiple supplycamps/ships styles Fix dman model Extend decoration block limit * Update zh_cn.json (#4401)
			Fix chinese translation * Schematics115 (#4417)
			Update and add building schematics * reset check to fix fuel issues * hotfix #4411 * Builder fixes (#4404)
			This PR aims to improve some builder handling:
			Always call the connectBlockToBuilding even if we already have it. This allows to re-register things if they failed earlier.
			Some blocks like glasspains might get lost in an upgrade only because the new glasspane got a different blockstate. We should avoid this. * hotfix hospital recipe * hotfix raider crash * add loottable and recipe * Feature/hospital (#4396)
			This adds some new mechanic to the game: Diseases
			Citizens may now get certain diseases.
			What kind of diseases and what they can be cured with can be configured in the config file. How often a citizen gets a disease can also be configured Certain jobs have an increased risk The more citizens a colony have the higher the risk is too. There is a random chance for citizens to heal miraculously There is now a hospital:
			Healer worker heals citizens with illnesses For that he requests the cure items from the colony There is a random chance (depending on his level) to heal citizens without needing the cure Citizens with low HP < 2 hearts also go to the hospital to get healed Healer also heals players with low HP if the healer has nothing to do it will go visit the colony to find citizens with low HP closeby (40 blocks distance per building level). Changes proposed in this pull request: Adds diseases and healer Fix placement handler for barrackstower substitution blocks Fix University Research switching * hotfix inventory call from merge issue, fixing build * Inventoryutils issues (#4385)
			Fixes a multitude of inventory issues, from dupes to lost stacks. Few cases of unhandled remainders, bugged comparisons etc.
			These are all bugfixes for the current inventory utils, though I'll probably rework the class as whole aswell later, squishing it down to usecases and avoiding duplicate implementations/unused stuff * Raiders rework for 1.15 (#4393)
			Originally this was to fix loading/unloading/counting issues with the raiders, but ended up reworking it a bit and creating a new event system which can be used for future colony events as well.
			Whats new: We now have ColonyEvents, which are registered through a forge registry for them, so other mods can add events aswell. Colonyevents are managed through a new EventManager, which updates them and saves/reads them from nbt. Those events receive a regular tick from the colony,albeit pretty slow(each 500 ticks) to update their status and do whatever update logic they need to. Colony events can also register/unregister entities related to them and spawn temporary structures. For managing the structures the EventManager has an EventStructureManager. The structure manager allows spawning structures for a given event and takes a backup schematic of the surroindings. Once the event is removed(or was not loaded during colony load) the backup schematic is put back in place.
			I've translated both the raider and pirate events over as colonyevents, which also allows us now to spawn multiple ones seperatly if we want to. Atm I've added that once a raid succeeds the biggest raid size it gets split up into an additional raid from another spawn pos.
			Both raid events now keep track of their entities and respawn them if those were not actually killed(onDeath triggered), but removed by other means, e.g. minecraft itself removing it, this also includes chunk unloads. The respawn is limited to the previous position, or a max distance of the original spawn position, so that when the colony is still active, but the raiders happen to be unloaded it tries to place them a bit closer in a loaded chunk.
			The PirateEvent now has a maximum amount of pirates it can have active, depending on the amount of spawners remaining(spawnercount * 2 +10). It also now spawns additional pirates,depending on shipsize, without a player beeing close to the spawners,... * exp fixes (#4390)
			-raids drop exp -When guard is following you, gives you effect without particles -Fixed infinite loop when citizen earns too much exp too quickly * hotfix import * Fix rack/chest placement (#4384)
			Fix rack placement * Hotfix damage and home happiness indicators beeing displayed incorrectly. (#4387) * fix loot of mobs (#4383)
			* fixed loot tables
			* Adds stacktraces to error-level issues. (#4375)
			Adds stacktraces to error-level issues. Should help for stuff like the building is null issue. Also removed a case where we returned an existing colony on an attempt to create a new one, as followup logic is certainly aimed at a new colony and would corrupt the existing one. * Bump forge and structurize requirements (#4370)
			* Bump forge and structurize requirements
			*
			Fix organization (#4360)
			*
			Fix organization
			* Correct naming for Fortress
			* Add universal placeholder (#4365)
			Adds the universal placeholder block functionality Fix complete pasting out of colonies * hotfix, disable button if building level doesn't permit research * Fix/several (#4351)
			Unregister event handlers properly Vastly improve jump pathfinding (for half and not full blocks) Improves scan tool issues Fix scaffolding use Fix rack placement Fix building hut rotation * All hut schematics updated for 1.15 as of today * Hotfix to avoid info loss on pathpoint * remove e * add loottable

		minecolonies-0.10.770-BETA-universal.jar:
			Minecolonies Changelog
			Version: 0.10.770-BETA
			* Schematics115 (#4421)
			Fix hospital symbols * Update zh_cn.json (#4438)
			Chinese translation update * Updating the PathFinding Heuristics. (#4442)
			This PR updates the path finding heuristics to be more concise and much more efficient.
			A* Background In A* (The path finding algorithm used by us) the next evaluated node is determined by its node-value, called the f-value. This f-value is composed out of two factors. The c-value, known as the cost. This is the cost it would take an entity to walk from the starting position of the path (usually the current position of the entity) to the node in question. And the second factor is the h-value, known as the heuristic. This value is an indication for the algorithm, and indicates how much it would cost an entity using the path to walk from the current node to a destination. Now if the h-value is not accurate a lot of nodes will have the same f-value and as such the algorithm has to consider a lot of them, if it wants to make progress. As such the correct heuristic is very important.
			Current situation: To calculate the heuristic we currently use: -(startEndDist - destination.manhattanDistance(pos)) this heuristic is not very usable in a 3D world, since it produces a lot of the same f-values, making the system search more blocks then it needs to. Also using the manhattan distance causes the citizens to walk in L-Shaped routes. Not going actually the shortest route: which would be diagonally.
			New situation: In the new situation we use the squared euclidian distance, which produces a much more accurate heuristic h-value across the board. Additionally this now actually causes the algorithm to produce pathing results which go diagonally.
			Screenshots before: * Rework citizen entity handling, should avoid fake citizens. (#4439)
			Rework citizen entity handling, should avoid fake citizens. * Showing error locations when placing supplyships.
			* fix #4435

		minecolonies-0.10.768-ALPHA-universal.jar:
			Minecolonies Changelog
			Version: 0.10.768-ALPHA
			* Schematics115 (#4421)
			Fix hospital symbols * Update zh_cn.json (#4438)
			Chinese translation update

		minecolonies-0.10.766-ALPHA-universal.jar:
			Minecolonies Changelog
			Version: 0.10.766-ALPHA
			* Updating the PathFinding Heuristics. (#4442)
			This PR updates the path finding heuristics to be more concise and much more efficient.
			A* Background In A* (The path finding algorithm used by us) the next evaluated node is determined by its node-value, called the f-value. This f-value is composed out of two factors. The c-value, known as the cost. This is the cost it would take an entity to walk from the starting position of the path (usually the current position of the entity) to the node in question. And the second factor is the h-value, known as the heuristic. This value is an indication for the algorithm, and indicates how much it would cost an entity using the path to walk from the current node to a destination. Now if the h-value is not accurate a lot of nodes will have the same f-value and as such the algorithm has to consider a lot of them, if it wants to make progress. As such the correct heuristic is very important.
			Current situation: To calculate the heuristic we currently use: -(startEndDist - destination.manhattanDistance(pos)) this heuristic is not very usable in a 3D world, since it produces a lot of the same f-values, making the system search more blocks then it needs to. Also using the manhattan distance causes the citizens to walk in L-Shaped routes. Not going actually the shortest route: which would be diagonally.
			New situation: In the new situation we use the squared euclidian distance, which produces a much more accurate heuristic h-value across the board. Additionally this now actually causes the algorithm to produce pathing results which go diagonally.
			Screenshots before:

		minecolonies-0.10.765-ALPHA-universal.jar:
			Minecolonies Changelog
			Version: 0.10.765-ALPHA
			* Rework citizen entity handling, should avoid fake citizens. (#4439)
			Rework citizen entity handling, should avoid fake citizens.

		minecolonies-0.10.764-ALPHA-universal.jar:
			Minecolonies Changelog
			Version: 0.10.764-ALPHA
			*
			Showing error locations when placing supplyships.
			*
			fix #4435

		minecolonies-0.10.763-BETA-universal.jar:
			Minecolonies Changelog
			Version: 0.10.763-BETA
			* Friendly fire (#4432)
			Remove friendly fire Fix NPE Remove not necessary logging Avoid early disease * Moar fixes (#4429)
			Fix stuck fisherman Fix baker losing res Fix pasting doesn't reregister blocks Fix baker not complaining about furnaces Fixes recipe loading (Recipes won't get missing on the server anymore) * Again fixes (#4428)
			* fix rack placement #4423
			* fix inventory handling
			*
			Fix citizen limit calculation (#4228) (#4426)
			*
			Fix citizen limit calculation (#4228)

		minecolonies-0.10.762-ALPHA-universal.jar:
			Minecolonies Changelog
			Version: 0.10.762-ALPHA
			* Friendly fire (#4432)
			Remove friendly fire Fix NPE Remove not necessary logging Avoid early disease

		minecolonies-0.10.761-ALPHA-universal.jar:
			Minecolonies Changelog
			Version: 0.10.761-ALPHA
			* Moar fixes (#4429)
			Fix stuck fisherman Fix baker losing res Fix pasting doesn't reregister blocks Fix baker not complaining about furnaces Fixes recipe loading (Recipes won't get missing on the server anymore)

		minecolonies-0.10.760-ALPHA-universal.jar:
			Minecolonies Changelog
			Version: 0.10.760-ALPHA
			*
			Again fixes (#4428)
			*
			fix rack placement #4423
			* fix inventory handling

		minecolonies-0.10.759-ALPHA-universal.jar:
			Minecolonies Changelog
			Version: 0.10.759-ALPHA
			*
			Fix citizen limit calculation (#4228) (#4426)
			*
			Fix citizen limit calculation (#4228)

	Nature's Aura (NaturesAura-23.2.jar --> NaturesAura-23.3.jar):
		NaturesAura-23.3.jar:
			* Fixed bamboo being literally the worst (There's a vanilla bug where using bone meal on bamboo that is close to world height causes a crash; vegetational increase was triggering that crash :^))
			* Disallowed disabling all negative aura unbalance effects
			* Added a config to move the aura cache bar to the other side of the hotbar

	Nether Portal Spread (Archived file --> netherpspr_1.15-3.0.jar):
		netherpspr_1.15-3.0.jar:
			Version 3.0
			Adds a config file in ./config/netherportalspread/ named 'spreadsettings.txt' where can be specified which blocks convert into which and their weight. See the description for more details.

	Powah! (Powah-1.15.2-1.1.7.jar --> Powah-1.15.2-1.1.11.jar):
		Powah-1.15.2-1.1.11.jar:
			1.1.11
			* Rewrite the network system, this should fix all problem in the multi player world.
			* Updated [Lollipop](https://www.curseforge.com/minecraft/mc-mods/lollipop/files) to 1.0.13
			1.1.10
			* Re-Fixed bug when can not change channels, Redstone settings and side config.
			* Added Chinese localization zh_cn.json, Thanks to EnterFor.
			* Updated Lollipop to 1.0.12
			1.1.9
			* Added support for energizing recipes from json like vanilla, examples: [http://bit.ly/3baHdLr]().
			* Fixed buttons not functioning in multiPlayer world.
			* Fixed empty tags.
			* Updated Lollipop to 1.0.11
			1.1.8
			* Fixed Energy data not appearing in TOP/Waila.
			* Fixed redstone stop magmator from receiving fluids.
			* Replaced some recipe tags with actual item stacks until empty tags bux got fixed.
			* Added new command to generate CraftTweaker example zs script instead of generating on startup.
			* Updated Lollipop to 1.0.10
			Important NOTE!!: There is two bugs still can't fix them: (empty forge tags) and (some times button not functioning in multiPlayer world)
			hoping i can fix theme in the next release, also i'm experiencing some health issues and that's why im slowly working on this mod and 3 other
			projects two of theme are not released yet.
			1.1.7
			* Added hovering hud to energizing rods to see the energy stored.
			* Separated redstone on/off for generators from the energy transfer.
			* Updated Lollipop to 1.0.9
			1.1.6
			* Fixed Uraninite ores not generating in some biomes/dimensions, Closes #49.
			* Fixed cables power delivery sorting.
			* Updated Lollipop to 1.0.8
			1.1.5
			* Fixed Binding card causing a client crash, Closes #47.
			* Fixed dry ice not dropping because of missing loot table.
			* Updated Lollipop to 1.0.7
			1.1.4
			* Fixed a dummy dump server crash
			* Updated Lollipop to 1.0.6
			1.1.3
			* Fixed Gui configuration screen offset.
			* Fixed weird block lighting.
			* Updated Lollipop to 1.0.5
			1.1.2
			* Fixed Manual 2 items pages has the same text Closes #40.
			1.1.1
			* Fixed some slots not rendering in to the GUI.
			* Added missing GUI's screen titles.
			* Updated Lollipop to 1.0.4
			1.1.0
			* Fixed Magmator fluid wrong rendering.
			* Added Blazing Crystal block as a heat source for the Thermo gen with heat of 2800c.
			* Changed Nitro crystal recipe output from 24 to 16.
			* Updated Lollipop to 1.0.3
			1.0.3
			* Re-Implemented crafttweaker for energizing recipes.
			* Added recipe for the manual (forgot to add it in last version).
			* Fixed some blocks not keeping their energy when broken.
			* Updated Lollipop to 1.0.2
			1.0.2
			* Re-added the manual with new entries for batteries and lens of ender and updated some screenshots.
			* Fixed cables has wrong config.
			* Fixed reactor tooltip.
			1.0.1
			* Fixed reactor placing overlay not rendering correctly.
			* Updated Lollipop to 1.0.1.
			1.0.0
			* Added Two new tiers "Starter" and "Nitro".
			* Added Batteries charge items when is in player inventory.
			* Now Energy Hopper, Energy discharger and Player transmitter all has the known tiers.
			* Added Dimensional binding card a replacement of Dimensional player transmitter.
			* Reworked most of models/textures.
			* Rebalanced energy outputs and some crafting recipes.
			* the Book (manual) still WIP!!
			* 1.15.2 initial release.
			* Updated Lollipop to 1.0.0.
			* Require forge 31.1.12 or higher.
			NOTE!: this is the first initial release, it may contains bug or crash your world.

		Powah-1.15.2-1.1.10.jar:
			1.1.10
			* Re-Fixed bug when can not change channels, Redstone settings and side config.
			* Added Chinese localization zh_cn.json, Thanks to EnterFor.
			* Updated [Lollipop](https://www.curseforge.com/minecraft/mc-mods/lollipop/files) to 1.0.12
			1.1.9
			* Added support for energizing recipes from json like vanilla, examples: [http://bit.ly/3baHdLr]().
			* Fixed buttons not functioning in multiplayer world.
			* Fixed empty tags.
			* Updated Lollipop to 1.0.11
			1.1.8
			* Fixed Energy data not appearing in TOP/Waila.
			* Fixed redstone stop magmator from receiving fluids.
			* Replaced some recipe tags with actual item stacks until empty tags bux got fixed.
			* Added new command to generate CraftTweaker example zs script instead of generating on startup.
			* Updated Lollipop to 1.0.10
			Important NOTE!!: There is two bugs still can't fix them: (empty forge tags) and (some times button not functioning in multiPlayer world)
			hoping i can fix theme in the next release, also i'm experiencing some health issues and that's why im slowly working on this mod and 3 other
			projects two of theme are not released yet.
			1.1.7
			* Added hovering hud to energizing rods to see the energy stored.
			* Separated redstone on/off for generators from the energy transfer.
			* Updated Lollipop to 1.0.9
			1.1.6
			* Fixed Uraninite ores not generating in some biomes/dimensions, Closes #49.
			* Fixed cables power delivery sorting.
			* Updated Lollipop to 1.0.8
			1.1.5
			* Fixed Binding card causing a client crash, Closes #47.
			* Fixed dry ice not dropping because of missing loot table.
			* Updated Lollipop to 1.0.7
			1.1.4
			* Fixed a dummy dump server crash
			* Updated Lollipop to 1.0.6
			1.1.3
			* Fixed Gui configuration screen offset.
			* Fixed weird block lighting.
			* Updated Lollipop to 1.0.5
			1.1.2
			* Fixed Manual 2 items pages has the same text Closes #40.
			1.1.1
			* Fixed some slots not rendering in to the GUI.
			* Added missing GUI's screen titles.
			* Updated Lollipop to 1.0.4
			1.1.0
			* Fixed Magmator fluid wrong rendering.
			* Added Blazing Crystal block as a heat source for the Thermo gen with heat of 2800c.
			* Changed Nitro crystal recipe output from 24 to 16.
			* Updated Lollipop to 1.0.3
			1.0.3
			* Re-Implemented crafttweaker for energizing recipes.
			* Added recipe for the manual (forgot to add it in last version).
			* Fixed some blocks not keeping their energy when broken.
			* Updated Lollipop to 1.0.2
			1.0.2
			* Re-added the manual with new entries for batteries and lens of ender and updated some screenshots.
			* Fixed cables has wrong config.
			* Fixed reactor tooltip.
			1.0.1
			* Fixed reactor placing overlay not rendering correctly.
			* Updated Lollipop to 1.0.1.
			1.0.0
			* Added Two new tiers "Starter" and "Nitro".
			* Added Batteries charge items when is in player inventory.
			* Now Energy Hopper, Energy discharger and Player transmitter all has the known tiers.
			* Added Dimensional binding card a replacement of Dimensional player transmitter.
			* Reworked most of models/textures.
			* Rebalanced energy outputs and some crafting recipes.
			* the Book (manual) still WIP!!
			* 1.15.2 initial release.
			* Updated Lollipop to 1.0.0.
			* Require forge 31.1.12 or higher.
			NOTE!: this is the first initial release, it may contains bug or crash your world.

		Powah-1.15.2-1.1.9.jar:
			1.1.9
			* Added support for energizing recipes from json like vanilla, examples: [http://bit.ly/3baHdLr]().
			* Fixed buttons not functioning in multiplayer world.
			* Fixed empty tags.
			* Updated [Lollipop](https://www.curseforge.com/minecraft/mc-mods/lollipop/files) to 1.0.11
			1.1.8
			* Fixed Energy data not appearing in TOP/Waila.
			* Fixed redstone stop magmator from receiving fluids.
			* Replaced some recipe tags with actual item stacks until empty tags got fixed.
			* Added new command to generate CraftTweaker example zs script instead of generating on startup.
			* Updated Lollipop to 1.0.10
			Important NOTE!!: There is two bugs still can't fix them: (empty forge tags) and (some times button not functioning in multiPlayer world)
			hoping i can fix theme in the next release, also i'm experiencing some health issues and that's why im slowly working on this mod and 3 other
			projects two of theme are not released yet.
			1.1.7
			* Added hovering hud to energizing rods to see the energy stored.
			* Separated redstone on/off for generators from the energy transfer.
			* Updated Lollipop to 1.0.9
			1.1.6
			* Fixed Uraninite ores not generating in some biomes/dimensions, Closes #49.
			* Fixed cables power delivery sorting.
			* Updated Lollipop to 1.0.8
			1.1.5
			* Fixed Binding card causing a client crash, Closes #47.
			* Fixed dry ice not dropping because of missing loot table.
			* Updated Lollipop to 1.0.7
			1.1.4
			* Fixed a dummy dump server crash
			* Updated Lollipop to 1.0.6
			1.1.3
			* Fixed Gui configuration screen offset.
			* Fixed weird block lighting.
			* Updated Lollipop to 1.0.5
			1.1.2
			* Fixed Manual 2 items pages has the same text Closes #40.
			1.1.1
			* Fixed some slots not rendering in to the GUI.
			* Added missing GUI's screen titles.
			* Updated Lollipop to 1.0.4
			1.1.0
			* Fixed Magmator fluid wrong rendering.
			* Added Blazing Crystal block as a heat source for the Thermo gen with heat of 2800c.
			* Changed Nitro crystal recipe output from 24 to 16.
			* Updated Lollipop to 1.0.3
			1.0.3
			* Re-Implemented crafttweaker for energizing recipes.
			* Added recipe for the manual (forgot to add it in last version).
			* Fixed some blocks not keeping their energy when broken.
			* Updated Lollipop to 1.0.2
			1.0.2
			* Re-added the manual with new entries for batteries and lens of ender and updated some screenshots.
			* Fixed cables has wrong config.
			* Fixed reactor tooltip.
			1.0.1
			* Fixed reactor placing overlay not rendering correctly.
			* Updated Lollipop to 1.0.1.
			1.0.0
			* Added Two new tiers "Starter" and "Nitro".
			* Added Batteries charge items when is in player inventory.
			* Now Energy Hopper, Energy discharger and Player transmitter all has the known tiers.
			* Added Dimensional binding card a replacement of Dimensional player transmitter.
			* Reworked most of models/textures.
			* Rebalanced energy outputs and some crafting recipes.
			* the Book (manual) still WIP!!
			* 1.15.2 initial release.
			* Updated Lollipop to 1.0.0.
			* Require forge 31.1.12 or higher.
			NOTE!: this is the first initial release, it may contains bug or crash your world.

		Powah-1.15.2-1.1.8.jar:
			1.1.8
			* Fixed Energy data not appearing in TOP/Waila.
			* Fixed Redstone stop magmator from receiving fluids.
			* Replaced some recipe tags with actual item stacks until empty tags got fixed.
			* Added new command to generate CraftTweaker example zs script instead of generating on startup.
			Important NOTE!!: There is two bugs still can't fix them: (empty forge tags) and (some times button not functioning in multiPlayer world)
			hoping i can fix theme in the next release, also I'm experiencing some health issues and that's why I'm slowly working on this mod and 3 other
			projects two of theme are not released yet.
			1.1.7
			* Added hovering hud to energizing rods to see the energy stored.
			* Separated redstone on/off for generators from the energy transfer.
			* Updated Lollipop to 1.0.9
			1.1.6
			* Fixed Uraninite ores not generating in some biomes/dimensions, Closes #49.
			* Fixed cables power delivery sorting.
			* Updated Lollipop to 1.0.8
			1.1.5
			* Fixed Binding card causing a client crash, Closes #47.
			* Fixed dry ice not dropping because of missing loot table.
			* Updated Lollipop to 1.0.7
			1.1.4
			* Fixed a dummy dump server crash
			* Updated Lollipop to 1.0.6
			1.1.3
			* Fixed Gui configuration screen offset.
			* Fixed weird block lighting.
			* Updated Lollipop to 1.0.5
			1.1.2
			* Fixed Manual 2 items pages has the same text Closes #40.
			1.1.1
			* Fixed some slots not rendering in to the GUI.
			* Added missing GUI's screen titles.
			* Updated Lollipop to 1.0.4
			1.1.0
			* Fixed Magmator fluid wrong rendering.
			* Added Blazing Crystal block as a heat source for the Thermo gen with heat of 2800c.
			* Changed Nitro crystal recipe output from 24 to 16.
			* Updated Lollipop to 1.0.3
			1.0.3
			* Re-Implemented crafttweaker for energizing recipes.
			* Added recipe for the manual (forgot to add it in last version).
			* Fixed some blocks not keeping their energy when broken.
			* Updated Lollipop to 1.0.2
			1.0.2
			* Re-added the manual with new entries for batteries and lens of ender and updated some screenshots.
			* Fixed cables has wrong config.
			* Fixed reactor tooltip.
			1.0.1
			* Fixed reactor placing overlay not rendering correctly.
			* Updated Lollipop to 1.0.1.
			1.0.0
			* Added Two new tiers "Starter" and "Nitro".
			* Added Batteries charge items when is in player inventory.
			* Now Energy Hopper, Energy discharger and Player transmitter all has the known tiers.
			* Added Dimensional binding card a replacement of Dimensional player transmitter.
			* Reworked most of models/textures.
			* Rebalanced energy outputs and some crafting recipes.
			* the Book (manual) still WIP!!
			* 1.15.2 initial release.
			* Updated Lollipop to 1.0.0.
			* Require forge 31.1.12 or higher.
			NOTE!: this is the first initial release, it may contains bug or crash your world.

	RFTools Base (rftoolsbase-1.15-1.0.0-alpha.jar --> rftoolsbase-1.15-1.0.1-alpha.jar):
		rftoolsbase-1.15-1.0.1-alpha.jar:
			* Ported the filter module (for storage, builder, ...)

	RFTools Builder (rftoolsbuilder-1.15-2.0.0-alpha.jar --> rftoolsbuilder-1.15-2.0.1-alpha.jar):
		rftoolsbuilder-1.15-2.0.1-alpha.jar:
			* Fixed a problem where the shield wasn't decomposed properly if the projector block was broken
			* Re-implemented the filter module for the Builder

	RFTools Storage (rftoolsstorage-1.15-1.0.2-alpha.jar --> rftoolsstorage-1.15-1.0.3-alpha.jar):
		rftoolsstorage-1.15-1.0.3-alpha.jar:
			* Re-implemented the filter module for the Modular Storage

	RFTools Utility (rftoolsutility-1.15-2.0.0-alpha.jar --> rftoolsutility-1.15-2.0.1-alpha.jar):
		rftoolsutility-1.15-2.0.1-alpha.jar:
			* Fixed the simple dialer model
			* Fixed a problem in the crafter where the filter slot would accept anything with item automation
			* Re-implemented the filter module for the crafter

	Ring of Attraction [FORGE] (RingOfAttraction-1.15.2-1.1.20.jar --> RingOfAttraction-1.15.2-1.1.22.jar):
		RingOfAttraction-1.15.2-1.1.22.jar:
			* Updated Forge to 31.1.27
			* Updated Curios to 2.0.2

		RingOfAttraction-1.15.2-1.1.21.jar:
			Updated Forge to 31.1.25

	Simply Backpacks (simplybackpacks-1.15.2-1.4.0.jar --> simplybackpacks-1.15.2-1.4.3.jar):
		simplybackpacks-1.15.2-1.4.3.jar:
			Fixed item loss bug with shift clicking stacks.

		simplybackpacks-1.15.2-1.4.2.jar:
			More prevention of nesting items.
			Fixed display names not showing when opening backpack via hotkey.

		simplybackpacks-1.15.2-1.4.1.jar:
			Fixed opening backpack from offhand.
			Fixed renamed backpacks not displaying the custom name. (closes [#10](https://github.com/Flanks255/simplybackpacks/issues/10))

	Structurize (structurize-0.10.274-ALPHA.jar --> structurize-0.10.288-ALPHA.jar):
		structurize-0.10.288-ALPHA.jar:
			Minecolonies Changelog
			Version: 0.10.288-ALPHA
			* fix multiblock right click

		structurize-0.10.287-ALPHA.jar:
			Minecolonies Changelog
			Version: 0.10.287-ALPHA
			* Merge remote-tracking branch 'origin/version/1.15' into version/1.15
			* hotfix item detection

		structurize-0.10.286-ALPHA.jar:
			Minecolonies Changelog
			Version: 0.10.286-ALPHA
			* Model Optimizations (#107)
			Optimizes Multiblock model Fixes item display properties Updates the placeholder & substitution blocks to the 1.14+ texture for planks

		structurize-0.10.285-BETA.jar:
			Minecolonies Changelog
			Version: 0.10.285-BETA
			No Changes detected!

		structurize-0.10.284-BETA.jar:
			Minecolonies Changelog
			Version: 0.10.284-BETA
			* Fix data tags for cactus blocks
			*
			Tree view (#102)
			*
			Tree view
			* Fix freemode handling (#101)
			* fix deco hut block placement
			*
			Fix racks (#99)
			*
			Always override te when placing
			*
			Always override TEs
			* Fix #100
			* Even more secure te placement
			* Secure te placement
			* Fix te placement
			* Fix BO bugs
			* Merge remote-tracking branch 'origin/version/1.15' into version/1.15
			*
			Feature/faster rendering (#91)
			*
			Fix few rendering bottlenecks making it way more lagless
			* Bump required forge
			* fix #4369
			* Hotfix itemframe placement
			* avoid invalid positions.
			* fix to >= and <=
			* version with custom logging, don't use
			*
			Shingle fix (#98)
			*
			Fix up datagen for shingles to stop shadow
			* Fix caliper, fix offset calc
			* Add safeguard, fix button replacement
			* also add sixwayblock
			* Merge remote-tracking branch 'origin/version/1.15' into version/1.15
			* Makes saving entities optional (#96)
			* Hotfix structure rotation (with anchors)
			* Hotfix timberframe rotation too
			* Fix wall/fence etc replacement
			* Merge remote-tracking branch 'origin/version/1.15' into version/1.15
			* Zoom drag view, event propagation, int to double mouse conversion (#94)
			Introduce new Zoom Drag view, user can zoom in/out and drag content like in most online maps. Rotation can be added into this view easily if anyone wanted Mouse events are now propagated using boolean return value and propagation is stopped if any pane returns true Mouse events now use double instead of int type for mouse position (source vanilla) * fix #4327 * fix duplicate keys * Closes #95
			Asher and jsons... :D * Brick Timber Frames (#93)
			* added brick timber frame variants
			*
			Create a universal placeholder block (#92)
			*
			Create a universal placeholder block
			* Merge remote-tracking branch 'origin/version/1.15' into version/1.15
			* Working (#89)
			Looks good * Fix offset and rendering for mirror/rotation * don't render substitution blocks * Fixes * Build fix * Update DataFixerUtils.java * Improve rendering performance (#87)
			Improve rendering performance significantly for 1.15.2 * fix rgba set for colors too * set box color * start position * alph first * better rgba setting * Fix naming and scroll direction * recalculate content height * add additional method * Finish adding dragView * wip dragView * fix texture * avoid blockUpdate * bed replacement fix * First 1.15.2 release * Fix fluid rendering * fix naming scheme * Fix rendering and rotating
			missing entity rendering only * Make schematics render at least * push before * don't render fluid for now * More attempts still not working. * Finish remaining compile errors * Change method names * Attempting to get the rendering to work. * Attempting to get rendering to work. * Fix data path * some meddling * Bunch more fixes for 1.15 * Some more porting * A bunch more fixes * Port a lot of the graphic stuff * Merge start * fix lang formatting for 1.14 * Merge remote-tracking branch 'origin/version/1.14' into version/1.14 * fixed a typo (#83) * correctly return requested block for subblocks * Add a new panetype, the gradient drawer * Added cactus and planks to the BlockTags (#82)
			Signed-off-by: Robin de Jong <=> * always render solid substitution blocks as dirt * add maxContentHeight to sections list * dynamically populate list and trigger list items (#79) * add scan command * 1.40 compat, fix crash * fix multipiston push * change shingle to wood material * create fence tags * Fix entity placing, force forge version * Remove IForgeBlockState, enable optifine compat * try this to fix decorations in smp * fix scan tool SMP * Revert "make it work"
			This reverts commit 8151d2e326d56d314428dd607a16876b9f31040a. * make it work * gameversion * Merge remote-tracking branch 'origin/version/1.14' into version/1.14 * Fix flower pots and note blocks * fix * Merge remote-tracking branch 'origin/version/1.14' into version/1.14 * Bump Gradle, Forge, try to fix version thing * Prepare minecolonies issue fix

		structurize-0.10.283-ALPHA.jar:
			Minecolonies Changelog
			Version: 0.10.283-ALPHA
			* Add not water error
			* fix #105
			* Fix data tags for cactus blocks
			*
			Tree view (#102)
			*
			Tree view
			* Fix freemode handling (#101)
			* fix deco hut block placement
			*
			Fix racks (#99)
			*
			Always override te when placing
			*
			Always override TEs
			* Fix #100
			* Even more secure te placement
			* Secure te placement
			* Fix te placement
			* Fix BO bugs
			* Merge remote-tracking branch 'origin/version/1.15' into version/1.15
			* fix #4369
			*
			Feature/faster rendering (#91)
			*
			Fix few rendering bottlenecks making it way more lagless
			* Bump required forge
			* Hotfix itemframe placement
			* avoid invalid positions.
			* fix to >= and <=

		structurize-0.10.282-RELEASE.jar:
			Minecolonies Changelog
			Version: 0.10.282-RELEASE
			* Fix data tags for cactus blocks
			*
			Tree view (#102)
			*
			Tree view
			* Fix freemode handling (#101)
			* fix deco hut block placement
			*
			Fix racks (#99)
			*
			Always override te when placing
			*
			Always override TEs
			* Fix #100
			* Even more secure te placement
			* Secure te placement
			* Fix te placement
			* Fix BO bugs
			* Merge remote-tracking branch 'origin/version/1.15' into version/1.15
			*
			Feature/faster rendering (#91)
			*
			Fix few rendering bottlenecks making it way more lagless
			* Bump required forge
			* fix #4369
			* Hotfix itemframe placement
			* avoid invalid positions.
			* fix to >= and <=
			* version with custom logging, don't use
			*
			Shingle fix (#98)
			*
			Fix up datagen for shingles to stop shadow
			* Fix caliper, fix offset calc
			* Add safeguard, fix button replacement
			* also add sixwayblock
			* Merge remote-tracking branch 'origin/version/1.15' into version/1.15
			* Makes saving entities optional (#96)
			* Hotfix structure rotation (with anchors)
			* Hotfix timberframe rotation too
			* Fix wall/fence etc replacement
			* Merge remote-tracking branch 'origin/version/1.15' into version/1.15
			* Zoom drag view, event propagation, int to double mouse conversion (#94)
			Introduce new Zoom Drag view, user can zoom in/out and drag content like in most online maps. Rotation can be added into this view easily if anyone wanted Mouse events are now propagated using boolean return value and propagation is stopped if any pane returns true Mouse events now use double instead of int type for mouse position (source vanilla) * fix #4327 * fix duplicate keys * Closes #95
			Asher and jsons... :D * Brick Timber Frames (#93)
			* added brick timber frame variants
			*
			Create a universal placeholder block (#92)
			*
			Create a universal placeholder block
			* Merge remote-tracking branch 'origin/version/1.15' into version/1.15
			* Working (#89)
			Looks good * Fix offset and rendering for mirror/rotation * don't render substitution blocks * Fixes * Build fix * Update DataFixerUtils.java * Improve rendering performance (#87)
			Improve rendering performance significantly for 1.15.2 * fix rgba set for colors too * set box color * start position * alph first * better rgba setting * Fix naming and scroll direction * recalculate content height * add additional method * Finish adding dragView * wip dragView * fix texture * avoid blockUpdate * bed replacement fix * First 1.15.2 release * Fix fluid rendering * fix naming scheme * Fix rendering and rotating
			missing entity rendering only * Make schematics render at least * push before * don't render fluid for now * More attempts still not working. * Finish remaining compile errors * Change method names * Attempting to get the rendering to work. * Attempting to get rendering to work. * Fix data path * some meddling * Bunch more fixes for 1.15 * Some more porting * A bunch more fixes * Port a lot of the graphic stuff * Merge start * fix lang formatting for 1.14 * Merge remote-tracking branch 'origin/version/1.14' into version/1.14 * fixed a typo (#83) * correctly return requested block for subblocks * Add a new panetype, the gradient drawer * Added cactus and planks to the BlockTags (#82)
			Signed-off-by: Robin de Jong <=> * always render solid substitution blocks as dirt * add maxContentHeight to sections list * dynamically populate list and trigger list items (#79) * add scan command * 1.40 compat, fix crash * fix multipiston push * change shingle to wood material * create fence tags * Fix entity placing, force forge version * Remove IForgeBlockState, enable optifine compat * try this to fix decorations in smp * fix scan tool SMP * Revert "make it work"
			This reverts commit 8151d2e326d56d314428dd607a16876b9f31040a. * make it work * gameversion * Merge remote-tracking branch 'origin/version/1.14' into version/1.14 * Fix flower pots and note blocks * fix * Merge remote-tracking branch 'origin/version/1.14' into version/1.14 * Bump Gradle, Forge, try to fix version thing * Prepare minecolonies issue fix

		structurize-0.10.281-ALPHA.jar:
			Minecolonies Changelog
			Version: 0.10.281-ALPHA
			* Add not water error

		structurize-0.10.280-ALPHA.jar:
			Minecolonies Changelog
			Version: 0.10.280-ALPHA
			* fix #105

		structurize-0.10.279-RELEASE.jar:
			Minecolonies Changelog
			Version: 0.10.279-RELEASE
			* Fix data tags for cactus blocks
			*
			Tree view (#102)
			*
			Tree view
			* Fix freemode handling (#101)
			* fix deco hut block placement
			*
			Fix racks (#99)
			*
			Always override te when placing
			*
			Always override TEs
			* Fix #100
			* Even more secure te placement
			* Secure te placement
			* Fix te placement
			* Fix BO bugs
			* Merge remote-tracking branch 'origin/version/1.15' into version/1.15
			*
			Feature/faster rendering (#91)
			*
			Fix few rendering bottlenecks making it way more lagless
			* Bump required forge
			* fix #4369
			* Hotfix itemframe placement
			* avoid invalid positions.
			* fix to >= and <=
			* version with custom logging, don't use
			*
			Shingle fix (#98)
			*
			Fix up datagen for shingles to stop shadow
			* Fix caliper, fix offset calc
			* Add safeguard, fix button replacement
			* also add sixwayblock
			* Merge remote-tracking branch 'origin/version/1.15' into version/1.15
			* Makes saving entities optional (#96)
			* Hotfix structure rotation (with anchors)
			* Hotfix timberframe rotation too
			* Fix wall/fence etc replacement
			* Merge remote-tracking branch 'origin/version/1.15' into version/1.15
			* Zoom drag view, event propagation, int to double mouse conversion (#94)
			Introduce new Zoom Drag view, user can zoom in/out and drag content like in most online maps. Rotation can be added into this view easily if anyone wanted Mouse events are now propagated using boolean return value and propagation is stopped if any pane returns true Mouse events now use double instead of int type for mouse position (source vanilla) * fix #4327 * fix duplicate keys * Closes #95
			Asher and jsons... :D * Brick Timber Frames (#93)
			* added brick timber frame variants
			*
			Create a universal placeholder block (#92)
			*
			Create a universal placeholder block
			* Merge remote-tracking branch 'origin/version/1.15' into version/1.15
			* Working (#89)
			Looks good * Fix offset and rendering for mirror/rotation * don't render substitution blocks * Fixes * Build fix * Update DataFixerUtils.java * Improve rendering performance (#87)
			Improve rendering performance significantly for 1.15.2 * fix rgba set for colors too * set box color * start position * alph first * better rgba setting * Fix naming and scroll direction * recalculate content height * add additional method * Finish adding dragView * wip dragView * fix texture * avoid blockUpdate * bed replacement fix * First 1.15.2 release * Fix fluid rendering * fix naming scheme * Fix rendering and rotating
			missing entity rendering only * Make schematics render at least * push before * don't render fluid for now * More attempts still not working. * Finish remaining compile errors * Change method names * Attempting to get the rendering to work. * Attempting to get rendering to work. * Fix data path * some meddling * Bunch more fixes for 1.15 * Some more porting * A bunch more fixes * Port a lot of the graphic stuff * Merge start * fix lang formatting for 1.14 * Merge remote-tracking branch 'origin/version/1.14' into version/1.14 * fixed a typo (#83) * correctly return requested block for subblocks * Add a new panetype, the gradient drawer * Added cactus and planks to the BlockTags (#82)
			Signed-off-by: Robin de Jong <=> * always render solid substitution blocks as dirt * add maxContentHeight to sections list * dynamically populate list and trigger list items (#79) * add scan command * 1.40 compat, fix crash * fix multipiston push * change shingle to wood material * create fence tags * Fix entity placing, force forge version * Remove IForgeBlockState, enable optifine compat * try this to fix decorations in smp * fix scan tool SMP * Revert "make it work"
			This reverts commit 8151d2e326d56d314428dd607a16876b9f31040a. * make it work * gameversion * Merge remote-tracking branch 'origin/version/1.14' into version/1.14 * Fix flower pots and note blocks * fix * Merge remote-tracking branch 'origin/version/1.14' into version/1.14 * Bump Gradle, Forge, try to fix version thing * Prepare minecolonies issue fix

		structurize-0.10.278-BETA.jar:
			Minecolonies Changelog
			Version: 0.10.278-BETA
			* Fix data tags for cactus blocks
			*
			Tree view (#102)
			*
			Tree view
			* Fix freemode handling (#101)
			* fix deco hut block placement
			*
			Fix racks (#99)
			*
			Always override te when placing
			*
			Always override TEs
			* Fix #100
			* Even more secure te placement
			* Secure te placement
			* Fix te placement
			* Fix BO bugs
			* Merge remote-tracking branch 'origin/version/1.15' into version/1.15
			*
			Feature/faster rendering (#91)
			*
			Fix few rendering bottlenecks making it way more lagless
			* Bump required forge
			* fix #4369
			* Hotfix itemframe placement
			* avoid invalid positions.
			* fix to >= and <=
			* version with custom logging, don't use
			*
			Shingle fix (#98)
			*
			Fix up datagen for shingles to stop shadow
			* Fix caliper, fix offset calc
			* Add safeguard, fix button replacement
			* also add sixwayblock
			* Merge remote-tracking branch 'origin/version/1.15' into version/1.15
			* Makes saving entities optional (#96)
			* Hotfix structure rotation (with anchors)
			* Hotfix timberframe rotation too
			* Fix wall/fence etc replacement
			* Merge remote-tracking branch 'origin/version/1.15' into version/1.15
			* Zoom drag view, event propagation, int to double mouse conversion (#94)
			Introduce new Zoom Drag view, user can zoom in/out and drag content like in most online maps. Rotation can be added into this view easily if anyone wanted Mouse events are now propagated using boolean return value and propagation is stopped if any pane returns true Mouse events now use double instead of int type for mouse position (source vanilla) * fix #4327 * fix duplicate keys * Closes #95
			Asher and jsons... :D * Brick Timber Frames (#93)
			* added brick timber frame variants
			*
			Create a universal placeholder block (#92)
			*
			Create a universal placeholder block
			* Merge remote-tracking branch 'origin/version/1.15' into version/1.15
			* Working (#89)
			Looks good * Fix offset and rendering for mirror/rotation * don't render substitution blocks * Fixes * Build fix * Update DataFixerUtils.java * Improve rendering performance (#87)
			Improve rendering performance significantly for 1.15.2 * fix rgba set for colors too * set box color * start position * alph first * better rgba setting * Fix naming and scroll direction * recalculate content height * add additional method * Finish adding dragView * wip dragView * fix texture * avoid blockUpdate * bed replacement fix * First 1.15.2 release * Fix fluid rendering * fix naming scheme * Fix rendering and rotating
			missing entity rendering only * Make schematics render at least * push before * don't render fluid for now * More attempts still not working. * Finish remaining compile errors * Change method names * Attempting to get the rendering to work. * Attempting to get rendering to work. * Fix data path * some meddling * Bunch more fixes for 1.15 * Some more porting * A bunch more fixes * Port a lot of the graphic stuff * Merge start * fix lang formatting for 1.14 * Merge remote-tracking branch 'origin/version/1.14' into version/1.14 * fixed a typo (#83) * correctly return requested block for subblocks * Add a new panetype, the gradient drawer * Added cactus and planks to the BlockTags (#82)
			Signed-off-by: Robin de Jong <=> * always render solid substitution blocks as dirt * add maxContentHeight to sections list * dynamically populate list and trigger list items (#79) * add scan command * 1.40 compat, fix crash * fix multipiston push * change shingle to wood material * create fence tags * Fix entity placing, force forge version * Remove IForgeBlockState, enable optifine compat * try this to fix decorations in smp * fix scan tool SMP * Revert "make it work"
			This reverts commit 8151d2e326d56d314428dd607a16876b9f31040a. * make it work * gameversion * Merge remote-tracking branch 'origin/version/1.14' into version/1.14 * Fix flower pots and note blocks * fix * Merge remote-tracking branch 'origin/version/1.14' into version/1.14 * Bump Gradle, Forge, try to fix version thing * Prepare minecolonies issue fix

		structurize-0.10.275-ALPHA.jar:
			Minecolonies Changelog
			Version: 0.10.275-ALPHA
			* Fix data tags for cactus blocks

	TerraForged (0.0.3 --> 0.0.10):
		0.0.10:
			User Notice:
			Please back-up your previous TerraForged worlds before updating the mod
			Fixes:
			* fixed bamboo jungles not being used
			* fixed snowy tundra generating forests rather than sparse individual trees
			* fixed a couple of functions (beach + treeline) to work better with custom sea-levels
			* fixed an issue where sections of the world might missalign height-wise with neighbouring sections

		0.0.9:
			User Notice:
			Please back-up your previous TerraForged worlds before updating the mod
			Fixes:
			* Fixed an issue introduced in 0.0.8 where strata layer depth would be calculated incorrectly
			* Fixed an issue where grass added by vilalge pieces wouldn't get eroded like the surrounding terrain

		0.0.8:
			User Notice:
			Please back-up your previous TerraForged worlds before updating the mod
			Changes:
			* added min/max sliders to control world temperature and moisture
			* added terrain slice gui on the preview map
			* copy the preview map seed to the seed input box when pressing 'done' in the gui settings
			* improvements to frozen-ocean surface
			* fix village pieces placing with terrain in them
			* further optimizations to increase speed & reduce memory overhead
			Fixes:
			* fix out-of-bounds crash related to extreme heights
			* hopefully fixed terrain gen stuck on 0% on low core-count pc's
			* fixed birch bushes spawning with persistent leaves
			* add compat fix for issue with Lost Cities

		0.0.7:
			Bug Fix:
			* Fixed strange class loading issue on servers

		0.0.5:
			User Notice:
			Please back-up your previous TerraForged worlds before updating the mod
			Changes
			* Obey mobSpawning=false flag during chunk-gen
			* Expose stronghold spread setting
			* Tweaked ore generation to better-match vanilla mechanics
			* Added custom sediment disks for sand, dirt, clay, gravel
			* Enabled stone blobs when strata decorator is disabled
			* Only extend feature bases downwards until a solid block is hit
			* Changed 'export' button to 'set as defaults' (ctrl+click == reset defaults)
			* Increased the default frequency of rivers
			* Added slider to control the frequency of rivers
			* Tweak structure settings defaults
			Performance/Optimizations
			* Improved performance of settings blocks in chunks during generation
			* Optimized caching for heightmap & rivermap regions
			* Hopefully fixed some deadlock issues
			Bug Fixes
			* Fixed a couple more biome lookup funcs that affect stronghold placement & player spawning
			* Fixed bug where erosion decorator created ridges on chunk edges (when strata decorator is disabled)
			* Fix another case where setting terrain weight to zero would cause a crash
			* Fixed lakes generating with ocean biome
			* Added tall_birch biomes to custom trees list

		0.0.4:
			User Notice:
			Please back-up your previous TerraForged worlds before updating the mod
			Changes:
			* Adjusted the min/max limits of a few of the gui sldiers (namely continent & biome size)
			* Tundra biome type is coloured white on the settings gui screen
			* Disabled queuing of worldgen regions
			Bug Fixes:
			* fix using odd third-party mod blocks in terrain
			* fix gui colouring of the temperature/moisture map view
			* fix custom trees being used when saplings grow naturally even when custom biome features are disabled

	The One Probe (theoneprobe-1.15-2.0.1.jar --> theoneprobe-1.15-2.0.2.jar):
		theoneprobe-1.15-2.0.2.jar:
			* pupnewfster did various fixes on The One Probe:
			* Fixed checking for empty liquids
			* Fix mob spawner's showing an error for the entity type when on servers
			* Fix viewing brewing information of brewing stands
			* Fix a few config options always being reset due to being "invalid". The config system does not fully support non ArrayList defaults, unless you provide a custom element validator
			* Switch from using ByteBuf to PacketBuffer, it is a bit of a mess in the API and has a couple TODOs of things that should be done in 1.16, but in order to keep backwards compat it was needed
			* Send dimension type by registry name rather than int id to ensure that they match on both the client and server

	Titanium (titanium-1.15.2-2.3.6.jar --> titanium-1.15.2-2.3.7.jar):
		titanium-1.15.2-2.3.7.jar:
			No changelog available.

	Torch Slabs Mod (Torch Slab Mod 1.15.1 v1.5 --> Torch Slab Mod mc 1.15.2 v1.6.3):
		Torch Slab Mod mc 1.15.2 v1.6.3:
			Fixed initialisation error experienced by several users.

		Torch Slab Mod mc 1.15.2 v1.6.1	:
			Fixed issue were the mod would cause a MC crash if Buzzier Bees was not loaded.
			Fixed "light gray candle" block registry name, so the model and loot table should now work properly.
			Fixed candle BlockEntity for the scented slab and pad variants to now properly load.
			Fixed properties for Lantern Pads, were they required a pickax to harvest the item.
			Lantern and Torch Pads blocks can now be rotated.

	Trample Stopper (tramplestopper-1.15.2-2.0.0.beta-universal.jar --> tramplestopper-1.15.2-2.0.0.1-universal.jar):
		tramplestopper-1.15.2-2.0.0.1-universal.jar:
			No changelog available.

		tramplestopper-1.15.2-2.0.0.1-universal.jar:
			No changelog available.

	Ultra Amplified Dimension (Ultra Amplified Dimension V.7.2.4 (Forge 1.15.2) -->  Ultra Amplified Dimension V.7.3.0 (Forge 1.15.2)):
		 Ultra Amplified Dimension V.7.3.0 (Forge 1.15.2):
			(V.7.3.0 Changes) (1.15.2 Minecraft)
			Config:
			-Added config to change the size of the Stronghold.
			-Increased maximum spawnrate of dungeons from 300 to 1000. Dungeon overload time!
			Blocks:
			-Amplified Portal block is now immune to Wither to prevent it from being destroyed and trapping players in the dimension.
			-All glow variants of blocks (except for Glowstone Ore) can be created in a Crafting Table! Place the non-glow version of the block in the center and put Glowstone Dust above, below, left, and right of the block to craft the glow variant.
			Structures/Features:
			-Updated dungeons and adjusted some spawn rates of types of spawners to be in parity with Repurposed Structure Mod. Biggest chages is the inclusion of vines in Jungle and Dark Forest dungeons and a ceiling of themed blocks is added to some of the dungeons as well. Phantom spawners for End dungeons is reduced to 2% now.
			-Changed loot in hallway chests in underground Stonebrick Fortress from using Nether Fortress loot to using Village Blacksmither, Village Armorer, and Jungle Temple loot.
			-Added vines that spawns on and around the underground Stonebrick Fortress.
			-Added Mossy Stonebrick to Swamp/Dark Forest themed Mineshaft and Stone themed Mineshafts can now have Mossy Cobblestone Wall for the arch supports.
			-Horned Swamp Trees (the 2x2 trees in Spooky Swamp Biome) now places dirt below the bottom of its trunk so the trunk doesn't partially hang in midair off of ledges anymore.

	Vanilla Things (vanillathings-1.15.2-0.5.6.jar --> vanillathings-1.15.2-0.5.7.jar):
		vanillathings-1.15.2-0.5.7.jar:
			Changes
			* Fixed crafting recipes - [Issue#8](https://github.com/SaymN/VanillaThings/issues/8) / [Issue#9](https://github.com/SaymN/VanillaThings/issues/9)
			In this update, you can now craft any type of slabs back to blocks!

		vanillathings-1.15.1-0.5.7.jar:
			Changes
			* Fixed crafting recipes - [Issue#8](https://github.com/SaymN/VanillaThings/issues/8) / [Issue#9](https://github.com/SaymN/VanillaThings/issues/9)
			In this update, you can now craft any type of slabs back to blocks!

	Waystones (Waystones_1.15.2-6.0.0.jar --> Waystones_1.15.2-6.0.1.jar):
		Waystones_1.15.2-6.0.1.jar:
			Fixed XP and effects getting desynced after dimensional teleport
			Fixed disabled sort button rendering the same as non-disabled sort buttons
			Fixed inventoryButtonCooldown config option not being used (warpStoneCooldown was used instead)
			Fixed bound scrolls not being bound when right-clicking waystones
			Re-enabled JourneyMap compat

	XNet (xnet-1.15-2.0.1-alpha.jar --> xnet-1.15-2.0.2-alpha.jar):
		xnet-1.15-2.0.2-alpha.jar:
			* Darkere fixed some GUI translation keys
			* 'kr' translation file from Mindy
			* Fixed the models for the router and wireless router
			* Fixed various cable models

	☃ Snow! Real Magic! (SnowRealMagic-1.15.2-1.7.2.jar --> SnowRealMagic-1.15.2-1.7.3.jar):
		SnowRealMagic-1.15.2-1.7.3.jar:
			Fix random chunk crash
			Improve graphic performance

Removed:
- Blue Power
- Client Tweaks
- No Recipe Book
- The Lost Cities
- U Team Core
- Worldgeneration Profiler

Generated using [ChangelogGenerator 2.0.0-pre3](https://github.com/TheRandomLabs/ChangelogGenerator).
